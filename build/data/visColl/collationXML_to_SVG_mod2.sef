<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="20" packageVersion="1" saxonVersion="9.7.0.21" timeStamp="2018-06-04T15:52:17.73+02:00" target="JS">
 <co id="0" binds="1 2 0">
  <template name="Q{}bifoliaDiagram_SQ" flags="os" line="711" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" slots="29">
   <sequence role="body" vn="20" baseUri="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" defaultElementNS="http://schoenberginstitute.org/schema/collation" ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="712">
    <param name="subquires" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <param line="713" name="manuscript" slot="1">
     <str role="select" val=""/>
     <supplied role="conversion" slot="1"/>
    </param>
    <param line="714" name="counter" slot="2">
     <int role="select" val="1"/>
     <supplied role="conversion" slot="2"/>
    </param>
    <param line="715" name="countRegularBifolia" slot="3" as="xs:integer">
     <int role="select" val="1"/>
     <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|countRegularBifolia">
      <check card="1" diag="8|0|XTTE0590|countRegularBifolia">
       <cvUntyped to="xs:integer">
        <data>
         <supplied slot="3"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="716" name="countRegularBifolia2" slot="4">
     <int role="select" val="1"/>
     <supplied role="conversion" slot="4"/>
    </param>
    <param line="717" name="countSubquireLeaves" slot="5">
     <str role="select" val=""/>
     <supplied role="conversion" slot="5"/>
    </param>
    <param line="718" name="centralLeftLeafPos" slot="6">
     <str role="select" val=""/>
     <supplied role="conversion" slot="6"/>
    </param>
    <param line="719" name="NSubquires" slot="7" as="xs:integer">
     <int role="select" val="1"/>
     <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|NSubquires">
      <check card="1" diag="8|0|XTTE0590|NSubquires">
       <cvUntyped to="xs:integer">
        <data>
         <supplied slot="7"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="721" var="positions_SQ" as="attribute(Q{}positions_SQ)*" slot="8" eval="3">
     <slash>
      <conditionalSort>
       <fn name="exists">
        <tail start="2">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
          <varRef name="subquires" slot="0"/>
         </treat>
        </tail>
       </fn>
       <docOrder intra="0">
        <slash>
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
          <varRef name="subquires" slot="0"/>
         </treat>
         <filter flags="ip">
          <axis name="child" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
          <varRef name="counter" slot="2"/>
         </filter>
        </slash>
       </docOrder>
      </conditionalSort>
      <axis name="attribute" nodeTest="attribute(Q{}positions_SQ)" jsTest="return item.name=='positions_SQ'"/>
     </slash>
     <let line="723" var="subquireLevel" as="attribute(Q{}subquireLevel)*" slot="9" eval="3">
      <slash>
       <conditionalSort>
        <fn name="exists">
         <tail start="2">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
           <varRef name="subquires" slot="0"/>
          </treat>
         </tail>
        </fn>
        <docOrder intra="0">
         <slash>
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
           <varRef name="subquires" slot="0"/>
          </treat>
          <filter flags="ip">
           <axis name="child" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
           <varRef name="counter" slot="2"/>
          </filter>
         </slash>
        </docOrder>
       </conditionalSort>
       <axis name="attribute" nodeTest="attribute(Q{}subquireLevel)" jsTest="return item.name=='subquireLevel'"/>
      </slash>
      <let line="730" var="previousPositions_SQ" as="xs:integer?" slot="10" eval="7">
       <choose>
        <fn name="exists">
         <let var="vv:loc1121698687" as="xs:numeric?" slot="11" eval="7">
          <arith op="-" calc="a-a">
           <cvUntyped to="xs:double">
            <atomSing card="?" diag="1|0||-">
             <varRef name="counter" slot="2"/>
            </atomSing>
           </cvUntyped>
           <int val="1"/>
          </arith>
          <let var="vv:loc1637470026" as="xs:double?" slot="12" eval="7">
           <arith op="-" calc="d-d">
            <cvUntyped to="xs:double">
             <atomSing card="?" diag="1|0||-">
              <varRef name="subquireLevel" slot="9"/>
             </atomSing>
            </cvUntyped>
            <int val="1"/>
           </arith>
           <slash>
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
             <varRef name="subquires" slot="0"/>
            </treat>
            <subscript>
             <filter flags="b">
              <axis name="child" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
              <gc op="=" card="1:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
               <data>
                <axis name="attribute" nodeTest="attribute(Q{}subquireLevel)" jsTest="return item.name=='subquireLevel'"/>
               </data>
               <varRef name="vv:loc1637470026" slot="12"/>
              </gc>
             </filter>
             <varRef name="vv:loc1121698687" slot="11"/>
            </subscript>
           </slash>
          </let>
         </let>
        </fn>
        <cast as="xs:integer" emptiable="1">
         <atomSing card="?" diag="2|0||cast as">
          <slash>
           <docOrder intra="0">
            <let var="vv:loc2089840709" as="xs:double?" slot="13" eval="7">
             <arith op="-" calc="d-d">
              <cvUntyped to="xs:double">
               <atomSing card="?" diag="1|0||-">
                <varRef name="subquireLevel" slot="9"/>
               </atomSing>
              </cvUntyped>
              <int val="1"/>
             </arith>
             <slash>
              <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
               <varRef name="subquires" slot="0"/>
              </treat>
              <first>
               <filter flags="b">
                <axis name="child" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
                <gc op="=" card="1:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                 <data>
                  <axis name="attribute" nodeTest="attribute(Q{}subquireLevel)" jsTest="return item.name=='subquireLevel'"/>
                 </data>
                 <varRef name="vv:loc2089840709" slot="13"/>
                </gc>
               </filter>
              </first>
             </slash>
            </let>
           </docOrder>
           <axis name="attribute" nodeTest="attribute(Q{}positions_SQ)" jsTest="return item.name=='positions_SQ'"/>
          </slash>
         </atomSing>
        </cast>
        <true/>
        <int val="0"/>
       </choose>
       <let line="746" var="centralLeftLeafPos_SQ" as="document-node()" slot="14" eval="7">
        <doc line="747" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
         <forEach>
          <docOrder intra="0">
           <slash>
            <conditionalSort>
             <fn name="exists">
              <tail start="2">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                <varRef name="subquires" slot="0"/>
               </treat>
              </tail>
             </fn>
             <docOrder intra="0">
              <slash>
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                <varRef name="subquires" slot="0"/>
               </treat>
               <filter flags="ip">
                <axis name="child" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
                <varRef name="counter" slot="2"/>
               </filter>
              </slash>
             </docOrder>
            </conditionalSort>
            <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
           </slash>
          </docOrder>
          <let line="751" var="subquireN" as="attribute(Q{}n)?" slot="15" eval="8">
           <slash simple="1">
            <first>
             <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
            </first>
            <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
           </slash>
           <choose line="759">
            <vc op="eq" onEmpty="0" comp="CCC">
             <fn line="756" name="string-join">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <slash>
                 <slash simple="1">
                  <slash>
                   <first>
                    <let var="vv:loc1398539010" as="xs:untypedAtomic?" indexable="true" slot="16" eval="3">
                     <data>
                      <varRef name="subquireN" slot="15"/>
                     </data>
                     <filter flags="b">
                      <axis name="following-sibling" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                      <and op="and">
                       <fn name="not">
                        <gcEE op="=" card="N:1" comp="CCC">
                         <data>
                          <slash>
                           <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                           <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                          </slash>
                         </data>
                         <str val="yes"/>
                        </gcEE>
                       </fn>
                       <gc op="=" card="1:1" comp="CCC">
                        <data>
                         <slash simple="1">
                          <first>
                           <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                          </first>
                          <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                         </slash>
                        </data>
                        <varRef name="vv:loc1398539010" slot="16"/>
                       </gc>
                      </and>
                     </filter>
                    </let>
                   </first>
                   <first>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                   </first>
                  </slash>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}conjoin)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='conjoin';"/>
                 </slash>
                 <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name=='target'"/>
                </slash>
               </data>
              </convert>
              <str val=" "/>
             </fn>
             <fn line="749" name="concat">
              <str val="#"/>
              <data>
               <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
              </data>
             </fn>
            </vc>
            <valueOf line="760" flags="l">
             <convert from="xs:integer" to="xs:string">
              <cast as="xs:integer" emptiable="1">
               <data>
                <slash simple="1">
                 <first>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                 </first>
                 <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                </slash>
               </data>
              </cast>
             </convert>
            </valueOf>
           </choose>
          </let>
         </forEach>
        </doc>
        <sequence line="765">
         <let var="vv:loc462531173" as="xs:untypedAtomic" slot="17" eval="7">
          <cast line="886" as="xs:untypedAtomic" emptiable="0">
           <choose>
            <fn name="exists">
             <let var="vv:loc427717548" as="xs:integer?" slot="18" eval="7">
              <cast as="xs:integer" emptiable="1">
               <atomSing card="?" diag="2|0||cast as">
                <varRef name="centralLeftLeafPos" slot="6"/>
               </atomSing>
              </cast>
              <filter flags="">
               <slash>
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                 <varRef name="subquires" slot="0"/>
                </treat>
                <axis name="child" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
               </slash>
               <vc op="eq" comp="CAVC">
                <arith op="-" calc="d-d">
                 <cvUntyped to="xs:double">
                  <data>
                   <slash simple="1">
                    <slash>
                     <first>
                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                     </first>
                     <first>
                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                     </first>
                    </slash>
                    <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                   </slash>
                  </data>
                 </cvUntyped>
                 <varRef name="vv:loc427717548" slot="18"/>
                </arith>
                <int val="1"/>
               </vc>
              </filter>
             </let>
            </fn>
            <let line="887" var="extraCentralSubquireLeftN" as="xs:untypedAtomic" slot="19" eval="7">
             <cast line="890" as="xs:untypedAtomic" emptiable="0">
              <fn name="string-join">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <slash>
                  <docOrder intra="0">
                   <slash>
                    <docOrder intra="0">
                     <slash>
                      <docOrder intra="0">
                       <let var="vv:loc658446036" as="xs:integer?" slot="20" eval="7">
                        <cast as="xs:integer" emptiable="1">
                         <atomSing card="?" diag="2|0||cast as">
                          <varRef name="centralLeftLeafPos" slot="6"/>
                         </atomSing>
                        </cast>
                        <filter flags="">
                         <slash>
                          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                           <varRef name="subquires" slot="0"/>
                          </treat>
                          <axis name="child" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
                         </slash>
                         <vc op="eq" comp="CAVC">
                          <arith op="-" calc="d-d">
                           <cvUntyped to="xs:double">
                            <data>
                             <slash simple="1">
                              <slash>
                               <first>
                                <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                               </first>
                               <first>
                                <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                               </first>
                              </slash>
                              <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                             </slash>
                            </data>
                           </cvUntyped>
                           <varRef name="vv:loc658446036" slot="20"/>
                          </arith>
                          <int val="1"/>
                         </vc>
                        </filter>
                       </let>
                      </docOrder>
                      <first>
                       <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                      </first>
                     </slash>
                    </docOrder>
                    <first>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                    </first>
                   </slash>
                  </docOrder>
                  <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                 </slash>
                </data>
               </convert>
               <str val=" "/>
              </fn>
             </cast>
             <convert line="894" from="xs:integer" to="xs:untypedAtomic">
              <fn name="count">
               <docOrder intra="0">
                <filter flags="">
                 <slash>
                  <conditionalSort>
                   <fn name="exists">
                    <tail start="2">
                     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                      <varRef name="subquires" slot="0"/>
                     </treat>
                    </tail>
                   </fn>
                   <docOrder intra="0">
                    <slash>
                     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                      <varRef name="subquires" slot="0"/>
                     </treat>
                     <axis name="child" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
                    </slash>
                   </docOrder>
                  </conditionalSort>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                 </slash>
                 <vc op="eq" comp="CCC">
                  <data>
                   <slash simple="1">
                    <first>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                    </first>
                    <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                   </slash>
                  </data>
                  <varRef name="extraCentralSubquireLeftN" slot="19"/>
                 </vc>
                </filter>
               </docOrder>
              </fn>
             </convert>
            </let>
            <true/>
            <atomic val="0" type="xs:untypedAtomic"/>
           </choose>
          </cast>
          <let var="vv:loc1145539983" as="xs:numeric?" slot="21" eval="7">
           <arith line="952" op="+" calc="a+a">
            <gVarRef name="Q{}Oy" bSlot="0"/>
            <cvUntyped to="xs:double">
             <arith op="+" calc="a+a">
              <dec val="9"/>
              <cvUntyped to="xs:double">
               <arith op="*" calc="a*a">
                <int val="6"/>
                <cvUntyped to="xs:double">
                 <atomSing card="?" diag="1|1||*">
                  <varRef name="centralLeftLeafPos" slot="6"/>
                 </atomSing>
                </cvUntyped>
               </arith>
              </cvUntyped>
             </arith>
            </cvUntyped>
           </arith>
           <forEach>
            <docOrder intra="0">
             <slash>
              <conditionalSort>
               <fn name="exists">
                <tail start="2">
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                  <varRef name="subquires" slot="0"/>
                 </treat>
                </tail>
               </fn>
               <docOrder intra="0">
                <slash>
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                  <varRef name="subquires" slot="0"/>
                 </treat>
                 <filter flags="ip">
                  <axis name="child" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
                  <varRef name="counter" slot="2"/>
                 </filter>
                </slash>
               </docOrder>
              </conditionalSort>
              <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
             </slash>
            </docOrder>
            <let line="766" var="currentPosition_SQ" as="xs:untypedAtomic" slot="22" eval="7">
             <cast line="767" as="xs:untypedAtomic" emptiable="0">
              <fn name="string">
               <convert from="xs:integer" to="xs:string">
                <cast as="xs:integer" emptiable="1">
                 <data>
                  <slash simple="1">
                   <first>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                   </first>
                   <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                  </slash>
                 </data>
                </cast>
               </convert>
              </fn>
             </cast>
             <let line="770" var="left1_Right2" as="document-node()" slot="23" eval="7">
              <doc line="773" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
               <choose>
                <gcEE op="=" card="N:1" comp="CCC">
                 <data>
                  <slash>
                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                   <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                  </slash>
                 </data>
                 <str val="yes"/>
                </gcEE>
                <choose line="777">
                 <vc op="le" onEmpty="0" comp="CAVC">
                  <cast as="xs:integer" emptiable="0">
                   <varRef name="currentPosition_SQ" slot="22"/>
                  </cast>
                  <cast as="xs:integer" emptiable="1">
                   <atomSing card="?" diag="2|0||cast as">
                    <varRef name="centralLeftLeafPos" slot="6"/>
                   </atomSing>
                  </cast>
                 </vc>
                 <valueOf line="778" flags="l">
                  <str val="1"/>
                 </valueOf>
                 <and line="783" op="and">
                  <vc op="eq" onEmpty="0" comp="CAVC">
                   <arith op="-" calc="i-i">
                    <cast as="xs:integer" emptiable="0">
                     <varRef name="currentPosition_SQ" slot="22"/>
                    </cast>
                    <cast as="xs:integer" emptiable="1">
                     <atomSing card="?" diag="2|0||cast as">
                      <varRef name="centralLeftLeafPos" slot="6"/>
                     </atomSing>
                    </cast>
                   </arith>
                   <int val="1"/>
                  </vc>
                  <vc op="eq" onEmpty="0" comp="CCC">
                   <atomSing card="?" diag="1|0||eq">
                    <slash>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}attachment-method)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='attachment-method';"/>
                     <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name=='target'"/>
                    </slash>
                   </atomSing>
                   <fn name="concat">
                    <str val="#"/>
                    <atomSing card="?" diag="0|1||concat">
                     <slash simple="1">
                      <first>
                       <slash simple="1">
                        <dot type="element(Q{http://schoenberginstitute.org/schema/collation}leaf)"/>
                        <axis name="preceding-sibling" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                       </slash>
                      </first>
                      <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
                     </slash>
                    </atomSing>
                   </fn>
                  </vc>
                 </and>
                 <valueOf line="784" flags="l">
                  <str val="1"/>
                 </valueOf>
                 <true/>
                 <valueOf line="787" flags="l">
                  <str val="2"/>
                 </valueOf>
                </choose>
                <fn line="792" name="contains">
                 <cvUntyped to="xs:string">
                  <data>
                   <slash simple="1">
                    <first>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                    </first>
                    <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                   </slash>
                  </data>
                 </cvUntyped>
                 <str val="."/>
                </fn>
                <choose line="797">
                 <vc op="le" onEmpty="0" comp="CAVC">
                  <cast as="xs:integer" emptiable="0">
                   <varRef name="currentPosition_SQ" slot="22"/>
                  </cast>
                  <cast as="xs:integer" emptiable="1">
                   <atomSing card="?" diag="2|0||cast as">
                    <varRef name="centralLeftLeafPos" slot="6"/>
                   </atomSing>
                  </cast>
                 </vc>
                 <valueOf line="798" flags="l">
                  <str val="1"/>
                 </valueOf>
                 <vc line="802" op="le" onEmpty="0" comp="CAVC">
                  <arith op="-" calc="i-i">
                   <cast as="xs:integer" emptiable="1">
                    <atomSing card="?" diag="2|0||cast as">
                     <slash>
                      <slash>
                       <slash>
                        <axis name="parent" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
                        <first>
                         <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                        </first>
                       </slash>
                       <first>
                        <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                       </first>
                      </slash>
                      <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                     </slash>
                    </atomSing>
                   </cast>
                   <cast as="xs:integer" emptiable="1">
                    <atomSing card="?" diag="2|0||cast as">
                     <varRef name="centralLeftLeafPos" slot="6"/>
                    </atomSing>
                   </cast>
                  </arith>
                  <int val="1"/>
                 </vc>
                 <valueOf line="804" flags="l">
                  <str val="1"/>
                 </valueOf>
                 <true/>
                 <valueOf line="807" flags="l">
                  <str val="2"/>
                 </valueOf>
                </choose>
                <true/>
                <valueOf line="819" flags="l">
                 <convert from="xs:integer" to="xs:string">
                  <choose>
                   <vc op="le" onEmpty="0" comp="CAVC">
                    <cast as="xs:integer" emptiable="0">
                     <varRef name="currentPosition_SQ" slot="22"/>
                    </cast>
                    <cast as="xs:integer" emptiable="1">
                     <atomSing card="?" diag="2|0||cast as">
                      <varRef name="centralLeftLeafPos" slot="6"/>
                     </atomSing>
                    </cast>
                   </vc>
                   <int val="1"/>
                   <true/>
                   <int val="2"/>
                  </choose>
                 </convert>
                </valueOf>
               </choose>
              </doc>
              <let line="824" var="subquireN" as="attribute(Q{}n)?" slot="24" eval="8">
               <slash simple="1">
                <first>
                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                </first>
                <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
               </slash>
               <let line="826" var="left1_Right2_SQ" as="document-node()" slot="25" eval="7">
                <doc line="829" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
                 <choose>
                  <gcEE op="=" card="N:1" comp="CCC">
                   <data>
                    <slash>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                     <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                    </slash>
                   </data>
                   <str val="yes"/>
                  </gcEE>
                  <choose line="833">
                   <vc op="le" onEmpty="0" comp="CAVC">
                    <cast as="xs:integer" emptiable="0">
                     <varRef name="currentPosition_SQ" slot="22"/>
                    </cast>
                    <cast as="xs:integer" emptiable="0">
                     <data>
                      <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                     </data>
                    </cast>
                   </vc>
                   <valueOf line="834" flags="l">
                    <str val="1"/>
                   </valueOf>
                   <and line="839" op="and">
                    <compareToInt op="eq" val="1">
                     <arith op="-" calc="i-i">
                      <cast as="xs:integer" emptiable="0">
                       <varRef name="currentPosition_SQ" slot="22"/>
                      </cast>
                      <cast as="xs:integer" emptiable="0">
                       <data>
                        <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                       </data>
                      </cast>
                     </arith>
                    </compareToInt>
                    <vc op="eq" onEmpty="0" comp="CCC">
                     <atomSing card="?" diag="1|0||eq">
                      <slash>
                       <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}attachment-method)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='attachment-method';"/>
                       <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name=='target'"/>
                      </slash>
                     </atomSing>
                     <fn name="concat">
                      <str val="#"/>
                      <atomSing card="?" diag="0|1||concat">
                       <slash simple="1">
                        <first>
                         <slash simple="1">
                          <dot type="element(Q{http://schoenberginstitute.org/schema/collation}leaf)"/>
                          <axis name="preceding-sibling" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                         </slash>
                        </first>
                        <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
                       </slash>
                      </atomSing>
                     </fn>
                    </vc>
                   </and>
                   <valueOf line="840" flags="l">
                    <str val="1"/>
                   </valueOf>
                   <true/>
                   <valueOf line="843" flags="l">
                    <str val="2"/>
                   </valueOf>
                  </choose>
                  <vc line="850" op="gt" onEmpty="0" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                   <arith op="-" calc="i-i">
                    <fn name="string-length">
                     <cvUntyped to="xs:string">
                      <data>
                       <slash simple="1">
                        <first>
                         <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                        </first>
                        <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                       </slash>
                      </data>
                     </cvUntyped>
                    </fn>
                    <fn name="string-length">
                     <fn name="translate">
                      <cvUntyped to="xs:string">
                       <data>
                        <slash simple="1">
                         <first>
                          <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                         </first>
                         <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                        </slash>
                       </data>
                      </cvUntyped>
                      <str val="."/>
                      <str val=""/>
                     </fn>
                    </fn>
                   </arith>
                   <atomSing card="?" diag="1|1||gt">
                    <varRef name="counter" slot="2"/>
                   </atomSing>
                  </vc>
                  <choose line="854">
                   <vc op="le" onEmpty="0" comp="CAVC">
                    <cast as="xs:integer" emptiable="0">
                     <varRef name="currentPosition_SQ" slot="22"/>
                    </cast>
                    <cast as="xs:integer" emptiable="0">
                     <data>
                      <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                     </data>
                    </cast>
                   </vc>
                   <valueOf line="855" flags="l">
                    <str val="1"/>
                   </valueOf>
                   <vc line="859" op="le" onEmpty="0" comp="CAVC">
                    <arith op="-" calc="i-i">
                     <cast as="xs:integer" emptiable="1">
                      <atomSing card="?" diag="2|0||cast as">
                       <slash>
                        <slash>
                         <let var="vv:loc1432645981" as="xs:untypedAtomic?" slot="26" eval="8">
                          <data>
                           <varRef name="subquireN" slot="24"/>
                          </data>
                          <slash>
                           <axis name="parent" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
                           <first>
                            <filter flags="b">
                             <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                             <gc op="=" card="1:1" comp="CCC">
                              <data>
                               <slash simple="1">
                                <first>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                </first>
                                <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                               </slash>
                              </data>
                              <varRef name="vv:loc1432645981" slot="26"/>
                             </gc>
                            </filter>
                           </first>
                          </slash>
                         </let>
                         <first>
                          <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                         </first>
                        </slash>
                        <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                       </slash>
                      </atomSing>
                     </cast>
                     <cast as="xs:integer" emptiable="1">
                      <atomSing card="?" diag="2|0||cast as">
                       <varRef name="centralLeftLeafPos" slot="6"/>
                      </atomSing>
                     </cast>
                    </arith>
                    <int val="1"/>
                   </vc>
                   <valueOf line="861" flags="l">
                    <str val="1"/>
                   </valueOf>
                   <true/>
                   <valueOf line="864" flags="l">
                    <str val="2"/>
                   </valueOf>
                  </choose>
                  <true/>
                  <valueOf line="876" flags="l">
                   <convert from="xs:integer" to="xs:string">
                    <choose>
                     <vc op="le" onEmpty="0" comp="CAVC">
                      <cast as="xs:integer" emptiable="0">
                       <varRef name="currentPosition_SQ" slot="22"/>
                      </cast>
                      <cast as="xs:integer" emptiable="0">
                       <data>
                        <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                       </data>
                      </cast>
                     </vc>
                     <int val="1"/>
                     <true/>
                     <int val="2"/>
                    </choose>
                   </convert>
                  </valueOf>
                 </choose>
                </doc>
                <elem ns="=http://www.w3.org/2000/svg xsl=http://www.w3.org/1999/XSL/Transform svg=http://www.w3.org/2000/svg xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree xlink=http://www.w3.org/1999/xlink" line="956" name="g" nsuri="http://www.w3.org/2000/svg" flags="d">
                 <sequence line="960">
                  <choose>
                   <vc op="eq" onEmpty="0" comp="CCC">
                    <fn line="957" name="string-join">
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <data>
                       <slash>
                        <slash>
                         <axis name="parent" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
                         <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}direction)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='direction';"/>
                        </slash>
                        <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                       </slash>
                      </data>
                     </convert>
                     <str val=" "/>
                    </fn>
                    <str val="r-l"/>
                   </vc>
                   <att line="963" name="transform" flags="l">
                    <fn name="string-join">
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <data>
                       <mergeAdj>
                        <sequence>
                         <valueOf>
                          <fn name="concat">
                           <str val="rotate("/>
                           <int val="180"/>
                           <str val=" "/>
                           <int val="40"/>
                           <str val=" "/>
                           <varRef ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="765" name="vv:loc1145539983" slot="21"/>
                           <str val=") "/>
                          </fn>
                         </valueOf>
                         <valueOf line="966">
                          <fn name="concat">
                           <str val="translate("/>
                           <minus>
                            <arith op="+" calc="i+i">
                             <int val="150"/>
                             <arith op="*" calc="i*i">
                              <varRef name="countRegularBifolia" slot="3"/>
                              <int val="6"/>
                             </arith>
                            </arith>
                           </minus>
                           <str val=" "/>
                           <str val="0)"/>
                          </fn>
                         </valueOf>
                        </sequence>
                       </mergeAdj>
                      </data>
                     </convert>
                     <str val=""/>
                    </fn>
                   </att>
                  </choose>
                  <elem line="973" name="desc" nsuri="http://www.w3.org/2000/svg" flags="dl">
                   <sequence>
                    <valueOf flags="l">
                     <str val="Folio #"/>
                    </valueOf>
                    <valueOf flags="l">
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <data>
                       <slash simple="1">
                        <first>
                         <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                        </first>
                        <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                       </slash>
                      </data>
                     </convert>
                    </valueOf>
                   </sequence>
                  </elem>
                  <callT line="976" name="leafPath_SQ" bSlot="1">
                   <withParam name="manuscript" flags="c" as="item()*">
                    <varRef line="977" name="manuscript" slot="1"/>
                   </withParam>
                   <withParam name="subquireN" flags="c" as="attribute()?">
                    <varRef line="978" name="subquireN" slot="24"/>
                   </withParam>
                   <withParam name="Cx_SQ" flags="c" as="xs:anyAtomicType">
                    <int val="40"/>
                   </withParam>
                   <withParam name="Cy_SQ" flags="c" as="xs:anyAtomicType?">
                    <varRef ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="765" name="vv:loc1145539983" slot="21"/>
                   </withParam>
                   <withParam name="countRegularBifolia" flags="c" as="xs:integer">
                    <varRef line="982" name="countRegularBifolia" slot="3"/>
                   </withParam>
                   <withParam name="countRegularBifolia2" flags="c" as="item()*">
                    <varRef line="983" name="countRegularBifolia2" slot="4"/>
                   </withParam>
                   <withParam name="countSubquireLeaves" flags="c" as="item()*">
                    <varRef line="984" name="countSubquireLeaves" slot="5"/>
                   </withParam>
                   <withParam name="followingComponents" flags="c" as="document-node()">
                    <cvUntyped line="985" to="xs:float">
                     <cast ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="882" as="xs:untypedAtomic" emptiable="0">
                      <fn name="string">
                       <choose line="903">
                        <compareToInt op="eq" val="1">
                         <cast as="xs:double" emptiable="0">
                          <data>
                           <varRef name="left1_Right2" slot="23"/>
                          </data>
                         </cast>
                        </compareToInt>
                        <cast line="906" as="xs:untypedAtomic" emptiable="0">
                         <fn name="string">
                          <convert from="xs:double" to="xs:string">
                           <arith op="+" calc="d+d">
                            <arith op="-" calc="i-i">
                             <cast as="xs:integer" emptiable="1">
                              <atomSing card="?" diag="2|0||cast as">
                               <varRef name="centralLeftLeafPos" slot="6"/>
                              </atomSing>
                             </cast>
                             <cast as="xs:integer" emptiable="1">
                              <data>
                               <slash simple="1">
                                <first>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                </first>
                                <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                               </slash>
                              </data>
                             </cast>
                            </arith>
                            <cvUntyped to="xs:double">
                             <varRef line="765" name="vv:loc462531173" slot="17"/>
                            </cvUntyped>
                           </arith>
                          </convert>
                         </fn>
                        </cast>
                        <compareToInt line="909" op="eq" val="2">
                         <cast as="xs:double" emptiable="0">
                          <data>
                           <varRef name="left1_Right2" slot="23"/>
                          </data>
                         </cast>
                        </compareToInt>
                        <cast line="912" as="xs:untypedAtomic" emptiable="0">
                         <fn name="string">
                          <convert from="xs:double" to="xs:string">
                           <arith op="-" calc="d-d">
                            <arith op="-" calc="i-i">
                             <cast as="xs:integer" emptiable="1">
                              <data>
                               <slash simple="1">
                                <first>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                </first>
                                <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                               </slash>
                              </data>
                             </cast>
                             <arith op="+" calc="i+i">
                              <cast as="xs:integer" emptiable="1">
                               <atomSing card="?" diag="2|0||cast as">
                                <varRef name="centralLeftLeafPos" slot="6"/>
                               </atomSing>
                              </cast>
                              <int val="1"/>
                             </arith>
                            </arith>
                            <cvUntyped to="xs:double">
                             <varRef line="765" name="vv:loc462531173" slot="17"/>
                            </cvUntyped>
                           </arith>
                          </convert>
                         </fn>
                        </cast>
                       </choose>
                      </fn>
                     </cast>
                    </cvUntyped>
                   </withParam>
                   <withParam name="followingComponents_SQ" flags="c" as="document-node()">
                    <doc ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="920" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
                     <choose>
                      <compareToInt op="eq" val="1">
                       <cast as="xs:double" emptiable="0">
                        <data>
                         <varRef name="left1_Right2_SQ" slot="25"/>
                        </data>
                       </cast>
                      </compareToInt>
                      <valueOf line="923" flags="l">
                       <convert from="xs:integer" to="xs:string">
                        <arith op="-" calc="i-i">
                         <cast as="xs:integer" emptiable="0">
                          <data>
                           <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                          </data>
                         </cast>
                         <cast as="xs:integer" emptiable="1">
                          <data>
                           <slash simple="1">
                            <first>
                             <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                            </first>
                            <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                           </slash>
                          </data>
                         </cast>
                        </arith>
                       </convert>
                      </valueOf>
                      <compareToInt line="926" op="eq" val="2">
                       <cast as="xs:double" emptiable="0">
                        <data>
                         <varRef name="left1_Right2_SQ" slot="25"/>
                        </data>
                       </cast>
                      </compareToInt>
                      <valueOf line="929" flags="l">
                       <convert from="xs:integer" to="xs:string">
                        <arith op="-" calc="i-i">
                         <cast as="xs:integer" emptiable="1">
                          <data>
                           <slash simple="1">
                            <first>
                             <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                            </first>
                            <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                           </slash>
                          </data>
                         </cast>
                         <arith op="+" calc="i+i">
                          <cast as="xs:integer" emptiable="0">
                           <data>
                            <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                           </data>
                          </cast>
                          <int val="1"/>
                         </arith>
                        </arith>
                       </convert>
                      </valueOf>
                     </choose>
                    </doc>
                   </withParam>
                   <withParam name="followingRegularComponents_SQ" flags="c" as="xs:integer">
                    <cvUntyped line="988" to="xs:integer">
                     <cast ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="937" as="xs:untypedAtomic" emptiable="0">
                      <fn name="string">
                       <choose>
                        <compareToInt op="eq" val="1">
                         <cast as="xs:double" emptiable="0">
                          <data>
                           <varRef name="left1_Right2_SQ" slot="25"/>
                          </data>
                         </cast>
                        </compareToInt>
                        <convert line="940" from="xs:integer" to="xs:untypedAtomic">
                         <fn name="count">
                          <let var="vv:loc1155188126" as="xs:integer" slot="27" eval="7">
                           <cast as="xs:integer" emptiable="0">
                            <data>
                             <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                            </data>
                           </cast>
                           <filter flags="b">
                            <axis name="following-sibling" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                            <and op="and">
                             <fn name="not">
                              <gcEE op="=" card="N:1" comp="CCC">
                               <data>
                                <slash>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                                 <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                                </slash>
                               </data>
                               <str val="yes"/>
                              </gcEE>
                             </fn>
                             <vc op="le" onEmpty="0" comp="CAVC">
                              <slash>
                               <first>
                                <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                               </first>
                               <cast as="xs:integer" emptiable="1">
                                <data>
                                 <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                                </data>
                               </cast>
                              </slash>
                              <varRef name="vv:loc1155188126" slot="27"/>
                             </vc>
                            </and>
                           </filter>
                          </let>
                         </fn>
                        </convert>
                        <compareToInt line="943" op="eq" val="2">
                         <cast as="xs:double" emptiable="0">
                          <data>
                           <varRef name="left1_Right2_SQ" slot="25"/>
                          </data>
                         </cast>
                        </compareToInt>
                        <convert line="946" from="xs:integer" to="xs:untypedAtomic">
                         <fn name="count">
                          <let var="vv:loc777203130" as="xs:integer" slot="28" eval="7">
                           <cast as="xs:integer" emptiable="0">
                            <data>
                             <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                            </data>
                           </cast>
                           <filter flags="b">
                            <slash simple="1">
                             <dot type="element(Q{http://schoenberginstitute.org/schema/collation}leaf)"/>
                             <axis name="preceding-sibling" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                            </slash>
                            <and op="and">
                             <fn name="not">
                              <gcEE op="=" card="N:1" comp="CCC">
                               <data>
                                <slash>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                                 <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                                </slash>
                               </data>
                               <str val="yes"/>
                              </gcEE>
                             </fn>
                             <vc op="gt" onEmpty="0" comp="CAVC">
                              <slash>
                               <first>
                                <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                               </first>
                               <cast as="xs:integer" emptiable="1">
                                <data>
                                 <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                                </data>
                               </cast>
                              </slash>
                              <varRef name="vv:loc777203130" slot="28"/>
                             </vc>
                            </and>
                           </filter>
                          </let>
                         </fn>
                        </convert>
                       </choose>
                      </fn>
                     </cast>
                    </cvUntyped>
                   </withParam>
                   <withParam name="left1_Right2_SQ" flags="c" as="document-node()">
                    <varRef line="989" name="left1_Right2_SQ" slot="25"/>
                   </withParam>
                   <withParam name="left1_Right2" flags="c" as="document-node()">
                    <varRef line="990" name="left1_Right2" slot="23"/>
                   </withParam>
                   <withParam name="positions_SQ" flags="c" as="attribute()*">
                    <varRef line="991" name="positions_SQ" slot="8"/>
                   </withParam>
                   <withParam name="previousPositions_SQ" flags="c" as="xs:integer?">
                    <varRef line="992" name="previousPositions_SQ" slot="10"/>
                   </withParam>
                   <withParam name="centralLeftLeafPos_SQ" flags="c" as="document-node()">
                    <varRef line="993" name="centralLeftLeafPos_SQ" slot="14"/>
                   </withParam>
                  </callT>
                 </sequence>
                </elem>
               </let>
              </let>
             </let>
            </let>
           </forEach>
          </let>
         </let>
         <choose line="998">
          <vc op="le" onEmpty="0" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
           <atomSing card="?" diag="1|0||le">
            <varRef name="counter" slot="2"/>
           </atomSing>
           <varRef name="NSubquires" slot="7"/>
          </vc>
          <callT line="1001" name="bifoliaDiagram_SQ" bSlot="2">
           <withParam name="counter" flags="c" as="xs:numeric?">
            <arith line="1002" op="+" calc="a+a">
             <cvUntyped to="xs:double">
              <atomSing card="?" diag="1|0||+">
               <varRef name="counter" slot="2"/>
              </atomSing>
             </cvUntyped>
             <int val="1"/>
            </arith>
           </withParam>
           <withParam name="subquires" flags="c" as="item()*">
            <varRef line="1003" name="subquires" slot="0"/>
           </withParam>
           <withParam name="manuscript" flags="c" as="item()*">
            <varRef line="1004" name="manuscript" slot="1"/>
           </withParam>
           <withParam name="centralLeftLeafPos" flags="c" as="item()*">
            <varRef line="1005" name="centralLeftLeafPos" slot="6"/>
           </withParam>
           <withParam name="countRegularBifolia" flags="c" as="xs:integer">
            <varRef line="1006" name="countRegularBifolia" slot="3"/>
           </withParam>
           <withParam name="countRegularBifolia2" flags="c" as="item()*">
            <varRef line="1007" name="countRegularBifolia2" slot="4"/>
           </withParam>
           <withParam name="countSubquireLeaves" flags="c" as="item()*">
            <varRef line="1008" name="countSubquireLeaves" slot="5"/>
           </withParam>
           <withParam name="NSubquires" flags="c" as="xs:integer">
            <varRef line="1009" name="NSubquires" slot="7"/>
           </withParam>
          </callT>
         </choose>
        </sequence>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="3" binds="">
  <globalVariable name="Q{}delta" type="xs:integer" line="19" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.integer.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <int val="6"/>
  </globalVariable>
 </co>
 <co id="4" binds="">
  <template name="Q{}defs" flags="os" line="1476" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" slots="0">
   <elem role="body" vn="20" baseUri="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" defaultElementNS="http://schoenberginstitute.org/schema/collation" ns="=http://www.w3.org/2000/svg xsl=http://www.w3.org/1999/XSL/Transform svg=http://www.w3.org/2000/svg xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree xlink=http://www.w3.org/1999/xlink" line="1479" name="defs" nsuri="http://www.w3.org/2000/svg" flags="d">
    <sequence>
     <elem name="filter" nsuri="http://www.w3.org/2000/svg" flags="dl">
      <sequence>
       <att name="id" flags="l">
        <str val="f1"/>
       </att>
       <att name="filterUnits" flags="l">
        <str val="userSpaceOnUse"/>
       </att>
       <elem line="1480" name="feGaussianBlur" nsuri="http://www.w3.org/2000/svg" flags="dl">
        <sequence>
         <att name="in" flags="l">
          <str val="SourceGraphic"/>
         </att>
         <att name="stdDeviation" flags="l">
          <str val="0"/>
         </att>
        </sequence>
       </elem>
      </sequence>
     </elem>
     <elem line="1482" name="filter" nsuri="http://www.w3.org/2000/svg" flags="dl">
      <sequence>
       <att name="id" flags="l">
        <str val="f2"/>
       </att>
       <att name="filterUnits" flags="l">
        <str val="userSpaceOnUse"/>
       </att>
       <elem line="1483" name="feGaussianBlur" nsuri="http://www.w3.org/2000/svg" flags="dl">
        <sequence>
         <att name="in" flags="l">
          <str val="SourceGraphic"/>
         </att>
         <att name="stdDeviation" flags="l">
          <str val="1"/>
         </att>
        </sequence>
       </elem>
      </sequence>
     </elem>
     <elem line="1485" name="filter" nsuri="http://www.w3.org/2000/svg" flags="dl">
      <sequence>
       <att name="id" flags="l">
        <str val="f3"/>
       </att>
       <att name="filterUnits" flags="l">
        <str val="userSpaceOnUse"/>
       </att>
       <elem line="1486" name="feGaussianBlur" nsuri="http://www.w3.org/2000/svg" flags="dl">
        <sequence>
         <att name="in" flags="l">
          <str val="SourceGraphic"/>
         </att>
         <att name="stdDeviation" flags="l">
          <str val="2"/>
         </att>
        </sequence>
       </elem>
      </sequence>
     </elem>
     <elem line="1491" name="pattern" nsuri="http://www.w3.org/2000/svg" flags="dl">
      <sequence>
       <att name="id" flags="l">
        <str val="gluedPattern"/>
       </att>
       <att name="patternUnits" flags="l">
        <str val="userSpaceOnUse"/>
       </att>
       <att name="width" flags="l">
        <str val="2"/>
       </att>
       <att name="height" flags="l">
        <str val="6"/>
       </att>
       <att xmlns:xlink="http://www.w3.org/1999/xlink" name="xlink:type" flags="l">
        <str val="simple"/>
       </att>
       <att xmlns:xlink="http://www.w3.org/1999/xlink" name="xlink:show" flags="l">
        <str val="other"/>
       </att>
       <att xmlns:xlink="http://www.w3.org/1999/xlink" name="xlink:actuate" flags="l">
        <str val="onLoad"/>
       </att>
       <att name="preserveAspectRatio" flags="l">
        <str val="xMidYMid meet"/>
       </att>
       <elem line="1492" name="desc" nsuri="http://www.w3.org/2000/svg" flags="dl">
        <valueOf flags="l">
         <str val="Glue pattern"/>
        </valueOf>
       </elem>
       <elem line="1493" name="path" nsuri="http://www.w3.org/2000/svg" flags="dl">
        <sequence>
         <att name="d" flags="l">
          <str val="M 0,0 L 2,12 "/>
         </att>
         <att name="class" flags="l">
          <str val="glued"/>
         </att>
        </sequence>
       </elem>
      </sequence>
     </elem>
    </sequence>
   </elem>
  </template>
 </co>
 <co id="5" binds="1 6 0">
  <template name="Q{}bifoliaDiagram" flags="os" line="153" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" slots="21">
   <sequence role="body" vn="20" baseUri="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" defaultElementNS="http://schoenberginstitute.org/schema/collation" ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="154">
    <param name="manuscript" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <param line="155" name="positions" slot="1">
     <int role="select" val="1"/>
     <supplied role="conversion" slot="1"/>
    </param>
    <param line="156" name="odd1_Even2" slot="2">
     <int role="select" val="2"/>
     <supplied role="conversion" slot="2"/>
    </param>
    <param line="157" name="subquires" slot="3">
     <str role="select" val=""/>
     <supplied role="conversion" slot="3"/>
    </param>
    <param line="158" name="quireNumber" slot="4">
     <str role="select" val=""/>
     <supplied role="conversion" slot="4"/>
    </param>
    <let line="162" var="countSingletons" as="xs:untypedAtomic" slot="5" eval="8">
     <convert line="163" from="xs:integer" to="xs:untypedAtomic">
      <fn name="count">
       <docOrder intra="0">
        <filter flags="b">
         <slash>
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
           <currentGroup/>
          </treat>
          <dot type="node()"/>
         </slash>
         <gcEE op="=" card="N:1" comp="CCC">
          <data>
           <slash>
            <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
            <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
           </slash>
          </data>
          <str val="yes"/>
         </gcEE>
        </filter>
       </docOrder>
      </fn>
     </convert>
     <let line="166" var="countSubquireLeaves" as="document-node()" slot="6" eval="7">
      <doc line="169" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
       <valueOf flags="l">
        <convert from="xs:integer" to="xs:string">
         <fn name="count">
          <docOrder intra="0">
           <filter flags="b">
            <slash>
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
              <currentGroup/>
             </treat>
             <dot type="node()"/>
            </slash>
            <and op="and">
             <fn name="contains">
              <cvUntyped to="xs:string">
               <data>
                <slash simple="1">
                 <first>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                 </first>
                 <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                </slash>
               </data>
              </cvUntyped>
              <str val="."/>
             </fn>
             <fn name="not">
              <gcEE op="=" card="N:1" comp="CCC">
               <data>
                <slash>
                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                 <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                </slash>
               </data>
               <str val="yes"/>
              </gcEE>
             </fn>
            </and>
           </filter>
          </docOrder>
         </fn>
        </convert>
       </valueOf>
      </doc>
      <let line="179" var="countRegularBifolia" as="xs:decimal?" slot="7" eval="7">
       <choose>
        <vc op="eq" onEmpty="0" comp="CAVC">
         <cast as="xs:integer" emptiable="1">
          <atomSing card="?" diag="2|0||cast as">
           <varRef name="odd1_Even2" slot="2"/>
          </atomSing>
         </cast>
         <int val="2"/>
        </vc>
        <arith op="div" calc="i/i">
         <cast as="xs:integer" emptiable="1">
          <atomSing card="?" diag="2|0||cast as">
           <varRef name="positions" slot="1"/>
          </atomSing>
         </cast>
         <int val="2"/>
        </arith>
        <true/>
        <arith op="div" calc="i/i">
         <arith op="-" calc="i-i">
          <cast as="xs:integer" emptiable="1">
           <atomSing card="?" diag="2|0||cast as">
            <varRef name="positions" slot="1"/>
           </atomSing>
          </cast>
          <cast as="xs:integer" emptiable="0">
           <varRef name="countSingletons" slot="5"/>
          </cast>
         </arith>
         <int val="2"/>
        </arith>
       </choose>
       <let line="183" var="countRegularBifolia2" as="xs:double?" slot="8" eval="7">
        <arith op="div" calc="d/d">
         <arith op="-" calc="d-d">
          <arith op="-" calc="i-i">
           <cast as="xs:integer" emptiable="1">
            <atomSing card="?" diag="2|0||cast as">
             <varRef name="positions" slot="1"/>
            </atomSing>
           </cast>
           <cast as="xs:integer" emptiable="0">
            <varRef name="countSingletons" slot="5"/>
           </cast>
          </arith>
          <cvUntyped to="xs:double">
           <data>
            <varRef name="countSubquireLeaves" slot="6"/>
           </data>
          </cvUntyped>
         </arith>
         <int val="2"/>
        </arith>
        <let line="186" var="centralLeftLeafPos" as="document-node()" slot="9" eval="7">
         <doc line="193" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
          <choose>
           <every var="leaf" slot="10">
            <currentGroup/>
            <fn name="exists">
             <filter flags="b">
              <slash simple="1">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                <varRef name="leaf" slot="10"/>
               </treat>
               <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
              </slash>
              <gc op="=" card="1:1" comp="CCC">
               <data>
                <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
               </data>
               <str val="yes"/>
              </gc>
             </filter>
            </fn>
           </every>
           <valueOf line="194" flags="l">
            <convert from="xs:integer" to="xs:string">
             <fn name="count">
              <currentGroup/>
             </fn>
            </convert>
           </valueOf>
           <true/>
           <forEach line="200">
            <docOrder intra="0">
             <filter flags="b">
              <slash>
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                <currentGroup/>
               </treat>
               <dot type="node()"/>
              </slash>
              <and op="and">
               <fn name="not">
                <gcEE op="=" card="N:1" comp="CCC">
                 <data>
                  <slash>
                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                   <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                  </slash>
                 </data>
                 <str val="yes"/>
                </gcEE>
               </fn>
               <fn name="not">
                <fn name="contains">
                 <cvUntyped to="xs:string">
                  <data>
                   <slash simple="1">
                    <first>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                    </first>
                    <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                   </slash>
                  </data>
                 </cvUntyped>
                 <str val="."/>
                </fn>
               </fn>
              </and>
             </filter>
            </docOrder>
            <choose line="211">
             <vc op="eq" onEmpty="0" comp="CCC">
              <fn line="208" name="string-join">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <slash>
                  <slash simple="1">
                   <slash>
                    <first>
                     <filter flags="b">
                      <axis name="following-sibling" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                      <and op="and">
                       <fn name="not">
                        <gcEE op="=" card="N:1" comp="CCC">
                         <data>
                          <slash>
                           <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                           <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                          </slash>
                         </data>
                         <str val="yes"/>
                        </gcEE>
                       </fn>
                       <fn name="not">
                        <fn name="contains">
                         <cvUntyped to="xs:string">
                          <data>
                           <slash simple="1">
                            <first>
                             <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                            </first>
                            <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                           </slash>
                          </data>
                         </cvUntyped>
                         <str val="."/>
                        </fn>
                       </fn>
                      </and>
                     </filter>
                    </first>
                    <first>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                    </first>
                   </slash>
                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}conjoin)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='conjoin';"/>
                  </slash>
                  <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name=='target'"/>
                 </slash>
                </data>
               </convert>
               <str val=" "/>
              </fn>
              <fn line="202" name="concat">
               <str val="#"/>
               <data>
                <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
               </data>
              </fn>
             </vc>
             <valueOf line="212" flags="l">
              <convert from="xs:integer" to="xs:string">
               <cast as="xs:integer" emptiable="1">
                <data>
                 <slash simple="1">
                  <first>
                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                  </first>
                  <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                 </slash>
                </data>
               </cast>
              </convert>
             </valueOf>
            </choose>
           </forEach>
          </choose>
         </doc>
         <let line="220" var="extraCentralSubquireLeft" as="xs:untypedAtomic" slot="11" eval="7">
          <cast line="224" as="xs:untypedAtomic" emptiable="0">
           <choose>
            <fn name="exists">
             <let var="vv:loc91245304" as="xs:integer" slot="12" eval="7">
              <cast as="xs:integer" emptiable="0">
               <data>
                <varRef name="centralLeftLeafPos" slot="9"/>
               </data>
              </cast>
              <filter flags="b">
               <slash>
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                 <currentGroup/>
                </treat>
                <dot type="node()"/>
               </slash>
               <and op="and">
                <fn name="contains">
                 <cvUntyped to="xs:string">
                  <data>
                   <slash simple="1">
                    <first>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                    </first>
                    <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                   </slash>
                  </data>
                 </cvUntyped>
                 <str val="."/>
                </fn>
                <vc op="eq" onEmpty="0" comp="CAVC">
                 <arith op="-" calc="d-d">
                  <cvUntyped to="xs:double">
                   <data>
                    <slash simple="1">
                     <first>
                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                     </first>
                     <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                    </slash>
                   </data>
                  </cvUntyped>
                  <varRef name="vv:loc91245304" slot="12"/>
                 </arith>
                 <int val="1"/>
                </vc>
               </and>
              </filter>
             </let>
            </fn>
            <let line="225" var="extraCentralSubquireLeftN" as="xs:untypedAtomic" slot="13" eval="7">
             <cast line="228" as="xs:untypedAtomic" emptiable="0">
              <fn name="string-join">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <slash>
                  <docOrder intra="0">
                   <slash>
                    <docOrder intra="0">
                     <let var="vv:loc83726150" as="xs:integer" slot="14" eval="7">
                      <cast as="xs:integer" emptiable="0">
                       <data>
                        <varRef name="centralLeftLeafPos" slot="9"/>
                       </data>
                      </cast>
                      <filter flags="b">
                       <slash>
                        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                         <currentGroup/>
                        </treat>
                        <dot type="node()"/>
                       </slash>
                       <and op="and">
                        <fn name="contains">
                         <cvUntyped to="xs:string">
                          <data>
                           <slash simple="1">
                            <first>
                             <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                            </first>
                            <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                           </slash>
                          </data>
                         </cvUntyped>
                         <str val="."/>
                        </fn>
                        <vc op="eq" onEmpty="0" comp="CAVC">
                         <arith op="-" calc="d-d">
                          <cvUntyped to="xs:double">
                           <data>
                            <slash simple="1">
                             <first>
                              <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                             </first>
                             <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                            </slash>
                           </data>
                          </cvUntyped>
                          <varRef name="vv:loc83726150" slot="14"/>
                         </arith>
                         <int val="1"/>
                        </vc>
                       </and>
                      </filter>
                     </let>
                    </docOrder>
                    <first>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                    </first>
                   </slash>
                  </docOrder>
                  <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                 </slash>
                </data>
               </convert>
               <str val=" "/>
              </fn>
             </cast>
             <convert line="231" from="xs:integer" to="xs:untypedAtomic">
              <fn name="count">
               <docOrder intra="0">
                <filter flags="">
                 <slash>
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                   <currentGroup/>
                  </treat>
                  <dot type="node()"/>
                 </slash>
                 <vc op="eq" comp="CCC">
                  <data>
                   <slash simple="1">
                    <first>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                    </first>
                    <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                   </slash>
                  </data>
                  <varRef name="extraCentralSubquireLeftN" slot="13"/>
                 </vc>
                </filter>
               </docOrder>
              </fn>
             </convert>
            </let>
            <true/>
            <atomic val="0" type="xs:untypedAtomic"/>
           </choose>
          </cast>
          <sequence line="238">
           <let var="vv:loc1370376695" as="xs:integer" slot="15" eval="8">
            <cvUntyped ns="=http://www.w3.org/2000/svg xsl=http://www.w3.org/1999/XSL/Transform svg=http://www.w3.org/2000/svg xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree xlink=http://www.w3.org/1999/xlink" line="347" to="xs:integer">
             <data>
              <varRef name="centralLeftLeafPos" slot="9"/>
             </data>
            </cvUntyped>
            <let var="vv:loc960587302" as="xs:double" slot="16" eval="7">
             <arith line="311" op="+" calc="d+d">
              <gVarRef name="Q{}Oy" bSlot="0"/>
              <arith op="+" calc="d+d">
               <dec val="9"/>
               <arith op="*" calc="d*d">
                <int val="6"/>
                <cvUntyped to="xs:double">
                 <data>
                  <varRef name="centralLeftLeafPos" slot="9"/>
                 </data>
                </cvUntyped>
               </arith>
              </arith>
             </arith>
             <forEach>
              <docOrder intra="0">
               <slash>
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                 <currentGroup/>
                </treat>
                <dot type="node()"/>
               </slash>
              </docOrder>
              <let line="239" var="currentPosition" as="xs:untypedAtomic" slot="17" eval="7">
               <cast line="240" as="xs:untypedAtomic" emptiable="0">
                <fn name="string">
                 <convert from="xs:integer" to="xs:string">
                  <cast as="xs:integer" emptiable="1">
                   <data>
                    <slash simple="1">
                     <first>
                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                     </first>
                     <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                    </slash>
                   </data>
                  </cast>
                 </convert>
                </fn>
               </cast>
               <let line="243" var="left1_Right2" as="document-node()" slot="18" eval="7">
                <doc line="246" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
                 <choose>
                  <gcEE op="=" card="N:1" comp="CCC">
                   <data>
                    <slash>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                     <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                    </slash>
                   </data>
                   <str val="yes"/>
                  </gcEE>
                  <choose line="250">
                   <vc op="le" onEmpty="0" comp="CAVC">
                    <cast as="xs:integer" emptiable="0">
                     <varRef name="currentPosition" slot="17"/>
                    </cast>
                    <cast as="xs:integer" emptiable="0">
                     <data>
                      <varRef name="centralLeftLeafPos" slot="9"/>
                     </data>
                    </cast>
                   </vc>
                   <valueOf line="251" flags="l">
                    <str val="1"/>
                   </valueOf>
                   <and line="256" op="and">
                    <compareToInt op="eq" val="1">
                     <arith op="-" calc="i-i">
                      <cast as="xs:integer" emptiable="0">
                       <varRef name="currentPosition" slot="17"/>
                      </cast>
                      <cast as="xs:integer" emptiable="0">
                       <data>
                        <varRef name="centralLeftLeafPos" slot="9"/>
                       </data>
                      </cast>
                     </arith>
                    </compareToInt>
                    <vc op="eq" onEmpty="0" comp="CCC">
                     <atomSing card="?" diag="1|0||eq">
                      <slash>
                       <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}attachment-method)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='attachment-method';"/>
                       <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name=='target'"/>
                      </slash>
                     </atomSing>
                     <fn name="concat">
                      <str val="#"/>
                      <atomSing card="?" diag="0|1||concat">
                       <slash simple="1">
                        <first>
                         <slash simple="1">
                          <dot type="node()"/>
                          <axis name="preceding-sibling" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                         </slash>
                        </first>
                        <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
                       </slash>
                      </atomSing>
                     </fn>
                    </vc>
                   </and>
                   <valueOf line="257" flags="l">
                    <str val="1"/>
                   </valueOf>
                   <true/>
                   <valueOf line="260" flags="l">
                    <str val="2"/>
                   </valueOf>
                  </choose>
                  <true/>
                  <valueOf line="271" flags="l">
                   <convert from="xs:integer" to="xs:string">
                    <choose>
                     <vc op="le" onEmpty="0" comp="CAVC">
                      <cast as="xs:integer" emptiable="0">
                       <varRef name="currentPosition" slot="17"/>
                      </cast>
                      <cast as="xs:integer" emptiable="0">
                       <data>
                        <varRef name="centralLeftLeafPos" slot="9"/>
                       </data>
                      </cast>
                     </vc>
                     <int val="1"/>
                     <true/>
                     <int val="2"/>
                    </choose>
                   </convert>
                  </valueOf>
                 </choose>
                </doc>
                <elem ns="=http://www.w3.org/2000/svg xsl=http://www.w3.org/1999/XSL/Transform svg=http://www.w3.org/2000/svg xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree xlink=http://www.w3.org/1999/xlink" line="315" name="g" nsuri="http://www.w3.org/2000/svg" flags="d">
                 <sequence line="319">
                  <choose>
                   <vc op="eq" onEmpty="0" comp="CCC">
                    <fn line="316" name="string-join">
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <data>
                       <slash>
                        <slash>
                         <axis name="parent" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
                         <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}direction)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='direction';"/>
                        </slash>
                        <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                       </slash>
                      </data>
                     </convert>
                     <str val=" "/>
                    </fn>
                    <str val="r-l"/>
                   </vc>
                   <att line="322" name="transform" flags="l">
                    <fn name="string-join">
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <data>
                       <mergeAdj>
                        <sequence>
                         <valueOf>
                          <fn name="concat">
                           <str val="rotate("/>
                           <int val="180"/>
                           <str val=" "/>
                           <int val="40"/>
                           <str val=" "/>
                           <varRef ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="238" name="vv:loc960587302" slot="16"/>
                           <str val=")"/>
                          </fn>
                         </valueOf>
                         <valueOf line="325">
                          <fn name="concat">
                           <str val="translate("/>
                           <minus>
                            <arith op="+" calc="c+c">
                             <int val="150"/>
                             <arith op="*" calc="c*c">
                              <varRef name="countRegularBifolia" slot="7"/>
                              <int val="6"/>
                             </arith>
                            </arith>
                           </minus>
                           <str val=" "/>
                           <str val="0)"/>
                          </fn>
                         </valueOf>
                        </sequence>
                       </mergeAdj>
                      </data>
                     </convert>
                     <str val=""/>
                    </fn>
                   </att>
                  </choose>
                  <elem line="332" name="desc" nsuri="http://www.w3.org/2000/svg" flags="dl">
                   <sequence>
                    <valueOf flags="l">
                     <str val="Folio #"/>
                    </valueOf>
                    <valueOf flags="l">
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <data>
                       <slash simple="1">
                        <first>
                         <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                        </first>
                        <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                       </slash>
                      </data>
                     </convert>
                    </valueOf>
                   </sequence>
                  </elem>
                  <callT line="335" name="leafPath" bSlot="1">
                   <withParam name="Cx" flags="c" as="xs:anyAtomicType">
                    <int val="40"/>
                   </withParam>
                   <withParam name="Cy" flags="c" as="xs:anyAtomicType?">
                    <varRef ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="238" name="vv:loc960587302" slot="16"/>
                   </withParam>
                   <withParam name="manuscript" flags="c" as="item()*">
                    <varRef line="338" name="manuscript" slot="0"/>
                   </withParam>
                   <withParam name="countRegularBifolia" flags="c" as="xs:anyAtomicType?">
                    <varRef line="339" name="countRegularBifolia" slot="7"/>
                   </withParam>
                   <withParam name="countRegularBifolia2" flags="c" as="xs:anyAtomicType?">
                    <varRef line="340" name="countRegularBifolia2" slot="8"/>
                   </withParam>
                   <withParam name="countSubquireLeaves" flags="c" as="document-node()">
                    <varRef line="341" name="countSubquireLeaves" slot="6"/>
                   </withParam>
                   <withParam name="followingComponents" flags="c" as="xs:float">
                    <cvUntyped line="343" to="xs:float">
                     <cast ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="279" as="xs:untypedAtomic" emptiable="0">
                      <fn name="string">
                       <choose>
                        <compareToInt op="eq" val="1">
                         <cast as="xs:double" emptiable="0">
                          <data>
                           <varRef name="left1_Right2" slot="18"/>
                          </data>
                         </cast>
                        </compareToInt>
                        <cast line="282" as="xs:untypedAtomic" emptiable="0">
                         <fn name="string">
                          <convert from="xs:double" to="xs:string">
                           <arith op="+" calc="d+d">
                            <arith op="-" calc="i-i">
                             <cast as="xs:integer" emptiable="0">
                              <data>
                               <varRef name="centralLeftLeafPos" slot="9"/>
                              </data>
                             </cast>
                             <cast as="xs:integer" emptiable="1">
                              <data>
                               <slash simple="1">
                                <first>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                </first>
                                <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                               </slash>
                              </data>
                             </cast>
                            </arith>
                            <cvUntyped to="xs:double">
                             <varRef name="extraCentralSubquireLeft" slot="11"/>
                            </cvUntyped>
                           </arith>
                          </convert>
                         </fn>
                        </cast>
                        <compareToInt line="285" op="eq" val="2">
                         <cast as="xs:double" emptiable="0">
                          <data>
                           <varRef name="left1_Right2" slot="18"/>
                          </data>
                         </cast>
                        </compareToInt>
                        <cast line="288" as="xs:untypedAtomic" emptiable="0">
                         <fn name="string">
                          <convert from="xs:double" to="xs:string">
                           <arith op="-" calc="d-d">
                            <arith op="-" calc="i-i">
                             <cast as="xs:integer" emptiable="1">
                              <data>
                               <slash simple="1">
                                <first>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                </first>
                                <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                               </slash>
                              </data>
                             </cast>
                             <arith op="+" calc="i+i">
                              <cast as="xs:integer" emptiable="0">
                               <data>
                                <varRef name="centralLeftLeafPos" slot="9"/>
                               </data>
                              </cast>
                              <int val="1"/>
                             </arith>
                            </arith>
                            <cvUntyped to="xs:double">
                             <varRef name="extraCentralSubquireLeft" slot="11"/>
                            </cvUntyped>
                           </arith>
                          </convert>
                         </fn>
                        </cast>
                       </choose>
                      </fn>
                     </cast>
                    </cvUntyped>
                   </withParam>
                   <withParam name="followingRegularComponents" flags="c" as="xs:integer">
                    <cvUntyped line="345" to="xs:integer">
                     <cast ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="296" as="xs:untypedAtomic" emptiable="0">
                      <fn name="string">
                       <choose>
                        <compareToInt op="eq" val="1">
                         <cast as="xs:double" emptiable="0">
                          <data>
                           <varRef name="left1_Right2" slot="18"/>
                          </data>
                         </cast>
                        </compareToInt>
                        <convert line="299" from="xs:integer" to="xs:untypedAtomic">
                         <fn name="count">
                          <let var="vv:loc1022363936" as="xs:integer" slot="19" eval="7">
                           <cast as="xs:integer" emptiable="0">
                            <data>
                             <varRef name="centralLeftLeafPos" slot="9"/>
                            </data>
                           </cast>
                           <filter flags="b">
                            <axis name="following-sibling" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                            <and op="and">
                             <and op="and">
                              <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                               <currentGroupingKey/>
                               <data>
                                <slash simple="1">
                                 <first>
                                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                 </first>
                                 <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                                </slash>
                               </data>
                              </gcEE>
                              <and op="and">
                               <fn name="not">
                                <gcEE op="=" card="N:1" comp="CCC">
                                 <data>
                                  <slash>
                                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                                   <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                                  </slash>
                                 </data>
                                 <str val="yes"/>
                                </gcEE>
                               </fn>
                               <fn name="not">
                                <fn name="contains">
                                 <cvUntyped to="xs:string">
                                  <data>
                                   <slash simple="1">
                                    <first>
                                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                    </first>
                                    <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                                   </slash>
                                  </data>
                                 </cvUntyped>
                                 <str val="."/>
                                </fn>
                               </fn>
                              </and>
                             </and>
                             <vc op="le" onEmpty="0" comp="CAVC">
                              <slash>
                               <first>
                                <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                               </first>
                               <cast as="xs:integer" emptiable="1">
                                <data>
                                 <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                                </data>
                               </cast>
                              </slash>
                              <varRef name="vv:loc1022363936" slot="19"/>
                             </vc>
                            </and>
                           </filter>
                          </let>
                         </fn>
                        </convert>
                        <compareToInt line="302" op="eq" val="2">
                         <cast as="xs:double" emptiable="0">
                          <data>
                           <varRef name="left1_Right2" slot="18"/>
                          </data>
                         </cast>
                        </compareToInt>
                        <convert line="305" from="xs:integer" to="xs:untypedAtomic">
                         <fn name="count">
                          <let var="vv:loc995144652" as="xs:integer" slot="20" eval="7">
                           <cast as="xs:integer" emptiable="0">
                            <data>
                             <varRef name="centralLeftLeafPos" slot="9"/>
                            </data>
                           </cast>
                           <filter flags="b">
                            <slash simple="1">
                             <dot type="node()"/>
                             <axis name="preceding-sibling" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                            </slash>
                            <and op="and">
                             <and op="and">
                              <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                               <currentGroupingKey/>
                               <data>
                                <slash simple="1">
                                 <first>
                                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                 </first>
                                 <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                                </slash>
                               </data>
                              </gcEE>
                              <and op="and">
                               <fn name="not">
                                <gcEE op="=" card="N:1" comp="CCC">
                                 <data>
                                  <slash>
                                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                                   <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                                  </slash>
                                 </data>
                                 <str val="yes"/>
                                </gcEE>
                               </fn>
                               <fn name="not">
                                <fn name="contains">
                                 <cvUntyped to="xs:string">
                                  <data>
                                   <slash simple="1">
                                    <first>
                                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                    </first>
                                    <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                                   </slash>
                                  </data>
                                 </cvUntyped>
                                 <str val="."/>
                                </fn>
                               </fn>
                              </and>
                             </and>
                             <vc op="gt" onEmpty="0" comp="CAVC">
                              <slash>
                               <first>
                                <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                               </first>
                               <cast as="xs:integer" emptiable="1">
                                <data>
                                 <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                                </data>
                               </cast>
                              </slash>
                              <varRef name="vv:loc995144652" slot="20"/>
                             </vc>
                            </and>
                           </filter>
                          </let>
                         </fn>
                        </convert>
                       </choose>
                      </fn>
                     </cast>
                    </cvUntyped>
                   </withParam>
                   <withParam name="left1_Right2" flags="c" as="document-node()">
                    <varRef line="346" name="left1_Right2" slot="18"/>
                   </withParam>
                   <withParam name="centralLeftLeafPos" flags="c" as="document-node()">
                    <varRef ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="238" name="vv:loc1370376695" slot="15"/>
                   </withParam>
                  </callT>
                 </sequence>
                </elem>
               </let>
              </let>
             </forEach>
            </let>
           </let>
           <choose line="352">
            <fn name="exists">
             <filter flags="b">
              <slash>
               <slash>
                <slash>
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                  <currentGroup/>
                 </treat>
                 <dot type="node()"/>
                </slash>
                <first>
                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                </first>
               </slash>
               <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
              </slash>
              <fn name="contains">
               <cvUntyped to="xs:string">
                <data>
                 <dot type="attribute(Q{}n)"/>
                </data>
               </cvUntyped>
               <str val="."/>
              </fn>
             </filter>
            </fn>
            <callT line="356" name="bifoliaDiagram_SQ" bSlot="2">
             <withParam name="subquires" flags="c" as="document-node()">
              <doc line="358" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
               <copyOf flags="vsc">
                <varRef name="subquires" slot="3"/>
               </copyOf>
              </doc>
             </withParam>
             <withParam name="manuscript" flags="c" as="document-node()">
              <doc line="361" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
               <copyOf flags="vsc">
                <varRef name="manuscript" slot="0"/>
               </copyOf>
              </doc>
             </withParam>
             <withParam name="centralLeftLeafPos" flags="c" as="document-node()">
              <varRef line="363" name="centralLeftLeafPos" slot="9"/>
             </withParam>
             <withParam name="countRegularBifolia" flags="c" as="xs:integer">
              <treat line="365" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|countRegularBifolia">
               <check card="1" diag="8|0|XTTE0590|countRegularBifolia">
                <varRef name="countRegularBifolia" slot="7"/>
               </check>
              </treat>
             </withParam>
             <withParam name="countRegularBifolia2" flags="c" as="xs:anyAtomicType?">
              <varRef line="366" name="countRegularBifolia2" slot="8"/>
             </withParam>
             <withParam name="countSubquireLeaves" flags="c" as="document-node()">
              <varRef line="367" name="countSubquireLeaves" slot="6"/>
             </withParam>
             <withParam name="NSubquires" flags="c" as="xs:integer">
              <fn line="355" name="count">
               <conditionalSort>
                <fn name="exists">
                 <tail start="2">
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                   <varRef name="subquires" slot="3"/>
                  </treat>
                 </tail>
                </fn>
                <docOrder intra="0">
                 <slash>
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                   <varRef name="subquires" slot="3"/>
                  </treat>
                  <axis name="child" nodeTest="element(Q{temporaryTree}subquire)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='temporaryTree'&amp;&amp;q.local=='subquire';"/>
                 </slash>
                </docOrder>
               </conditionalSort>
              </fn>
             </withParam>
            </callT>
           </choose>
          </sequence>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="7" binds="">
  <template name="Q{}attachment-method" flags="os" line="1411" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" slots="8">
   <sequence role="body" vn="20" baseUri="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" defaultElementNS="http://schoenberginstitute.org/schema/collation" ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="1412">
    <param name="Cx_A" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <param line="1413" name="Cy_A" slot="1">
     <str role="select" val=""/>
     <supplied role="conversion" slot="1"/>
    </param>
    <param line="1414" name="countRegularBifolia" slot="2">
     <str role="select" val=""/>
     <supplied role="conversion" slot="2"/>
    </param>
    <param line="1415" name="countRegularBifolia2" slot="3">
     <str role="select" val=""/>
     <supplied role="conversion" slot="3"/>
    </param>
    <param line="1416" name="positions_SQ" slot="4">
     <int role="select" val="0"/>
     <supplied role="conversion" slot="4"/>
    </param>
    <param line="1417" name="lineLength" slot="5">
     <str role="select" val=""/>
     <supplied role="conversion" slot="5"/>
    </param>
    <param line="1418" name="parametricY" slot="6">
     <str role="select" val=""/>
     <supplied role="conversion" slot="6"/>
    </param>
    <param line="1419" name="attachmentDeviation" slot="7">
     <int role="select" val="1"/>
     <supplied role="conversion" slot="7"/>
    </param>
    <elem ns="=http://www.w3.org/2000/svg xsl=http://www.w3.org/1999/XSL/Transform svg=http://www.w3.org/2000/svg xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree xlink=http://www.w3.org/1999/xlink" line="1426" name="g" nsuri="http://www.w3.org/2000/svg" flags="d">
     <sequence>
      <att name="class" flags="l">
       <str val="leaf"/>
      </att>
      <elem name="desc" nsuri="http://www.w3.org/2000/svg" flags="dl">
       <sequence>
        <valueOf flags="l">
         <str val="Attachment method - "/>
        </valueOf>
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
           </slash>
          </data>
         </convert>
        </valueOf>
       </sequence>
      </elem>
      <choose line="1429">
       <gc op="=" card="1:1" comp="CCC">
        <data>
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
         </slash>
        </data>
        <str val="sewn"/>
       </gc>
       <elem line="1433" name="path" nsuri="http://www.w3.org/2000/svg" flags="dl">
        <att name="d" flags="l">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <mergeAdj>
             <sequence>
              <valueOf flags="S">
               <str val="M"/>
              </valueOf>
              <valueOf>
               <convert from="xs:numeric" to="xs:string">
                <arith op="+" calc="a+a">
                 <cvUntyped to="xs:double">
                  <atomSing card="?" diag="1|0||+">
                   <varRef name="Cx_A" slot="0"/>
                  </atomSing>
                 </cvUntyped>
                 <cvUntyped to="xs:double">
                  <arith op="-" calc="a-a">
                   <cvUntyped to="xs:double">
                    <arith op="*" calc="a*a">
                     <int val="6"/>
                     <cvUntyped to="xs:double">
                      <atomSing card="?" diag="1|1||*">
                       <varRef name="countRegularBifolia" slot="2"/>
                      </atomSing>
                     </cvUntyped>
                    </arith>
                   </cvUntyped>
                   <int val="2"/>
                  </arith>
                 </cvUntyped>
                </arith>
               </convert>
              </valueOf>
              <valueOf flags="S">
               <str val=","/>
              </valueOf>
              <valueOf line="1435">
               <fn name="string-join">
                <convert from="xs:anyAtomicType" to="xs:string">
                 <data>
                  <mergeAdj>
                   <varRef name="Cy_A" slot="1"/>
                  </mergeAdj>
                 </data>
                </convert>
                <str val=" "/>
               </fn>
              </valueOf>
              <valueOf>
               <str val=" L"/>
              </valueOf>
              <valueOf line="1438">
               <convert from="xs:numeric" to="xs:string">
                <arith op="-" calc="a-a">
                 <cvUntyped to="xs:double">
                  <arith op="-" calc="a-a">
                   <cvUntyped to="xs:double">
                    <arith op="+" calc="a+a">
                     <cvUntyped to="xs:double">
                      <atomSing card="?" diag="1|0||+">
                       <varRef name="Cx_A" slot="0"/>
                      </atomSing>
                     </cvUntyped>
                     <cvUntyped to="xs:double">
                      <arith op="-" calc="a-a">
                       <cvUntyped to="xs:double">
                        <arith op="*" calc="a*a">
                         <int val="6"/>
                         <cvUntyped to="xs:double">
                          <atomSing card="?" diag="1|1||*">
                           <varRef name="countRegularBifolia" slot="2"/>
                          </atomSing>
                         </cvUntyped>
                        </arith>
                       </cvUntyped>
                       <int val="2"/>
                      </arith>
                     </cvUntyped>
                    </arith>
                   </cvUntyped>
                   <cvUntyped to="xs:double">
                    <arith op="*" calc="a*a">
                     <int val="6"/>
                     <cvUntyped to="xs:double">
                      <arith op="+" calc="a+a">
                       <cvUntyped to="xs:double">
                        <atomSing card="?" diag="1|0||+">
                         <varRef name="countRegularBifolia2" slot="3"/>
                        </atomSing>
                       </cvUntyped>
                       <int val="2"/>
                      </arith>
                     </cvUntyped>
                    </arith>
                   </cvUntyped>
                  </arith>
                 </cvUntyped>
                 <cvUntyped to="xs:double">
                  <arith op="*" calc="a*a">
                   <int val="3"/>
                   <cvUntyped to="xs:double">
                    <atomSing card="?" diag="1|1||*">
                     <varRef name="positions_SQ" slot="4"/>
                    </atomSing>
                   </cvUntyped>
                  </arith>
                 </cvUntyped>
                </arith>
               </convert>
              </valueOf>
              <valueOf flags="S">
               <str val=","/>
              </valueOf>
              <valueOf line="1440">
               <fn name="string-join">
                <convert from="xs:anyAtomicType" to="xs:string">
                 <data>
                  <mergeAdj>
                   <varRef name="Cy_A" slot="1"/>
                  </mergeAdj>
                 </data>
                </convert>
                <str val=" "/>
               </fn>
              </valueOf>
             </sequence>
            </mergeAdj>
           </data>
          </convert>
          <str val=""/>
         </fn>
        </att>
       </elem>
       <gc line="1444" op="=" card="1:1" comp="CCC">
        <data>
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
         </slash>
        </data>
        <str val="pasted"/>
       </gc>
       <sequence line="1447">
        <elem name="rect" nsuri="http://www.w3.org/2000/svg" flags="dl">
         <sequence>
          <att name="x" flags="l">
           <convert from="xs:numeric" to="xs:string">
            <arith op="+" calc="a+a">
             <cvUntyped to="xs:double">
              <atomSing card="?" diag="1|0||+">
               <varRef name="Cx_A" slot="0"/>
              </atomSing>
             </cvUntyped>
             <cvUntyped to="xs:double">
              <arith op="-" calc="a-a">
               <cvUntyped to="xs:double">
                <arith op="*" calc="a*a">
                 <int val="6"/>
                 <cvUntyped to="xs:double">
                  <atomSing card="?" diag="1|1||*">
                   <varRef name="countRegularBifolia" slot="2"/>
                  </atomSing>
                 </cvUntyped>
                </arith>
               </cvUntyped>
               <int val="2"/>
              </arith>
             </cvUntyped>
            </arith>
           </convert>
          </att>
          <att name="y" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="Cy_A" slot="1"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <att name="width" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="lineLength" slot="5"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <att name="height" flags="l">
           <str val="6"/>
          </att>
          <att name="fill" flags="l">
           <str val="url(#gluedPattern)"/>
          </att>
          <att name="stroke-opacity" flags="l">
           <str val="0.0"/>
          </att>
         </sequence>
        </elem>
        <choose line="1449">
         <gc op="=" card="1:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <fn name="abs">
           <treat as="xs:numeric" jsTest="return SaxonJS.U.Atomic.numeric.matches(item);" diag="0|0||abs">
            <check card="?" diag="0|0||abs">
             <cvUntyped to="xs:numeric">
              <data>
               <varRef name="attachmentDeviation" slot="7"/>
              </data>
             </cvUntyped>
            </check>
           </treat>
          </fn>
          <int val="2"/>
         </gc>
         <elem line="1453" name="rect" nsuri="http://www.w3.org/2000/svg" flags="dl">
          <sequence>
           <att name="x" flags="l">
            <convert from="xs:numeric" to="xs:string">
             <arith op="+" calc="a+a">
              <cvUntyped to="xs:double">
               <atomSing card="?" diag="1|0||+">
                <varRef name="Cx_A" slot="0"/>
               </atomSing>
              </cvUntyped>
              <cvUntyped to="xs:double">
               <arith op="-" calc="a-a">
                <cvUntyped to="xs:double">
                 <arith op="*" calc="a*a">
                  <int val="6"/>
                  <cvUntyped to="xs:double">
                   <atomSing card="?" diag="1|1||*">
                    <varRef name="countRegularBifolia" slot="2"/>
                   </atomSing>
                  </cvUntyped>
                 </arith>
                </cvUntyped>
                <int val="2"/>
               </arith>
              </cvUntyped>
             </arith>
            </convert>
           </att>
           <att name="y" flags="l">
            <convert from="xs:numeric" to="xs:string">
             <arith op="-" calc="a-a">
              <cvUntyped to="xs:double">
               <atomSing card="?" diag="1|0||-">
                <varRef name="Cy_A" slot="1"/>
               </atomSing>
              </cvUntyped>
              <choose>
               <vc op="gt" onEmpty="0" comp="CAVC">
                <cast as="xs:integer" emptiable="1">
                 <atomSing card="?" diag="2|0||cast as">
                  <varRef name="attachmentDeviation" slot="7"/>
                 </atomSing>
                </cast>
                <int val="0"/>
               </vc>
               <int val="6"/>
               <true/>
               <int val="-6"/>
              </choose>
             </arith>
            </convert>
           </att>
           <att name="width" flags="l">
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <varRef name="lineLength" slot="5"/>
               </mergeAdj>
              </data>
             </convert>
             <str val=" "/>
            </fn>
           </att>
           <att name="height" flags="l">
            <str val="6"/>
           </att>
           <att name="fill" flags="l">
            <str val="url(#gluedPattern)"/>
           </att>
           <att name="stroke-opacity" flags="l">
            <str val="0.0"/>
           </att>
          </sequence>
         </elem>
        </choose>
       </sequence>
       <gc line="1457" op="=" card="1:1" comp="CCC">
        <data>
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
         </slash>
        </data>
        <str val="drummed"/>
       </gc>
       <sequence line="1460">
        <elem name="rect" nsuri="http://www.w3.org/2000/svg" flags="dl">
         <sequence>
          <att name="x" flags="l">
           <convert from="xs:numeric" to="xs:string">
            <arith op="+" calc="a+a">
             <cvUntyped to="xs:double">
              <atomSing card="?" diag="1|0||+">
               <varRef name="Cx_A" slot="0"/>
              </atomSing>
             </cvUntyped>
             <cvUntyped to="xs:double">
              <arith op="-" calc="a-a">
               <cvUntyped to="xs:double">
                <arith op="*" calc="a*a">
                 <int val="6"/>
                 <cvUntyped to="xs:double">
                  <atomSing card="?" diag="1|1||*">
                   <varRef name="countRegularBifolia" slot="2"/>
                  </atomSing>
                 </cvUntyped>
                </arith>
               </cvUntyped>
               <int val="2"/>
              </arith>
             </cvUntyped>
            </arith>
           </convert>
          </att>
          <att name="y" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="Cy_A" slot="1"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <att name="width" flags="l">
           <convert from="xs:anyAtomicType" to="xs:string">
            <arith op="div" calc="a/a">
             <cvUntyped to="xs:double">
              <atomSing card="?" diag="1|0||div">
               <varRef name="lineLength" slot="5"/>
              </atomSing>
             </cvUntyped>
             <int val="4"/>
            </arith>
           </convert>
          </att>
          <att name="height" flags="l">
           <str val="6"/>
          </att>
          <att name="fill" flags="l">
           <str val="url(#gluedPattern)"/>
          </att>
          <att name="stroke-opacity" flags="l">
           <str val="0.0"/>
          </att>
         </sequence>
        </elem>
        <elem line="1464" name="rect" nsuri="http://www.w3.org/2000/svg" flags="dl">
         <sequence>
          <att name="x" flags="l">
           <convert from="xs:numeric" to="xs:string">
            <arith op="+" calc="a+a">
             <cvUntyped to="xs:double">
              <arith op="+" calc="a+a">
               <cvUntyped to="xs:double">
                <atomSing card="?" diag="1|0||+">
                 <varRef name="Cx_A" slot="0"/>
                </atomSing>
               </cvUntyped>
               <cvUntyped to="xs:double">
                <arith op="-" calc="a-a">
                 <cvUntyped to="xs:double">
                  <arith op="*" calc="a*a">
                   <int val="6"/>
                   <cvUntyped to="xs:double">
                    <atomSing card="?" diag="1|1||*">
                     <varRef name="countRegularBifolia" slot="2"/>
                    </atomSing>
                   </cvUntyped>
                  </arith>
                 </cvUntyped>
                 <int val="2"/>
                </arith>
               </cvUntyped>
              </arith>
             </cvUntyped>
             <cvUntyped to="xs:double">
              <arith op="*" calc="a*a">
               <cvUntyped to="xs:double">
                <arith op="div" calc="a/a">
                 <cvUntyped to="xs:double">
                  <atomSing card="?" diag="1|0||div">
                   <varRef name="lineLength" slot="5"/>
                  </atomSing>
                 </cvUntyped>
                 <int val="4"/>
                </arith>
               </cvUntyped>
               <int val="3"/>
              </arith>
             </cvUntyped>
            </arith>
           </convert>
          </att>
          <att name="y" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="Cy_A" slot="1"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <att name="width" flags="l">
           <convert from="xs:anyAtomicType" to="xs:string">
            <arith op="div" calc="a/a">
             <cvUntyped to="xs:double">
              <atomSing card="?" diag="1|0||div">
               <varRef name="lineLength" slot="5"/>
              </atomSing>
             </cvUntyped>
             <int val="4"/>
            </arith>
           </convert>
          </att>
          <att name="height" flags="l">
           <str val="6"/>
          </att>
          <att name="fill" flags="l">
           <str val="url(#gluedPattern)"/>
          </att>
          <att name="stroke-opacity" flags="l">
           <str val="0.0"/>
          </att>
         </sequence>
        </elem>
       </sequence>
       <gc line="1466" op="=" card="1:1" comp="CCC">
        <data>
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
         </slash>
        </data>
        <str val="tipped"/>
       </gc>
       <elem line="1469" name="rect" nsuri="http://www.w3.org/2000/svg" flags="dl">
        <sequence>
         <att name="x" flags="l">
          <convert from="xs:numeric" to="xs:string">
           <arith op="+" calc="a+a">
            <cvUntyped to="xs:double">
             <atomSing card="?" diag="1|0||+">
              <varRef name="Cx_A" slot="0"/>
             </atomSing>
            </cvUntyped>
            <cvUntyped to="xs:double">
             <arith op="-" calc="a-a">
              <cvUntyped to="xs:double">
               <arith op="*" calc="a*a">
                <int val="6"/>
                <cvUntyped to="xs:double">
                 <atomSing card="?" diag="1|1||*">
                  <varRef name="countRegularBifolia" slot="2"/>
                 </atomSing>
                </cvUntyped>
               </arith>
              </cvUntyped>
              <int val="2"/>
             </arith>
            </cvUntyped>
           </arith>
          </convert>
         </att>
         <att name="y" flags="l">
          <fn name="string-join">
           <convert from="xs:anyAtomicType" to="xs:string">
            <data>
             <mergeAdj>
              <varRef name="Cy_A" slot="1"/>
             </mergeAdj>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </att>
         <att name="width" flags="l">
          <convert from="xs:anyAtomicType" to="xs:string">
           <arith op="div" calc="a/a">
            <cvUntyped to="xs:double">
             <atomSing card="?" diag="1|0||div">
              <varRef name="lineLength" slot="5"/>
             </atomSing>
            </cvUntyped>
            <int val="12"/>
           </arith>
          </convert>
         </att>
         <att name="height" flags="l">
          <str val="6"/>
         </att>
         <att name="fill" flags="l">
          <str val="url(#gluedPattern)"/>
         </att>
         <att name="stroke-opacity" flags="l">
          <str val="0.0"/>
         </att>
        </sequence>
       </elem>
      </choose>
     </sequence>
    </elem>
   </sequence>
  </template>
 </co>
 <co id="8" binds="4 1 5">
  <template name="Q{}main" flags="os" line="27" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" slots="12">
   <forEach role="body" vn="20" baseUri="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" defaultElementNS="http://schoenberginstitute.org/schema/collation" ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="29">
    <slash>
     <slash simple="1">
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
       <dot flags="a"/>
      </treat>
      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}viscoll)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='viscoll';"/>
     </slash>
     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
    </slash>
    <let line="31" var="shelfmark" as="xs:untypedAtomic" slot="0" eval="7">
     <cast line="32" as="xs:untypedAtomic" emptiable="0">
      <fn name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <mergeAdj>
          <slash>
           <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}shelfmark)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='shelfmark';"/>
           <axis name="child" nodeTest="text()" jsTest="return item.nodeType==3;"/>
          </slash>
         </mergeAdj>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </cast>
     <let line="35" var="msID" as="xs:string" slot="1" eval="8">
      <fn name="concat">
       <str val="id-"/>
       <fn name="translate">
        <cvUntyped to="xs:string">
         <varRef name="shelfmark" slot="0"/>
        </cvUntyped>
        <str val=" "/>
        <str val=""/>
       </fn>
      </fn>
      <let line="37" var="manuscript" as="document-node()" slot="2" eval="7">
       <doc line="38" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
        <copyOf flags="vsc">
         <dot type="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)"/>
        </copyOf>
       </doc>
       <forEachGroup line="48" algorithm="by">
        <axis role="select" name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
        <choose role="key">
         <fn name="contains">
          <cvUntyped to="xs:string">
           <data>
            <slash simple="1">
             <first>
              <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
             </first>
             <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
            </slash>
           </data>
          </cvUntyped>
          <str val="."/>
         </fn>
         <fn name="substring-before">
          <cvUntyped to="xs:string">
           <data>
            <slash simple="1">
             <first>
              <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
             </first>
             <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
            </slash>
           </data>
          </cvUntyped>
          <str val="."/>
         </fn>
         <true/>
         <data>
          <slash simple="1">
           <first>
            <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
           </first>
           <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
          </slash>
         </data>
        </choose>
        <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
        <let role="content" line="49" var="quireNumber" as="document-node()" slot="3" eval="7">
         <doc line="50" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
          <valueOf flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <currentGroupingKey/>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
         </doc>
         <let line="52" var="positions" as="xs:untypedAtomic" slot="4" eval="8">
          <convert from="xs:integer" to="xs:untypedAtomic">
           <fn name="count">
            <currentGroup/>
           </fn>
          </convert>
          <resultDoc line="59" global="#&#xD;&#xA;#Mon Jun 04 15:52:17 CEST 2018&#xD;&#xA;indent=yes&#xD;&#xA;standalone=no&#xD;&#xA;doctype-system=http\://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD SVG 1.1//EN&#xD;&#xA;include-content-type=no&#xD;&#xA;method=xml&#xD;&#xA;" local="#&#xD;&#xA;#Mon Jun 04 15:52:17 CEST 2018&#xD;&#xA;indent=yes&#xD;&#xA;doctype-system=http\://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD SVG 1.1//EN&#xD;&#xA;method=xml&#xD;&#xA;">
           <fn role="href" name="concat">
            <varRef name="msID" slot="1"/>
            <str val="/"/>
            <varRef name="msID" slot="1"/>
            <str val="-"/>
            <data>
             <varRef name="quireNumber" slot="3"/>
            </data>
            <str val=".svg"/>
           </fn>
           <sequence role="content" line="60">
            <procInst>
             <str role="name" val="xml-stylesheet"/>
             <fn role="select" name="string-join">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <mergeAdj>
                 <sequence>
                  <valueOf>
                   <str val="href=&#34;collation.css&#34; "/>
                  </valueOf>
                  <valueOf flags="S">
                   <str val="type=&#34;text/css&#34;"/>
                  </valueOf>
                 </sequence>
                </mergeAdj>
               </data>
              </convert>
              <str val=" "/>
             </fn>
            </procInst>
            <valueOf>
             <str val="&#xA;"/>
            </valueOf>
            <comment line="68">
             <fn name="string-join">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <mergeAdj>
                 <sequence>
                  <valueOf>
                   <str val="SVG file generated on: "/>
                  </valueOf>
                  <valueOf>
                   <fn name="format-dateTime">
                    <fn name="current-dateTime"/>
                    <str val="[D] [MNn] [Y] at [H]:[m]:[s]"/>
                   </fn>
                  </valueOf>
                  <valueOf>
                   <str val=" using "/>
                  </valueOf>
                  <valueOf line="70">
                   <str val="SAXON"/>
                  </valueOf>
                  <valueOf>
                   <str val=" version "/>
                  </valueOf>
                  <valueOf line="72">
                   <str val="JS 9.7.0.21"/>
                  </valueOf>
                 </sequence>
                </mergeAdj>
               </data>
              </convert>
              <str val=" "/>
             </fn>
            </comment>
            <valueOf>
             <str val="&#xA;"/>
            </valueOf>
            <elem ns="=http://www.w3.org/2000/svg xsl=http://www.w3.org/1999/XSL/Transform svg=http://www.w3.org/2000/svg xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree xlink=http://www.w3.org/1999/xlink" line="81" name="svg" nsuri="http://www.w3.org/2000/svg" flags="d">
             <sequence>
              <att name="version" flags="l">
               <str val="1.1"/>
              </att>
              <att name="x" flags="l">
               <str val="0"/>
              </att>
              <att name="y" flags="l">
               <str val="0"/>
              </att>
              <att name="width" flags="l">
               <fn name="concat">
                <arith op="+" calc="d+d">
                 <dec val="18.75"/>
                 <arith op="*" calc="d*d">
                  <int val="6"/>
                  <cvUntyped to="xs:double">
                   <varRef name="positions" slot="4"/>
                  </cvUntyped>
                 </arith>
                </arith>
                <str val="mm"/>
               </fn>
              </att>
              <att name="height" flags="l">
               <fn name="concat">
                <arith op="+" calc="d+d">
                 <dec val="18.75"/>
                 <arith op="*" calc="d*d">
                  <int val="6"/>
                  <cvUntyped to="xs:double">
                   <varRef name="positions" slot="4"/>
                  </cvUntyped>
                 </arith>
                </arith>
                <str val="mm"/>
               </fn>
              </att>
              <att name="preserveAspectRatio" flags="l">
               <str val="xMidYMid meet"/>
              </att>
              <att name="style" flags="l">
               <str val="background: #FFFFFF;"/>
              </att>
              <att name="viewBox" flags="l">
               <fn name="concat">
                <str val="0 0 "/>
                <convert from="xs:double" to="xs:string">
                 <arith op="+" calc="d+d">
                  <arith op="+" calc="d+d">
                   <dec val="18.75"/>
                   <arith op="*" calc="d*d">
                    <int val="6"/>
                    <cvUntyped to="xs:double">
                     <varRef name="positions" slot="4"/>
                    </cvUntyped>
                   </arith>
                  </arith>
                  <int val="40"/>
                 </arith>
                </convert>
                <str val=" "/>
                <convert from="xs:double" to="xs:string">
                 <arith op="+" calc="d+d">
                  <arith op="+" calc="d+d">
                   <dec val="18.75"/>
                   <arith op="*" calc="d*d">
                    <int val="6"/>
                    <cvUntyped to="xs:double">
                     <varRef name="positions" slot="4"/>
                    </cvUntyped>
                   </arith>
                  </arith>
                  <int val="40"/>
                 </arith>
                </convert>
               </fn>
              </att>
              <let line="83" var="description" as="xs:untypedAtomic" slot="5" eval="7">
               <cast as="xs:untypedAtomic" emptiable="0">
                <fn name="string-join">
                 <sequence>
                  <atomic val=" Collation diagram of quire " type="xs:untypedAtomic"/>
                  <data line="84">
                   <varRef name="quireNumber" slot="3"/>
                  </data>
                  <atomic val=" for " type="xs:untypedAtomic"/>
                  <varRef line="84" name="shelfmark" slot="0"/>
                  <atomic val="&#xA;                            composed of " type="xs:untypedAtomic"/>
                  <convert from="xs:integer" to="xs:untypedAtomic">
                   <fn name="count">
                    <currentGroup/>
                   </fn>
                  </convert>
                  <cast line="92" as="xs:untypedAtomic" emptiable="0">
                   <choose>
                    <fn name="exists">
                     <tail start="2">
                      <currentGroup/>
                     </tail>
                    </fn>
                    <str val=" leaves"/>
                    <true/>
                    <str val=" leaf"/>
                   </choose>
                  </cast>
                 </sequence>
                 <str val=""/>
                </fn>
               </cast>
               <sequence line="95">
                <elem name="title" nsuri="http://www.w3.org/2000/svg" flags="dl">
                 <valueOf flags="l">
                  <fn name="normalize-space">
                   <cvUntyped to="xs:string">
                    <varRef name="description" slot="5"/>
                   </cvUntyped>
                  </fn>
                 </valueOf>
                </elem>
                <callT line="98" name="defs" bSlot="0"/>
                <elem line="100" name="desc" nsuri="http://www.w3.org/2000/svg" flags="dl">
                 <valueOf flags="l">
                  <fn name="normalize-space">
                   <cvUntyped to="xs:string">
                    <varRef name="description" slot="5"/>
                   </cvUntyped>
                  </fn>
                 </valueOf>
                </elem>
                <elem line="108" name="svg" nsuri="http://www.w3.org/2000/svg" flags="dl">
                 <sequence>
                  <att name="x" flags="l">
                   <str val="25"/>
                  </att>
                  <att name="y" flags="l">
                   <convert from="xs:integer" to="xs:string">
                    <arith op="+" calc="i+i">
                     <gVarRef name="Q{}Oy" bSlot="1"/>
                     <int val="5"/>
                    </arith>
                   </convert>
                  </att>
                  <callT line="131" name="bifoliaDiagram" bSlot="2">
                   <withParam name="odd1_Even2" flags="c" as="xs:integer">
                    <choose line="138">
                     <compareToInt op="eq" val="0">
                      <arith op="mod" calc="d%d">
                       <cvUntyped to="xs:double">
                        <varRef name="positions" slot="4"/>
                       </cvUntyped>
                       <int val="2"/>
                      </arith>
                     </compareToInt>
                     <int val="2"/>
                     <true/>
                     <int val="1"/>
                    </choose>
                   </withParam>
                   <withParam name="positions" flags="c" as="xs:integer">
                    <cvUntyped line="139" to="xs:integer">
                     <varRef name="positions" slot="4"/>
                    </cvUntyped>
                   </withParam>
                   <withParam name="subquires" flags="c" as="document-node()">
                    <doc line="115" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
                     <forEachGroup algorithm="by">
                      <docOrder role="select" intra="1">
                       <filter flags="b">
                        <slash>
                         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                          <currentGroup/>
                         </treat>
                         <dot type="node()"/>
                        </slash>
                        <fn name="exists">
                         <filter flags="b">
                          <slash simple="1">
                           <first>
                            <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                           </first>
                           <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                          </slash>
                          <fn name="contains">
                           <cvUntyped to="xs:string">
                            <data>
                             <dot type="attribute(Q{}n)"/>
                            </data>
                           </cvUntyped>
                           <str val="."/>
                          </fn>
                         </filter>
                        </fn>
                       </filter>
                      </docOrder>
                      <data role="key">
                       <slash simple="1">
                        <first>
                         <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                        </first>
                        <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                       </slash>
                      </data>
                      <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
                      <elem xmlns:tp="temporaryTree" role="content" line="119" name="tp:subquire" flags="l">
                       <sequence>
                        <att name="positions_SQ" flags="l">
                         <convert from="xs:integer" to="xs:string">
                          <fn name="count">
                           <currentGroup/>
                          </fn>
                         </convert>
                        </att>
                        <att line="124" name="subquireLevel" flags="l">
                         <convert from="xs:integer" to="xs:string">
                          <arith op="-" calc="i-i">
                           <fn name="string-length">
                            <cvUntyped to="xs:string">
                             <data>
                              <slash simple="1">
                               <first>
                                <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                               </first>
                               <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                              </slash>
                             </data>
                            </cvUntyped>
                           </fn>
                           <fn name="string-length">
                            <fn name="translate">
                             <cvUntyped to="xs:string">
                              <data>
                               <slash simple="1">
                                <first>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                </first>
                                <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                               </slash>
                              </data>
                             </cvUntyped>
                             <str val="."/>
                             <str val=""/>
                            </fn>
                           </fn>
                          </arith>
                         </convert>
                        </att>
                        <copyOf flags="vsc">
                         <currentGroup/>
                        </copyOf>
                       </sequence>
                      </elem>
                     </forEachGroup>
                    </doc>
                   </withParam>
                   <withParam name="manuscript" flags="c" as="document-node()">
                    <doc line="142" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
                     <copyOf flags="vsc">
                      <varRef name="manuscript" slot="2"/>
                     </copyOf>
                    </doc>
                   </withParam>
                   <withParam name="quireNumber" flags="c" as="document-node()">
                    <varRef line="144" name="quireNumber" slot="3"/>
                   </withParam>
                  </callT>
                 </sequence>
                </elem>
               </sequence>
              </let>
             </sequence>
            </elem>
           </sequence>
          </resultDoc>
         </let>
        </let>
       </forEachGroup>
      </let>
     </let>
    </let>
   </forEach>
  </template>
 </co>
 <co id="9" binds="">
  <globalVariable name="Q{}leafLength" type="xs:integer" line="22" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.integer.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <int val="150"/>
  </globalVariable>
 </co>
 <co id="10" binds="">
  <globalVariable name="Q{}rotationAngle" type="xs:integer" line="25" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.integer.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <int val="180"/>
  </globalVariable>
 </co>
 <co id="11" binds="">
  <globalVariable name="Q{}Ox" type="xs:integer" line="15" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.integer.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <int val="20"/>
  </globalVariable>
 </co>
 <co id="6" binds="12 12 12 12 13 13 13 13 7 7">
  <template name="Q{}leafPath" flags="os" line="374" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" slots="23">
   <sequence role="body" vn="20" baseUri="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" defaultElementNS="http://schoenberginstitute.org/schema/collation" ns="=http://www.w3.org/2000/svg xsl=http://www.w3.org/1999/XSL/Transform svg=http://www.w3.org/2000/svg xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree xlink=http://www.w3.org/1999/xlink" line="375">
    <param name="Cx" slot="0">
     <int role="select" val="40"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <param line="376" name="Cy" slot="1">
     <varRef role="select" name="Cx" slot="0"/>
     <supplied role="conversion" slot="1"/>
    </param>
    <param line="377" name="manuscript" slot="2">
     <str role="select" val=""/>
     <supplied role="conversion" slot="2"/>
    </param>
    <param line="378" name="countRegularBifolia" slot="3">
     <int role="select" val="4"/>
     <supplied role="conversion" slot="3"/>
    </param>
    <param line="379" name="countRegularBifolia2" slot="4">
     <int role="select" val="4"/>
     <supplied role="conversion" slot="4"/>
    </param>
    <param line="380" name="countSubquireLeaves" slot="5">
     <str role="select" val=""/>
     <supplied role="conversion" slot="5"/>
    </param>
    <param line="381" name="followingComponents" slot="6" as="xs:float">
     <atomic role="select" val="3" type="xs:float"/>
     <check role="conversion" card="1" diag="8|0|XTTE0590|followingComponents">
      <convert from="xs:anyAtomicType" to="xs:float" flags="p">
       <cvUntyped to="xs:float">
        <data>
         <supplied slot="6"/>
        </data>
       </cvUntyped>
      </convert>
     </check>
    </param>
    <param line="382" name="followingRegularComponents" slot="7" as="xs:integer">
     <int role="select" val="1"/>
     <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|followingRegularComponents">
      <check card="1" diag="8|0|XTTE0590|followingRegularComponents">
       <cvUntyped to="xs:integer">
        <data>
         <supplied slot="7"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="383" name="centralLeftLeafPos" slot="8" as="xs:integer">
     <int role="select" val="1"/>
     <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|centralLeftLeafPos">
      <check card="1" diag="8|0|XTTE0590|centralLeftLeafPos">
       <cvUntyped to="xs:integer">
        <data>
         <supplied slot="8"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="384" name="left1_Right2" slot="9">
     <str role="select" val=""/>
     <supplied role="conversion" slot="9"/>
    </param>
    <let line="386" var="absoluteY" as="xs:float" slot="10" eval="7">
     <arith op="+" calc="f+f">
      <int val="6"/>
      <arith op="*" calc="f*f">
       <int val="6"/>
       <varRef name="followingComponents" slot="6"/>
      </arith>
     </arith>
     <let line="389" var="parametricY" as="document-node()" slot="11" eval="7">
      <doc line="391" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
       <choose>
        <vc op="eq" onEmpty="0" comp="CAVC">
         <cast as="xs:integer" emptiable="1">
          <atomSing card="?" diag="2|0||cast as">
           <varRef name="left1_Right2" slot="9"/>
          </atomSing>
         </cast>
         <int val="1"/>
        </vc>
        <valueOf line="392" flags="l">
         <convert from="xs:float" to="xs:string">
          <minus>
           <varRef name="absoluteY" slot="10"/>
          </minus>
         </convert>
        </valueOf>
        <true/>
        <valueOf line="395" flags="l">
         <convert from="xs:float" to="xs:string">
          <varRef name="absoluteY" slot="10"/>
         </convert>
        </valueOf>
       </choose>
      </doc>
      <let line="400" var="parametricLeafLength" as="xs:untypedAtomic" slot="12" eval="7">
       <cast line="402" as="xs:untypedAtomic" emptiable="0">
        <choose>
         <gc op="=" card="1:1" comp="CCC">
          <data>
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="attribute" nodeTest="attribute(Q{}stub)" jsTest="return item.name=='stub'"/>
           </slash>
          </data>
          <str val="yes"/>
         </gc>
         <atomic val="12.5" type="xs:untypedAtomic"/>
         <true/>
         <atomic val="150" type="xs:untypedAtomic"/>
        </choose>
       </cast>
       <elem line="413" name="g" nsuri="http://www.w3.org/2000/svg" flags="d">
        <sequence>
         <choose>
          <or op="or">
           <gc op="!=" card="1:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
            <data>
             <slash simple="1">
              <first>
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
               </slash>
              </first>
              <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
             </slash>
            </data>
            <int val="1"/>
           </gc>
           <fn name="exists">
            <subscript>
             <slash simple="1">
              <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
               <dot flags="a"/>
              </treat>
              <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
             </slash>
             <int val="2"/>
            </subscript>
           </fn>
          </or>
          <callT line="414" name="certainty" bSlot="0">
           <withParam name="certainty" flags="c" as="attribute(Q{}certainty)?">
            <check line="415" card="1" diag="8|0||certainty">
             <cvUntyped to="xs:integer">
              <data>
               <slash simple="1">
                <first>
                 <slash simple="1">
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                   <dot flags="a"/>
                  </treat>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                 </slash>
                </first>
                <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
               </slash>
              </data>
             </cvUntyped>
            </check>
           </withParam>
          </callT>
          <fn line="418" name="exists">
           <subscript>
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
            </slash>
            <int val="2"/>
           </subscript>
          </fn>
          <callT line="419" name="certainty" bSlot="1">
           <withParam name="certainty" flags="c" as="item()?">
            <choose line="426">
             <fn name="exists">
              <slash simple="1">
               <subscript>
                <slash simple="1">
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                  <dot flags="a"/>
                 </treat>
                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                </slash>
                <int val="2"/>
               </subscript>
               <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
              </slash>
             </fn>
             <check card="1" diag="8|0||certainty">
              <cvUntyped to="xs:integer">
               <data>
                <slash simple="1">
                 <subscript>
                  <slash simple="1">
                   <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                    <dot flags="a"/>
                   </treat>
                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                  </slash>
                  <int val="2"/>
                 </subscript>
                 <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
                </slash>
               </data>
              </cvUntyped>
             </check>
             <true/>
             <int val="3"/>
            </choose>
           </withParam>
          </callT>
         </choose>
         <elem line="435" name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
          <choose>
           <or op="or">
            <gc op="!=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
             <data>
              <slash>
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
               </slash>
               <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
              </slash>
             </data>
             <int val="1"/>
            </gc>
            <and op="and">
             <fn name="not">
              <gcEE op="=" card="N:1" comp="CCC">
               <data>
                <slash>
                 <slash simple="1">
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                   <dot flags="a"/>
                  </treat>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                 </slash>
                 <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                </slash>
               </data>
               <str val="yes"/>
              </gcEE>
             </fn>
             <fn name="not">
              <fn name="contains">
               <cvUntyped to="xs:string">
                <data>
                 <slash simple="1">
                  <first>
                   <slash simple="1">
                    <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                     <dot flags="a"/>
                    </treat>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                   </slash>
                  </first>
                  <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                 </slash>
                </data>
               </cvUntyped>
               <str val="."/>
              </fn>
             </fn>
            </and>
           </or>
           <sequence line="438">
            <choose>
             <or op="or">
              <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
               <data>
                <slash>
                 <slash simple="1">
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                   <dot flags="a"/>
                  </treat>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                 </slash>
                 <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
                </slash>
               </data>
               <int val="2"/>
              </gcEE>
              <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
               <data>
                <slash>
                 <slash simple="1">
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                   <dot flags="a"/>
                  </treat>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                 </slash>
                 <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
                </slash>
               </data>
               <int val="3"/>
              </gcEE>
             </or>
             <callT line="439" name="certainty" bSlot="2">
              <withParam name="certainty" flags="c" as="attribute(Q{}certainty)*">
               <check line="440" card="1" diag="8|0||certainty">
                <cvUntyped to="xs:integer">
                 <data>
                  <slash>
                   <slash simple="1">
                    <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                     <dot flags="a"/>
                    </treat>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                   </slash>
                   <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
                  </slash>
                 </data>
                </cvUntyped>
               </check>
              </withParam>
             </callT>
             <gc line="443" op="!=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
              <data>
               <slash>
                <slash simple="1">
                 <first>
                  <slash simple="1">
                   <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                    <dot flags="a"/>
                   </treat>
                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                  </slash>
                 </first>
                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}conjoin)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='conjoin';"/>
                </slash>
                <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
               </slash>
              </data>
              <int val="1"/>
             </gc>
             <callT line="444" name="certainty" bSlot="3">
              <withParam name="certainty" flags="c" as="attribute(Q{}certainty)*">
               <check line="446" card="1" diag="8|0||certainty">
                <cvUntyped to="xs:integer">
                 <data>
                  <slash>
                   <slash simple="1">
                    <first>
                     <slash simple="1">
                      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                       <dot flags="a"/>
                      </treat>
                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                     </slash>
                    </first>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}conjoin)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='conjoin';"/>
                   </slash>
                   <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
                  </slash>
                 </data>
                </cvUntyped>
               </check>
              </withParam>
             </callT>
            </choose>
            <elem line="453" name="desc" nsuri="http://www.w3.org/2000/svg" flags="dl">
             <sequence>
              <valueOf flags="l">
               <str val="Folio #"/>
              </valueOf>
              <valueOf flags="l">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <slash simple="1">
                  <first>
                   <slash simple="1">
                    <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                     <dot flags="a"/>
                    </treat>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                   </slash>
                  </first>
                  <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                 </slash>
                </data>
               </convert>
              </valueOf>
              <valueOf flags="l">
               <str val=": arc"/>
              </valueOf>
             </sequence>
            </elem>
            <let line="457" var="arcPath" as="document-node()" slot="13" eval="7">
             <doc line="461" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
              <elem name="path" nsuri="http://www.w3.org/2000/svg" flags="dl">
               <att name="d" flags="l">
                <fn name="string-join">
                 <convert from="xs:untypedAtomic" to="xs:string">
                  <data>
                   <mergeAdj>
                    <sequence>
                     <valueOf flags="S">
                      <str val="M"/>
                     </valueOf>
                     <valueOf>
                      <convert from="xs:numeric" to="xs:string">
                       <arith op="+" calc="a+a">
                        <cvUntyped to="xs:double">
                         <atomSing card="?" diag="1|0||+">
                          <varRef name="Cx" slot="0"/>
                         </atomSing>
                        </cvUntyped>
                        <cvUntyped to="xs:double">
                         <arith op="-" calc="a-a">
                          <cvUntyped to="xs:double">
                           <arith op="*" calc="a*a">
                            <int val="6"/>
                            <cvUntyped to="xs:double">
                             <atomSing card="?" diag="1|1||*">
                              <varRef name="countRegularBifolia" slot="3"/>
                             </atomSing>
                            </cvUntyped>
                           </arith>
                          </cvUntyped>
                          <int val="2"/>
                         </arith>
                        </cvUntyped>
                       </arith>
                      </convert>
                     </valueOf>
                     <valueOf flags="S">
                      <str val=","/>
                     </valueOf>
                     <valueOf line="463">
                      <convert from="xs:numeric" to="xs:string">
                       <arith op="+" calc="a+a">
                        <cvUntyped to="xs:double">
                         <atomSing card="?" diag="1|0||+">
                          <varRef name="Cy" slot="1"/>
                         </atomSing>
                        </cvUntyped>
                        <cvUntyped to="xs:double">
                         <data>
                          <varRef name="parametricY" slot="11"/>
                         </data>
                        </cvUntyped>
                       </arith>
                      </convert>
                     </valueOf>
                     <valueOf>
                      <str val=" Q"/>
                     </valueOf>
                     <valueOf line="466">
                      <convert from="xs:numeric" to="xs:string">
                       <arith op="-" calc="a-a">
                        <cvUntyped to="xs:double">
                         <arith op="-" calc="a-a">
                          <cvUntyped to="xs:double">
                           <arith op="+" calc="a+a">
                            <cvUntyped to="xs:double">
                             <atomSing card="?" diag="1|0||+">
                              <varRef name="Cx" slot="0"/>
                             </atomSing>
                            </cvUntyped>
                            <cvUntyped to="xs:double">
                             <arith op="*" calc="a*a">
                              <int val="6"/>
                              <cvUntyped to="xs:double">
                               <atomSing card="?" diag="1|1||*">
                                <varRef name="countRegularBifolia" slot="3"/>
                               </atomSing>
                              </cvUntyped>
                             </arith>
                            </cvUntyped>
                           </arith>
                          </cvUntyped>
                          <int val="2"/>
                         </arith>
                        </cvUntyped>
                        <arith op="+" calc="i+i">
                         <int val="5"/>
                         <arith op="*" calc="i*i">
                          <varRef name="followingRegularComponents" slot="7"/>
                          <int val="6"/>
                         </arith>
                        </arith>
                       </arith>
                      </convert>
                     </valueOf>
                     <valueOf flags="S">
                      <str val=","/>
                     </valueOf>
                     <valueOf line="468">
                      <convert from="xs:numeric" to="xs:string">
                       <arith op="+" calc="a+a">
                        <cvUntyped to="xs:double">
                         <atomSing card="?" diag="1|0||+">
                          <varRef name="Cy" slot="1"/>
                         </atomSing>
                        </cvUntyped>
                        <cvUntyped to="xs:double">
                         <data>
                          <varRef name="parametricY" slot="11"/>
                         </data>
                        </cvUntyped>
                       </arith>
                      </convert>
                     </valueOf>
                     <valueOf>
                      <str val=" "/>
                     </valueOf>
                     <valueOf line="471">
                      <convert from="xs:numeric" to="xs:string">
                       <arith op="-" calc="a-a">
                        <cvUntyped to="xs:double">
                         <arith op="-" calc="a-a">
                          <cvUntyped to="xs:double">
                           <arith op="+" calc="a+a">
                            <cvUntyped to="xs:double">
                             <atomSing card="?" diag="1|0||+">
                              <varRef name="Cx" slot="0"/>
                             </atomSing>
                            </cvUntyped>
                            <cvUntyped to="xs:double">
                             <arith op="*" calc="a*a">
                              <int val="6"/>
                              <cvUntyped to="xs:double">
                               <atomSing card="?" diag="1|1||*">
                                <varRef name="countRegularBifolia" slot="3"/>
                               </atomSing>
                              </cvUntyped>
                             </arith>
                            </cvUntyped>
                           </arith>
                          </cvUntyped>
                          <int val="2"/>
                         </arith>
                        </cvUntyped>
                        <arith op="+" calc="i+i">
                         <int val="5"/>
                         <arith op="*" calc="i*i">
                          <varRef name="followingRegularComponents" slot="7"/>
                          <int val="6"/>
                         </arith>
                        </arith>
                       </arith>
                      </convert>
                     </valueOf>
                     <valueOf flags="S">
                      <str val=","/>
                     </valueOf>
                     <valueOf line="473">
                      <fn name="string-join">
                       <convert from="xs:anyAtomicType" to="xs:string">
                        <data>
                         <mergeAdj>
                          <varRef name="Cy" slot="1"/>
                         </mergeAdj>
                        </data>
                       </convert>
                       <str val=" "/>
                      </fn>
                     </valueOf>
                    </sequence>
                   </mergeAdj>
                  </data>
                 </convert>
                 <str val=""/>
                </fn>
               </att>
              </elem>
             </doc>
             <sequence line="479">
              <elem name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
               <sequence>
                <callT name="CSSclass" bSlot="4">
                 <withParam name="folioMode" flags="c" as="attribute(Q{}val)*">
                  <slash line="480">
                   <slash simple="1">
                    <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                     <dot flags="a"/>
                    </treat>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}mode)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='mode';"/>
                   </slash>
                   <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                  </slash>
                 </withParam>
                </callT>
                <copyOf line="482" flags="vsc">
                 <varRef name="arcPath" slot="13"/>
                </copyOf>
               </sequence>
              </elem>
              <choose line="485">
               <gcEE op="=" card="N:1" comp="CCC">
                <data>
                 <slash>
                  <slash simple="1">
                   <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                    <dot flags="a"/>
                   </treat>
                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}mode)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='mode';"/>
                  </slash>
                  <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                 </slash>
                </data>
                <str val="added"/>
               </gcEE>
               <elem line="487" name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
                <sequence>
                 <callT name="CSSclass" bSlot="5">
                  <withParam name="folioMode" flags="c" as="xs:string">
                   <str val="added2"/>
                  </withParam>
                 </callT>
                 <copyOf line="490" flags="vsc">
                  <varRef name="arcPath" slot="13"/>
                 </copyOf>
                </sequence>
               </elem>
              </choose>
             </sequence>
            </let>
           </sequence>
          </choose>
         </elem>
         <elem line="500" name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
          <let var="leafPosition" as="xs:untypedAtomic" slot="14" eval="7">
           <cast line="501" as="xs:untypedAtomic" emptiable="0">
            <fn name="string">
             <convert from="xs:untypedAtomic" to="xs:string">
              <data>
               <slash simple="1">
                <slash>
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                  <dot flags="a"/>
                 </treat>
                 <first>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                 </first>
                </slash>
                <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
               </slash>
              </data>
             </convert>
            </fn>
           </cast>
           <let line="503" var="precPos" as="xs:untypedAtomic" slot="15" eval="7">
            <cast line="504" as="xs:untypedAtomic" emptiable="0">
             <fn name="string">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <slash simple="1">
                 <slash>
                  <first>
                   <slash simple="1">
                    <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|11|XPTY0020|">
                     <dot flags="a"/>
                    </treat>
                    <axis name="preceding-sibling" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                   </slash>
                  </first>
                  <first>
                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                  </first>
                 </slash>
                 <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                </slash>
               </data>
              </convert>
             </fn>
            </cast>
            <sequence line="507">
             <choose>
              <vc op="eq" onEmpty="0" comp="CCC">
               <varRef name="precPos" slot="15"/>
               <varRef name="leafPosition" slot="14"/>
              </vc>
              <att line="511" name="transform" flags="l">
               <str val="translate(18.5,0)"/>
              </att>
             </choose>
             <choose line="517">
              <fn name="not">
               <fn name="contains">
                <cvUntyped to="xs:string">
                 <data>
                  <slash simple="1">
                   <first>
                    <slash simple="1">
                     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                      <dot flags="a"/>
                     </treat>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                    </slash>
                   </first>
                   <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                  </slash>
                 </data>
                </cvUntyped>
                <str val="."/>
               </fn>
              </fn>
              <sequence line="521">
               <elem name="desc" nsuri="http://www.w3.org/2000/svg" flags="dl">
                <sequence>
                 <valueOf flags="l">
                  <str val="Folio #"/>
                 </valueOf>
                 <valueOf flags="l">
                  <convert from="xs:untypedAtomic" to="xs:string">
                   <data>
                    <slash simple="1">
                     <first>
                      <slash simple="1">
                       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                        <dot flags="a"/>
                       </treat>
                       <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                      </slash>
                     </first>
                     <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                    </slash>
                   </data>
                  </convert>
                 </valueOf>
                 <valueOf flags="l">
                  <str val=": line"/>
                 </valueOf>
                </sequence>
               </elem>
               <let line="525" var="lineLength" as="document-node()" slot="16" eval="7">
                <doc line="527" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
                 <choose>
                  <vc op="eq" onEmpty="0" comp="CCC">
                   <varRef name="precPos" slot="15"/>
                   <varRef name="leafPosition" slot="14"/>
                  </vc>
                  <valueOf line="530" flags="l">
                   <convert from="xs:double" to="xs:string">
                    <arith op="-" calc="d-d">
                     <cvUntyped to="xs:double">
                      <varRef name="parametricLeafLength" slot="12"/>
                     </cvUntyped>
                     <dec val="18.5"/>
                    </arith>
                   </convert>
                  </valueOf>
                  <true/>
                  <valueOf line="533" flags="l">
                   <convert from="xs:untypedAtomic" to="xs:string">
                    <varRef name="parametricLeafLength" slot="12"/>
                   </convert>
                  </valueOf>
                 </choose>
                </doc>
                <let line="538" var="linePath" as="document-node()" slot="17" eval="7">
                 <doc line="543" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
                  <elem name="path" nsuri="http://www.w3.org/2000/svg" flags="dl">
                   <att name="d" flags="l">
                    <fn name="string-join">
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <data>
                       <mergeAdj>
                        <sequence>
                         <valueOf flags="S">
                          <str val="M"/>
                         </valueOf>
                         <valueOf>
                          <convert from="xs:numeric" to="xs:string">
                           <arith op="+" calc="a+a">
                            <cvUntyped to="xs:double">
                             <arith op="+" calc="a+a">
                              <cvUntyped to="xs:double">
                               <atomSing card="?" diag="1|0||+">
                                <varRef name="Cx" slot="0"/>
                               </atomSing>
                              </cvUntyped>
                              <cvUntyped to="xs:double">
                               <arith op="-" calc="a-a">
                                <cvUntyped to="xs:double">
                                 <arith op="*" calc="a*a">
                                  <int val="6"/>
                                  <cvUntyped to="xs:double">
                                   <atomSing card="?" diag="1|1||*">
                                    <varRef name="countRegularBifolia" slot="3"/>
                                   </atomSing>
                                  </cvUntyped>
                                 </arith>
                                </cvUntyped>
                                <int val="2"/>
                               </arith>
                              </cvUntyped>
                             </arith>
                            </cvUntyped>
                            <cvUntyped to="xs:double">
                             <data>
                              <varRef name="lineLength" slot="16"/>
                             </data>
                            </cvUntyped>
                           </arith>
                          </convert>
                         </valueOf>
                         <valueOf flags="S">
                          <str val=","/>
                         </valueOf>
                         <valueOf line="545">
                          <convert from="xs:numeric" to="xs:string">
                           <arith op="+" calc="a+a">
                            <cvUntyped to="xs:double">
                             <atomSing card="?" diag="1|0||+">
                              <varRef name="Cy" slot="1"/>
                             </atomSing>
                            </cvUntyped>
                            <cvUntyped to="xs:double">
                             <data>
                              <varRef name="parametricY" slot="11"/>
                             </data>
                            </cvUntyped>
                           </arith>
                          </convert>
                         </valueOf>
                         <valueOf>
                          <str val=" L"/>
                         </valueOf>
                         <valueOf line="547">
                          <convert from="xs:numeric" to="xs:string">
                           <arith op="+" calc="a+a">
                            <cvUntyped to="xs:double">
                             <atomSing card="?" diag="1|0||+">
                              <varRef name="Cx" slot="0"/>
                             </atomSing>
                            </cvUntyped>
                            <cvUntyped to="xs:double">
                             <arith op="-" calc="a-a">
                              <cvUntyped to="xs:double">
                               <arith op="*" calc="a*a">
                                <int val="6"/>
                                <cvUntyped to="xs:double">
                                 <atomSing card="?" diag="1|1||*">
                                  <varRef name="countRegularBifolia" slot="3"/>
                                 </atomSing>
                                </cvUntyped>
                               </arith>
                              </cvUntyped>
                              <int val="2"/>
                             </arith>
                            </cvUntyped>
                           </arith>
                          </convert>
                         </valueOf>
                         <valueOf flags="S">
                          <str val=","/>
                         </valueOf>
                         <valueOf line="549">
                          <convert from="xs:numeric" to="xs:string">
                           <arith op="+" calc="a+a">
                            <cvUntyped to="xs:double">
                             <atomSing card="?" diag="1|0||+">
                              <varRef name="Cy" slot="1"/>
                             </atomSing>
                            </cvUntyped>
                            <cvUntyped to="xs:double">
                             <data>
                              <varRef name="parametricY" slot="11"/>
                             </data>
                            </cvUntyped>
                           </arith>
                          </convert>
                         </valueOf>
                        </sequence>
                       </mergeAdj>
                      </data>
                     </convert>
                     <str val=""/>
                    </fn>
                   </att>
                  </elem>
                 </doc>
                 <sequence line="555">
                  <elem name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
                   <sequence>
                    <callT name="CSSclass" bSlot="6">
                     <withParam name="folioMode" flags="c" as="attribute(Q{}val)*">
                      <slash line="556">
                       <slash simple="1">
                        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                         <dot flags="a"/>
                        </treat>
                        <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}mode)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='mode';"/>
                       </slash>
                       <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                      </slash>
                     </withParam>
                    </callT>
                    <copyOf line="558" flags="vsc">
                     <varRef name="linePath" slot="17"/>
                    </copyOf>
                   </sequence>
                  </elem>
                  <choose line="561">
                   <gcEE op="=" card="N:1" comp="CCC">
                    <data>
                     <slash>
                      <slash simple="1">
                       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                        <dot flags="a"/>
                       </treat>
                       <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}mode)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='mode';"/>
                      </slash>
                      <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                     </slash>
                    </data>
                    <str val="added"/>
                   </gcEE>
                   <elem line="563" name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
                    <sequence>
                     <callT name="CSSclass" bSlot="7">
                      <withParam name="folioMode" flags="c" as="xs:string">
                       <str val="added2"/>
                      </withParam>
                     </callT>
                     <copyOf line="566" flags="vsc">
                      <varRef name="linePath" slot="17"/>
                     </copyOf>
                    </sequence>
                   </elem>
                  </choose>
                  <choose line="572">
                   <fn name="exists">
                    <slash simple="1">
                     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                      <dot flags="a"/>
                     </treat>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}attachment-method)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='attachment-method';"/>
                    </slash>
                   </fn>
                   <forEach line="573">
                    <slash simple="1">
                     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                      <dot flags="a"/>
                     </treat>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}attachment-method)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='attachment-method';"/>
                    </slash>
                    <choose line="577">
                     <fn name="exists">
                      <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name=='target'"/>
                     </fn>
                     <let line="582" var="ownQuireN" as="xs:untypedAtomic" slot="18" eval="7">
                      <cast line="589" as="xs:untypedAtomic" emptiable="0">
                       <fn name="string-join">
                        <convert from="xs:anyAtomicType" to="xs:string">
                         <choose>
                          <fn name="contains">
                           <check card="?" diag="0|0||contains">
                            <cvUntyped to="xs:string">
                             <data>
                              <slash>
                               <slash>
                                <axis name="parent" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                <first>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                </first>
                               </slash>
                               <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                              </slash>
                             </data>
                            </cvUntyped>
                           </check>
                           <str val="."/>
                          </fn>
                          <fn name="substring-before">
                           <check card="?" diag="0|0||substring-before">
                            <cvUntyped to="xs:string">
                             <data>
                              <slash>
                               <slash>
                                <axis name="parent" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                <first>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                </first>
                               </slash>
                               <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                              </slash>
                             </data>
                            </cvUntyped>
                           </check>
                           <str val="."/>
                          </fn>
                          <true/>
                          <data>
                           <slash>
                            <slash>
                             <axis name="parent" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                             <first>
                              <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                             </first>
                            </slash>
                            <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                           </slash>
                          </data>
                         </choose>
                        </convert>
                        <str val=" "/>
                       </fn>
                      </cast>
                      <let line="591" var="attachmentTargetID" as="xs:untypedAtomic" slot="19" eval="7">
                       <cast line="593" as="xs:untypedAtomic" emptiable="0">
                        <fn name="substring-after">
                         <cvUntyped to="xs:string">
                          <data>
                           <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name=='target'"/>
                          </data>
                         </cvUntyped>
                         <str val="#"/>
                        </fn>
                       </cast>
                       <let line="602" var="attachmentTargetQuire" as="xs:untypedAtomic" slot="20" eval="7">
                        <cast line="609" as="xs:untypedAtomic" emptiable="0">
                         <fn name="string-join">
                          <convert from="xs:anyAtomicType" to="xs:string">
                           <choose>
                            <fn name="contains">
                             <check card="?" diag="0|0||contains">
                              <cvUntyped to="xs:string">
                               <data>
                                <slash>
                                 <docOrder intra="0">
                                  <slash>
                                   <docOrder intra="0">
                                    <filter flags="b">
                                     <slash>
                                      <conditionalSort>
                                       <fn name="exists">
                                        <tail start="2">
                                         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                          <varRef name="manuscript" slot="2"/>
                                         </treat>
                                        </tail>
                                       </fn>
                                       <docOrder intra="0">
                                        <slash>
                                         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                          <varRef name="manuscript" slot="2"/>
                                         </treat>
                                         <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
                                        </slash>
                                       </docOrder>
                                      </conditionalSort>
                                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                     </slash>
                                     <gc op="=" card="1:1" comp="CCC">
                                      <data>
                                       <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
                                      </data>
                                      <varRef name="attachmentTargetID" slot="19"/>
                                     </gc>
                                    </filter>
                                   </docOrder>
                                   <first>
                                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                   </first>
                                  </slash>
                                 </docOrder>
                                 <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                                </slash>
                               </data>
                              </cvUntyped>
                             </check>
                             <str val="."/>
                            </fn>
                            <fn name="substring-before">
                             <check card="?" diag="0|0||substring-before">
                              <cvUntyped to="xs:string">
                               <data>
                                <slash>
                                 <docOrder intra="0">
                                  <slash>
                                   <docOrder intra="0">
                                    <filter flags="b">
                                     <slash>
                                      <conditionalSort>
                                       <fn name="exists">
                                        <tail start="2">
                                         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                          <varRef name="manuscript" slot="2"/>
                                         </treat>
                                        </tail>
                                       </fn>
                                       <docOrder intra="0">
                                        <slash>
                                         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                          <varRef name="manuscript" slot="2"/>
                                         </treat>
                                         <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
                                        </slash>
                                       </docOrder>
                                      </conditionalSort>
                                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                     </slash>
                                     <gc op="=" card="1:1" comp="CCC">
                                      <data>
                                       <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
                                      </data>
                                      <varRef name="attachmentTargetID" slot="19"/>
                                     </gc>
                                    </filter>
                                   </docOrder>
                                   <first>
                                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                   </first>
                                  </slash>
                                 </docOrder>
                                 <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                                </slash>
                               </data>
                              </cvUntyped>
                             </check>
                             <str val="."/>
                            </fn>
                            <true/>
                            <data>
                             <slash>
                              <docOrder intra="0">
                               <slash>
                                <docOrder intra="0">
                                 <filter flags="b">
                                  <slash>
                                   <conditionalSort>
                                    <fn name="exists">
                                     <tail start="2">
                                      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                       <varRef name="manuscript" slot="2"/>
                                      </treat>
                                     </tail>
                                    </fn>
                                    <docOrder intra="0">
                                     <slash>
                                      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                       <varRef name="manuscript" slot="2"/>
                                      </treat>
                                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
                                     </slash>
                                    </docOrder>
                                   </conditionalSort>
                                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                  </slash>
                                  <gc op="=" card="1:1" comp="CCC">
                                   <data>
                                    <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
                                   </data>
                                   <varRef name="attachmentTargetID" slot="19"/>
                                  </gc>
                                 </filter>
                                </docOrder>
                                <first>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                </first>
                               </slash>
                              </docOrder>
                              <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                             </slash>
                            </data>
                           </choose>
                          </convert>
                          <str val=" "/>
                         </fn>
                        </cast>
                        <let line="613" var="attachmentDeviation" as="document-node()" slot="21" eval="7">
                         <doc line="614" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
                          <let var="attachmentDeviationValue" as="xs:untypedAtomic" slot="22" eval="8">
                           <convert line="617" from="xs:double" to="xs:untypedAtomic">
                            <arith op="-" calc="d-d">
                             <cvUntyped to="xs:double">
                              <cast line="579" as="xs:untypedAtomic" emptiable="0">
                               <fn name="string-join">
                                <convert from="xs:untypedAtomic" to="xs:string">
                                 <data>
                                  <slash>
                                   <slash>
                                    <axis name="parent" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                    <first>
                                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                    </first>
                                   </slash>
                                   <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                                  </slash>
                                 </data>
                                </convert>
                                <str val=" "/>
                               </fn>
                              </cast>
                             </cvUntyped>
                             <cvUntyped to="xs:double">
                              <cast line="599" as="xs:untypedAtomic" emptiable="0">
                               <fn name="string-join">
                                <convert from="xs:untypedAtomic" to="xs:string">
                                 <data>
                                  <slash>
                                   <docOrder intra="0">
                                    <slash>
                                     <docOrder intra="0">
                                      <filter flags="b">
                                       <slash>
                                        <conditionalSort>
                                         <fn name="exists">
                                          <tail start="2">
                                           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                            <varRef name="manuscript" slot="2"/>
                                           </treat>
                                          </tail>
                                         </fn>
                                         <docOrder intra="0">
                                          <slash>
                                           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                            <varRef name="manuscript" slot="2"/>
                                           </treat>
                                           <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
                                          </slash>
                                         </docOrder>
                                        </conditionalSort>
                                        <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                       </slash>
                                       <gc op="=" card="1:1" comp="CCC">
                                        <data>
                                         <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
                                        </data>
                                        <varRef name="attachmentTargetID" slot="19"/>
                                       </gc>
                                      </filter>
                                     </docOrder>
                                     <first>
                                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                     </first>
                                    </slash>
                                   </docOrder>
                                   <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                                  </slash>
                                 </data>
                                </convert>
                                <str val=" "/>
                               </fn>
                              </cast>
                             </cvUntyped>
                            </arith>
                           </convert>
                           <choose line="622">
                            <vc op="eq" onEmpty="0" comp="CCC">
                             <cast as="xs:string" emptiable="0">
                              <varRef name="ownQuireN" slot="18"/>
                             </cast>
                             <cast as="xs:string" emptiable="0">
                              <varRef name="attachmentTargetQuire" slot="20"/>
                             </cast>
                            </vc>
                            <valueOf line="623" flags="l">
                             <convert from="xs:untypedAtomic" to="xs:string">
                              <varRef name="attachmentDeviationValue" slot="22"/>
                             </convert>
                            </valueOf>
                            <vc line="626" op="ne" onEmpty="0" comp="CCC">
                             <cast as="xs:string" emptiable="0">
                              <varRef name="ownQuireN" slot="18"/>
                             </cast>
                             <cast as="xs:string" emptiable="0">
                              <varRef name="attachmentTargetQuire" slot="20"/>
                             </cast>
                            </vc>
                            <valueOf line="628" flags="l">
                             <convert from="xs:double" to="xs:string">
                              <minus>
                               <cvUntyped to="xs:double">
                                <varRef name="attachmentDeviationValue" slot="22"/>
                               </cvUntyped>
                              </minus>
                             </convert>
                            </valueOf>
                           </choose>
                          </let>
                         </doc>
                         <callT line="633" name="attachment-method" bSlot="8">
                          <withParam name="Cx_A" flags="c" as="item()*">
                           <varRef line="634" name="Cx" slot="0"/>
                          </withParam>
                          <withParam name="Cy_A" flags="c" as="xs:numeric?">
                           <arith line="640" op="-" calc="a-a">
                            <cvUntyped to="xs:double">
                             <arith op="+" calc="a+a">
                              <cvUntyped to="xs:double">
                               <atomSing card="?" diag="1|0||+">
                                <varRef name="Cy" slot="1"/>
                               </atomSing>
                              </cvUntyped>
                              <cvUntyped to="xs:double">
                               <data>
                                <varRef name="parametricY" slot="11"/>
                               </data>
                              </cvUntyped>
                             </arith>
                            </cvUntyped>
                            <choose>
                             <compareToInt op="gt" val="0">
                              <cast as="xs:integer" emptiable="0">
                               <data>
                                <varRef name="attachmentDeviation" slot="21"/>
                               </data>
                              </cast>
                             </compareToInt>
                             <int val="6"/>
                             <true/>
                             <int val="0"/>
                            </choose>
                           </arith>
                          </withParam>
                          <withParam name="countRegularBifolia" flags="c" as="item()*">
                           <varRef line="642" name="countRegularBifolia" slot="3"/>
                          </withParam>
                          <withParam name="countRegularBifolia2" flags="c" as="item()*">
                           <varRef line="644" name="countRegularBifolia2" slot="4"/>
                          </withParam>
                          <withParam name="lineLength" flags="c" as="document-node()">
                           <varRef line="646" name="lineLength" slot="16"/>
                          </withParam>
                          <withParam name="parametricY" flags="c" as="document-node()">
                           <varRef line="648" name="parametricY" slot="11"/>
                          </withParam>
                          <withParam name="attachmentDeviation" flags="c" as="document-node()">
                           <varRef line="650" name="attachmentDeviation" slot="21"/>
                          </withParam>
                         </callT>
                        </let>
                       </let>
                      </let>
                     </let>
                     <true/>
                     <callT line="655" name="attachment-method" bSlot="9">
                      <withParam name="Cx_A" flags="c" as="item()*">
                       <varRef line="656" name="Cx" slot="0"/>
                      </withParam>
                      <withParam name="Cy_A" flags="c" as="document-node()">
                       <doc line="660" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
                        <choose>
                         <or op="or">
                          <vc op="eq" onEmpty="0" comp="CAVC">
                           <cast as="xs:integer" emptiable="0">
                            <varRef name="leafPosition" slot="14"/>
                           </cast>
                           <varRef name="centralLeftLeafPos" slot="8"/>
                          </vc>
                          <vc op="eq" onEmpty="0" comp="CAVC">
                           <cast as="xs:integer" emptiable="0">
                            <varRef name="leafPosition" slot="14"/>
                           </cast>
                           <arith op="+" calc="i+i">
                            <varRef name="centralLeftLeafPos" slot="8"/>
                            <int val="1"/>
                           </arith>
                          </vc>
                         </or>
                         <valueOf line="667" flags="l">
                          <convert from="xs:numeric" to="xs:string">
                           <arith op="+" calc="a+a">
                            <cvUntyped to="xs:double">
                             <arith op="+" calc="a+a">
                              <cvUntyped to="xs:double">
                               <arith op="+" calc="a+a">
                                <cvUntyped to="xs:double">
                                 <atomSing card="?" diag="1|0||+">
                                  <varRef name="Cy" slot="1"/>
                                 </atomSing>
                                </cvUntyped>
                                <cvUntyped to="xs:double">
                                 <data>
                                  <varRef name="parametricY" slot="11"/>
                                 </data>
                                </cvUntyped>
                               </arith>
                              </cvUntyped>
                              <arith op="*" calc="i*i">
                               <choose>
                                <vc op="eq" onEmpty="0" comp="CAVC">
                                 <cast as="xs:integer" emptiable="1">
                                  <atomSing card="?" diag="2|0||cast as">
                                   <varRef name="left1_Right2" slot="9"/>
                                  </atomSing>
                                 </cast>
                                 <int val="1"/>
                                </vc>
                                <int val="1"/>
                                <true/>
                                <int val="-1"/>
                               </choose>
                               <int val="6"/>
                              </arith>
                             </arith>
                            </cvUntyped>
                            <arith op="*" calc="f*f">
                             <int val="6"/>
                             <varRef name="followingComponents" slot="6"/>
                            </arith>
                           </arith>
                          </convert>
                         </valueOf>
                         <vc line="670" op="lt" onEmpty="0" comp="CAVC">
                          <cast as="xs:integer" emptiable="0">
                           <varRef name="leafPosition" slot="14"/>
                          </cast>
                          <varRef name="centralLeftLeafPos" slot="8"/>
                         </vc>
                         <valueOf line="677" flags="l">
                          <convert from="xs:numeric" to="xs:string">
                           <arith op="+" calc="a+a">
                            <cvUntyped to="xs:double">
                             <arith op="+" calc="a+a">
                              <cvUntyped to="xs:double">
                               <atomSing card="?" diag="1|0||+">
                                <varRef name="Cy" slot="1"/>
                               </atomSing>
                              </cvUntyped>
                              <cvUntyped to="xs:double">
                               <data>
                                <varRef name="parametricY" slot="11"/>
                               </data>
                              </cvUntyped>
                             </arith>
                            </cvUntyped>
                            <arith op="*" calc="i*i">
                             <choose>
                              <vc op="eq" onEmpty="0" comp="CAVC">
                               <cast as="xs:integer" emptiable="1">
                                <atomSing card="?" diag="2|0||cast as">
                                 <varRef name="left1_Right2" slot="9"/>
                                </atomSing>
                               </cast>
                               <int val="1"/>
                              </vc>
                              <int val="1"/>
                              <true/>
                              <int val="-1"/>
                             </choose>
                             <int val="3"/>
                            </arith>
                           </arith>
                          </convert>
                         </valueOf>
                         <vc line="680" op="gt" onEmpty="0" comp="CAVC">
                          <cast as="xs:integer" emptiable="0">
                           <varRef name="leafPosition" slot="14"/>
                          </cast>
                          <arith op="+" calc="i+i">
                           <varRef name="centralLeftLeafPos" slot="8"/>
                           <int val="1"/>
                          </arith>
                         </vc>
                         <valueOf line="687" flags="l">
                          <convert from="xs:numeric" to="xs:string">
                           <arith op="+" calc="a+a">
                            <cvUntyped to="xs:double">
                             <arith op="-" calc="a-a">
                              <cvUntyped to="xs:double">
                               <arith op="+" calc="a+a">
                                <cvUntyped to="xs:double">
                                 <arith op="+" calc="a+a">
                                  <cvUntyped to="xs:double">
                                   <atomSing card="?" diag="1|0||+">
                                    <varRef name="Cy" slot="1"/>
                                   </atomSing>
                                  </cvUntyped>
                                  <cvUntyped to="xs:double">
                                   <data>
                                    <varRef name="parametricY" slot="11"/>
                                   </data>
                                  </cvUntyped>
                                 </arith>
                                </cvUntyped>
                                <arith op="*" calc="i*i">
                                 <choose>
                                  <vc op="eq" onEmpty="0" comp="CAVC">
                                   <cast as="xs:integer" emptiable="1">
                                    <atomSing card="?" diag="2|0||cast as">
                                     <varRef name="left1_Right2" slot="9"/>
                                    </atomSing>
                                   </cast>
                                   <int val="1"/>
                                  </vc>
                                  <int val="1"/>
                                  <true/>
                                  <int val="-1"/>
                                 </choose>
                                 <int val="6"/>
                                </arith>
                               </arith>
                              </cvUntyped>
                              <int val="3"/>
                             </arith>
                            </cvUntyped>
                            <arith op="*" calc="f*f">
                             <int val="6"/>
                             <varRef name="followingComponents" slot="6"/>
                            </arith>
                           </arith>
                          </convert>
                         </valueOf>
                        </choose>
                       </doc>
                      </withParam>
                      <withParam name="countRegularBifolia" flags="c" as="item()*">
                       <varRef line="692" name="countRegularBifolia" slot="3"/>
                      </withParam>
                      <withParam name="countRegularBifolia2" flags="c" as="item()*">
                       <varRef line="694" name="countRegularBifolia2" slot="4"/>
                      </withParam>
                      <withParam name="lineLength" flags="c" as="document-node()">
                       <varRef line="696" name="lineLength" slot="16"/>
                      </withParam>
                      <withParam name="parametricY" flags="c" as="document-node()">
                       <varRef line="698" name="parametricY" slot="11"/>
                      </withParam>
                     </callT>
                    </choose>
                   </forEach>
                  </choose>
                 </sequence>
                </let>
               </let>
              </sequence>
             </choose>
            </sequence>
           </let>
          </let>
         </elem>
        </sequence>
       </elem>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="13" binds="">
  <template name="Q{}CSSclass" flags="os" line="1380" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" slots="1">
   <sequence role="body" vn="20" baseUri="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" defaultElementNS="http://schoenberginstitute.org/schema/collation" ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="1381">
    <param name="folioMode" slot="0">
     <str role="select" val="original"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1383">
     <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
      <data>
       <varRef name="folioMode" slot="0"/>
      </data>
      <str val="original"/>
     </gcEE>
     <att name="class">
      <str val="leaf"/>
     </att>
     <gcEE line="1388" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
      <data>
       <varRef name="folioMode" slot="0"/>
      </data>
      <str val="missing"/>
     </gcEE>
     <att name="class">
      <str val="missingLeaf"/>
     </att>
     <gcEE line="1393" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
      <data>
       <varRef name="folioMode" slot="0"/>
      </data>
      <str val="replaced"/>
     </gcEE>
     <att name="class">
      <str val="replacedLeaf"/>
     </att>
     <gcEE line="1398" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
      <data>
       <varRef name="folioMode" slot="0"/>
      </data>
      <str val="added"/>
     </gcEE>
     <att name="class">
      <str val="addedLeaf"/>
     </att>
     <gcEE line="1403" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
      <data>
       <varRef name="folioMode" slot="0"/>
      </data>
      <str val="added2"/>
     </gcEE>
     <att name="class">
      <str val="addedLeaf2"/>
     </att>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="1" binds="">
  <globalVariable name="Q{}Oy" type="xs:integer" line="16" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.integer.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <int val="20"/>
  </globalVariable>
 </co>
 <co id="14" binds="4 1 5">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="12" flags="os" line="27" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11);"/>
    <forEach role="action" vn="20" baseUri="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" defaultElementNS="http://schoenberginstitute.org/schema/collation" ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="29">
     <slash>
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}viscoll)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='viscoll';"/>
      </slash>
      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
     </slash>
     <let line="31" var="shelfmark" as="xs:untypedAtomic" slot="6" eval="7">
      <cast line="32" as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <mergeAdj>
           <slash>
            <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}shelfmark)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='shelfmark';"/>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType==3;"/>
           </slash>
          </mergeAdj>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
      <let line="35" var="msID" as="xs:string" slot="7" eval="8">
       <fn name="concat">
        <str val="id-"/>
        <fn name="translate">
         <cvUntyped to="xs:string">
          <varRef name="shelfmark" slot="6"/>
         </cvUntyped>
         <str val=" "/>
         <str val=""/>
        </fn>
       </fn>
       <let line="37" var="manuscript" as="document-node()" slot="8" eval="7">
        <doc line="38" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
         <copyOf flags="vsc">
          <dot type="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)"/>
         </copyOf>
        </doc>
        <forEachGroup line="48" algorithm="by">
         <axis role="select" name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
         <choose role="key">
          <fn name="contains">
           <cvUntyped to="xs:string">
            <data>
             <slash simple="1">
              <first>
               <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
              </first>
              <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
             </slash>
            </data>
           </cvUntyped>
           <str val="."/>
          </fn>
          <fn name="substring-before">
           <cvUntyped to="xs:string">
            <data>
             <slash simple="1">
              <first>
               <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
              </first>
              <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
             </slash>
            </data>
           </cvUntyped>
           <str val="."/>
          </fn>
          <true/>
          <data>
           <slash simple="1">
            <first>
             <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
            </first>
            <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
           </slash>
          </data>
         </choose>
         <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
         <let role="content" line="49" var="quireNumber" as="document-node()" slot="9" eval="7">
          <doc line="50" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
           <valueOf flags="l">
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <currentGroupingKey/>
             </convert>
             <str val=" "/>
            </fn>
           </valueOf>
          </doc>
          <let line="52" var="positions" as="xs:untypedAtomic" slot="10" eval="8">
           <convert line="53" from="xs:integer" to="xs:untypedAtomic">
            <fn name="count">
             <currentGroup/>
            </fn>
           </convert>
           <resultDoc line="59" global="#&#xD;&#xA;#Mon Jun 04 15:52:17 CEST 2018&#xD;&#xA;indent=yes&#xD;&#xA;standalone=no&#xD;&#xA;doctype-system=http\://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD SVG 1.1//EN&#xD;&#xA;include-content-type=no&#xD;&#xA;method=xml&#xD;&#xA;" local="#&#xD;&#xA;#Mon Jun 04 15:52:17 CEST 2018&#xD;&#xA;indent=yes&#xD;&#xA;doctype-system=http\://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD SVG 1.1//EN&#xD;&#xA;method=xml&#xD;&#xA;">
            <fn role="href" name="concat">
             <varRef name="msID" slot="7"/>
             <str val="/"/>
             <varRef name="msID" slot="7"/>
             <str val="-"/>
             <data>
              <varRef name="quireNumber" slot="9"/>
             </data>
             <str val=".svg"/>
            </fn>
            <sequence role="content" line="60">
             <procInst>
              <str role="name" val="xml-stylesheet"/>
              <fn role="select" name="string-join">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <mergeAdj>
                  <sequence>
                   <valueOf>
                    <str val="href=&#34;collation.css&#34; "/>
                   </valueOf>
                   <valueOf flags="S">
                    <str val="type=&#34;text/css&#34;"/>
                   </valueOf>
                  </sequence>
                 </mergeAdj>
                </data>
               </convert>
               <str val=" "/>
              </fn>
             </procInst>
             <valueOf>
              <str val="&#xA;"/>
             </valueOf>
             <comment line="68">
              <fn name="string-join">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <mergeAdj>
                  <sequence>
                   <valueOf>
                    <str val="SVG file generated on: "/>
                   </valueOf>
                   <valueOf>
                    <fn name="format-dateTime">
                     <fn name="current-dateTime"/>
                     <str val="[D] [MNn] [Y] at [H]:[m]:[s]"/>
                    </fn>
                   </valueOf>
                   <valueOf>
                    <str val=" using "/>
                   </valueOf>
                   <valueOf line="70">
                    <str val="SAXON"/>
                   </valueOf>
                   <valueOf>
                    <str val=" version "/>
                   </valueOf>
                   <valueOf line="72">
                    <str val="JS 9.7.0.21"/>
                   </valueOf>
                  </sequence>
                 </mergeAdj>
                </data>
               </convert>
               <str val=" "/>
              </fn>
             </comment>
             <valueOf>
              <str val="&#xA;"/>
             </valueOf>
             <elem ns="=http://www.w3.org/2000/svg xsl=http://www.w3.org/1999/XSL/Transform svg=http://www.w3.org/2000/svg xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree xlink=http://www.w3.org/1999/xlink" line="81" name="svg" nsuri="http://www.w3.org/2000/svg" flags="d">
              <sequence>
               <att name="version" flags="l">
                <str val="1.1"/>
               </att>
               <att name="x" flags="l">
                <str val="0"/>
               </att>
               <att name="y" flags="l">
                <str val="0"/>
               </att>
               <att name="width" flags="l">
                <fn name="concat">
                 <arith op="+" calc="d+d">
                  <dec val="18.75"/>
                  <arith op="*" calc="d*d">
                   <int val="6"/>
                   <cvUntyped to="xs:double">
                    <varRef name="positions" slot="10"/>
                   </cvUntyped>
                  </arith>
                 </arith>
                 <str val="mm"/>
                </fn>
               </att>
               <att name="height" flags="l">
                <fn name="concat">
                 <arith op="+" calc="d+d">
                  <dec val="18.75"/>
                  <arith op="*" calc="d*d">
                   <int val="6"/>
                   <cvUntyped to="xs:double">
                    <varRef name="positions" slot="10"/>
                   </cvUntyped>
                  </arith>
                 </arith>
                 <str val="mm"/>
                </fn>
               </att>
               <att name="preserveAspectRatio" flags="l">
                <str val="xMidYMid meet"/>
               </att>
               <att name="style" flags="l">
                <str val="background: #FFFFFF;"/>
               </att>
               <att name="viewBox" flags="l">
                <fn name="concat">
                 <str val="0 0 "/>
                 <convert from="xs:double" to="xs:string">
                  <arith op="+" calc="d+d">
                   <arith op="+" calc="d+d">
                    <dec val="18.75"/>
                    <arith op="*" calc="d*d">
                     <int val="6"/>
                     <cvUntyped to="xs:double">
                      <varRef name="positions" slot="10"/>
                     </cvUntyped>
                    </arith>
                   </arith>
                   <int val="40"/>
                  </arith>
                 </convert>
                 <str val=" "/>
                 <convert from="xs:double" to="xs:string">
                  <arith op="+" calc="d+d">
                   <arith op="+" calc="d+d">
                    <dec val="18.75"/>
                    <arith op="*" calc="d*d">
                     <int val="6"/>
                     <cvUntyped to="xs:double">
                      <varRef name="positions" slot="10"/>
                     </cvUntyped>
                    </arith>
                   </arith>
                   <int val="40"/>
                  </arith>
                 </convert>
                </fn>
               </att>
               <let line="83" var="description" as="xs:untypedAtomic" slot="11" eval="7">
                <cast as="xs:untypedAtomic" emptiable="0">
                 <fn name="string-join">
                  <sequence>
                   <atomic val=" Collation diagram of quire " type="xs:untypedAtomic"/>
                   <data line="84">
                    <varRef name="quireNumber" slot="9"/>
                   </data>
                   <atomic val=" for " type="xs:untypedAtomic"/>
                   <varRef line="84" name="shelfmark" slot="6"/>
                   <atomic val="&#xA;                            composed of " type="xs:untypedAtomic"/>
                   <convert line="85" from="xs:integer" to="xs:untypedAtomic">
                    <fn name="count">
                     <currentGroup/>
                    </fn>
                   </convert>
                   <cast line="92" as="xs:untypedAtomic" emptiable="0">
                    <choose>
                     <fn name="exists">
                      <tail start="2">
                       <currentGroup/>
                      </tail>
                     </fn>
                     <str val=" leaves"/>
                     <true/>
                     <str val=" leaf"/>
                    </choose>
                   </cast>
                  </sequence>
                  <str val=""/>
                 </fn>
                </cast>
                <sequence line="95">
                 <elem name="title" nsuri="http://www.w3.org/2000/svg" flags="dl">
                  <valueOf flags="l">
                   <fn name="normalize-space">
                    <cvUntyped to="xs:string">
                     <varRef name="description" slot="11"/>
                    </cvUntyped>
                   </fn>
                  </valueOf>
                 </elem>
                 <callT line="98" name="defs" bSlot="0"/>
                 <elem line="100" name="desc" nsuri="http://www.w3.org/2000/svg" flags="dl">
                  <valueOf flags="l">
                   <fn name="normalize-space">
                    <cvUntyped to="xs:string">
                     <varRef name="description" slot="11"/>
                    </cvUntyped>
                   </fn>
                  </valueOf>
                 </elem>
                 <elem line="108" name="svg" nsuri="http://www.w3.org/2000/svg" flags="dl">
                  <sequence>
                   <att name="x" flags="l">
                    <str val="25"/>
                   </att>
                   <att name="y" flags="l">
                    <convert from="xs:integer" to="xs:string">
                     <arith op="+" calc="i+i">
                      <gVarRef name="Q{}Oy" bSlot="1"/>
                      <int val="5"/>
                     </arith>
                    </convert>
                   </att>
                   <callT line="131" name="bifoliaDiagram" bSlot="2">
                    <withParam name="odd1_Even2" flags="c" as="xs:integer">
                     <choose line="138">
                      <compareToInt op="eq" val="0">
                       <arith op="mod" calc="d%d">
                        <cvUntyped to="xs:double">
                         <varRef name="positions" slot="10"/>
                        </cvUntyped>
                        <int val="2"/>
                       </arith>
                      </compareToInt>
                      <int val="2"/>
                      <true/>
                      <int val="1"/>
                     </choose>
                    </withParam>
                    <withParam name="positions" flags="c" as="xs:integer">
                     <cvUntyped line="139" to="xs:integer">
                      <varRef name="positions" slot="10"/>
                     </cvUntyped>
                    </withParam>
                    <withParam name="subquires" flags="c" as="document-node()">
                     <doc line="115" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
                      <forEachGroup algorithm="by">
                       <docOrder role="select" intra="1">
                        <filter flags="b">
                         <slash>
                          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                           <currentGroup/>
                          </treat>
                          <dot type="node()"/>
                         </slash>
                         <fn name="exists">
                          <filter flags="b">
                           <slash simple="1">
                            <first>
                             <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                            </first>
                            <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                           </slash>
                           <fn name="contains">
                            <cvUntyped to="xs:string">
                             <data>
                              <dot type="attribute(Q{}n)"/>
                             </data>
                            </cvUntyped>
                            <str val="."/>
                           </fn>
                          </filter>
                         </fn>
                        </filter>
                       </docOrder>
                       <data role="key">
                        <slash simple="1">
                         <first>
                          <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                         </first>
                         <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                        </slash>
                       </data>
                       <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
                       <elem xmlns:tp="temporaryTree" role="content" line="119" name="tp:subquire" flags="l">
                        <sequence>
                         <att name="positions_SQ" flags="l">
                          <convert from="xs:integer" to="xs:string">
                           <fn name="count">
                            <currentGroup/>
                           </fn>
                          </convert>
                         </att>
                         <att line="124" name="subquireLevel" flags="l">
                          <convert from="xs:integer" to="xs:string">
                           <arith op="-" calc="i-i">
                            <fn name="string-length">
                             <cvUntyped to="xs:string">
                              <data>
                               <slash simple="1">
                                <first>
                                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                </first>
                                <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                               </slash>
                              </data>
                             </cvUntyped>
                            </fn>
                            <fn name="string-length">
                             <fn name="translate">
                              <cvUntyped to="xs:string">
                               <data>
                                <slash simple="1">
                                 <first>
                                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                 </first>
                                 <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                                </slash>
                               </data>
                              </cvUntyped>
                              <str val="."/>
                              <str val=""/>
                             </fn>
                            </fn>
                           </arith>
                          </convert>
                         </att>
                         <copyOf flags="vsc">
                          <currentGroup/>
                         </copyOf>
                        </sequence>
                       </elem>
                      </forEachGroup>
                     </doc>
                    </withParam>
                    <withParam name="manuscript" flags="c" as="document-node()">
                     <doc line="142" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
                      <copyOf flags="vsc">
                       <varRef name="manuscript" slot="8"/>
                      </copyOf>
                     </doc>
                    </withParam>
                    <withParam name="quireNumber" flags="c" as="document-node()">
                     <varRef line="144" name="quireNumber" slot="9"/>
                    </withParam>
                   </callT>
                  </sequence>
                 </elem>
                </sequence>
               </let>
              </sequence>
             </elem>
            </sequence>
           </resultDoc>
          </let>
         </let>
        </forEachGroup>
       </let>
      </let>
     </let>
    </forEach>
   </templateRule>
  </mode>
 </co>
 <co id="12" binds="">
  <template name="Q{}certainty" flags="os" line="1499" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" slots="1">
   <sequence role="body" vn="20" baseUri="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" defaultElementNS="http://schoenberginstitute.org/schema/collation" ns="xsl=http://www.w3.org/1999/XSL/Transform xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree svg=http://www.w3.org/2000/svg xlink=http://www.w3.org/1999/xlink" line="1500">
    <param name="certainty" slot="0" as="xs:integer">
     <int role="select" val="1"/>
     <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|certainty">
      <check card="1" diag="8|0|XTTE0590|certainty">
       <cvUntyped to="xs:integer">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <att line="1504" name="filter">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="concat">
        <str val="url(#f"/>
        <varRef name="certainty" slot="0"/>
        <str val=")"/>
       </fn>
      </cast>
     </convert>
    </att>
   </sequence>
  </template>
 </co>
 <co id="2" binds="12 12 12 12 13 13 13 13 7 7">
  <template name="Q{}leafPath_SQ" flags="os" line="1015" module="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" slots="29">
   <sequence role="body" vn="20" baseUri="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" defaultElementNS="http://schoenberginstitute.org/schema/collation" ns="=http://www.w3.org/2000/svg xsl=http://www.w3.org/1999/XSL/Transform svg=http://www.w3.org/2000/svg xs=http://www.w3.org/2001/XMLSchema sic=http://schoenberginstitute.org/schema/collation tp=temporaryTree xlink=http://www.w3.org/1999/xlink" line="1016">
    <param name="manuscript" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <param line="1017" name="subquireN" slot="1">
     <str role="select" val=""/>
     <supplied role="conversion" slot="1"/>
    </param>
    <param line="1018" name="Cx_SQ" slot="2">
     <int role="select" val="40"/>
     <supplied role="conversion" slot="2"/>
    </param>
    <param line="1019" name="Cy_SQ" slot="3">
     <varRef role="select" name="Cx_SQ" slot="2"/>
     <supplied role="conversion" slot="3"/>
    </param>
    <param line="1020" name="countRegularBifolia" slot="4" flags="i" as="xs:integer">
     <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|countRegularBifolia">
      <check card="1" diag="8|0|XTTE0590|countRegularBifolia">
       <cvUntyped to="xs:integer">
        <data>
         <supplied slot="4"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="1021" name="countRegularBifolia2" slot="5">
     <str role="select" val=""/>
     <supplied role="conversion" slot="5"/>
    </param>
    <param line="1022" name="countSubquireLeaves" slot="6">
     <str role="select" val=""/>
     <supplied role="conversion" slot="6"/>
    </param>
    <param line="1023" name="followingComponents" slot="7" as="xs:float">
     <atomic role="select" val="1" type="xs:float"/>
     <check role="conversion" card="1" diag="8|0|XTTE0590|followingComponents">
      <convert from="xs:anyAtomicType" to="xs:float" flags="p">
       <cvUntyped to="xs:float">
        <data>
         <supplied slot="7"/>
        </data>
       </cvUntyped>
      </convert>
     </check>
    </param>
    <param line="1024" name="followingComponents_SQ" slot="8">
     <str role="select" val=""/>
     <supplied role="conversion" slot="8"/>
    </param>
    <param line="1025" name="followingRegularComponents_SQ" slot="9" as="xs:integer">
     <int role="select" val="1"/>
     <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|followingRegularComponents_SQ">
      <check card="1" diag="8|0|XTTE0590|followingRegularComponents_SQ">
       <cvUntyped to="xs:integer">
        <data>
         <supplied slot="9"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="1026" name="left1_Right2_SQ" slot="10">
     <str role="select" val=""/>
     <supplied role="conversion" slot="10"/>
    </param>
    <param line="1027" name="left1_Right2" slot="11">
     <str role="select" val=""/>
     <supplied role="conversion" slot="11"/>
    </param>
    <param line="1028" name="positions_SQ" slot="12">
     <str role="select" val=""/>
     <supplied role="conversion" slot="12"/>
    </param>
    <param line="1029" name="previousPositions_SQ" slot="13">
     <str role="select" val=""/>
     <supplied role="conversion" slot="13"/>
    </param>
    <param line="1030" name="centralLeftLeafPos_SQ" slot="14">
     <str role="select" val=""/>
     <supplied role="conversion" slot="14"/>
    </param>
    <let line="1031" var="absoluteY" as="xs:float" slot="15" eval="7">
     <arith op="+" calc="f+f">
      <int val="6"/>
      <arith op="*" calc="f*f">
       <int val="6"/>
       <varRef name="followingComponents" slot="7"/>
      </arith>
     </arith>
     <let line="1033" var="absoluteY_SQ" as="xs:numeric?" slot="16" eval="7">
      <arith op="+" calc="a+a">
       <int val="3"/>
       <cvUntyped to="xs:double">
        <arith op="*" calc="a*a">
         <int val="6"/>
         <cvUntyped to="xs:double">
          <atomSing card="?" diag="1|1||*">
           <varRef name="followingComponents_SQ" slot="8"/>
          </atomSing>
         </cvUntyped>
        </arith>
       </cvUntyped>
      </arith>
      <let line="1035" var="parametricY" as="document-node()" slot="17" eval="7">
       <doc line="1037" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
        <choose>
         <vc op="eq" onEmpty="0" comp="CAVC">
          <cast as="xs:integer" emptiable="1">
           <atomSing card="?" diag="2|0||cast as">
            <varRef name="left1_Right2" slot="11"/>
           </atomSing>
          </cast>
          <int val="1"/>
         </vc>
         <valueOf line="1038" flags="l">
          <convert from="xs:float" to="xs:string">
           <minus>
            <varRef name="absoluteY" slot="15"/>
           </minus>
          </convert>
         </valueOf>
         <true/>
         <valueOf line="1041" flags="l">
          <convert from="xs:float" to="xs:string">
           <varRef name="absoluteY" slot="15"/>
          </convert>
         </valueOf>
        </choose>
       </doc>
       <let line="1057" var="parametricLeafLength" as="xs:untypedAtomic" slot="18" eval="7">
        <cast line="1059" as="xs:untypedAtomic" emptiable="0">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <data>
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="attribute" nodeTest="attribute(Q{}stub)" jsTest="return item.name=='stub'"/>
            </slash>
           </data>
           <str val="yes"/>
          </gc>
          <atomic val="12.5" type="xs:untypedAtomic"/>
          <true/>
          <cast line="1065" as="xs:untypedAtomic" emptiable="0">
           <fn name="string">
            <convert from="xs:numeric" to="xs:string">
             <arith op="-" calc="a-a">
              <int val="150"/>
              <cvUntyped to="xs:double">
               <arith op="+" calc="a+a">
                <cvUntyped to="xs:double">
                 <arith op="*" calc="a*a">
                  <cvUntyped to="xs:double">
                   <arith op="div" calc="a/a">
                    <cvUntyped to="xs:double">
                     <atomSing card="?" diag="1|0||div">
                      <varRef name="positions_SQ" slot="12"/>
                     </atomSing>
                    </cvUntyped>
                    <int val="2"/>
                   </arith>
                  </cvUntyped>
                  <int val="6"/>
                 </arith>
                </cvUntyped>
                <cvUntyped to="xs:double">
                 <arith op="*" calc="a*a">
                  <int val="6"/>
                  <cvUntyped to="xs:double">
                   <arith op="div" calc="a/a">
                    <cvUntyped to="xs:double">
                     <atomSing card="?" diag="1|0||div">
                      <varRef name="previousPositions_SQ" slot="13"/>
                     </atomSing>
                    </cvUntyped>
                    <int val="2"/>
                   </arith>
                  </cvUntyped>
                 </arith>
                </cvUntyped>
               </arith>
              </cvUntyped>
             </arith>
            </convert>
           </fn>
          </cast>
         </choose>
        </cast>
        <elem line="1072" name="g" nsuri="http://www.w3.org/2000/svg" flags="d">
         <sequence>
          <choose>
           <or op="or">
            <gc op="!=" card="1:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
             <data>
              <slash simple="1">
               <first>
                <slash simple="1">
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                  <dot flags="a"/>
                 </treat>
                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                </slash>
               </first>
               <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
              </slash>
             </data>
             <int val="1"/>
            </gc>
            <fn name="exists">
             <subscript>
              <slash simple="1">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                <dot flags="a"/>
               </treat>
               <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
              </slash>
              <int val="2"/>
             </subscript>
            </fn>
           </or>
           <callT line="1073" name="certainty" bSlot="0">
            <withParam name="certainty" flags="c" as="attribute(Q{}certainty)?">
             <check line="1074" card="1" diag="8|0||certainty">
              <cvUntyped to="xs:integer">
               <data>
                <slash simple="1">
                 <first>
                  <slash simple="1">
                   <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                    <dot flags="a"/>
                   </treat>
                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                  </slash>
                 </first>
                 <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
                </slash>
               </data>
              </cvUntyped>
             </check>
            </withParam>
           </callT>
           <fn line="1077" name="exists">
            <subscript>
             <slash simple="1">
              <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
               <dot flags="a"/>
              </treat>
              <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
             </slash>
             <int val="2"/>
            </subscript>
           </fn>
           <callT line="1078" name="certainty" bSlot="1">
            <withParam name="certainty" flags="c" as="item()?">
             <choose line="1085">
              <fn name="exists">
               <slash simple="1">
                <subscript>
                 <slash simple="1">
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                   <dot flags="a"/>
                  </treat>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                 </slash>
                 <int val="2"/>
                </subscript>
                <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
               </slash>
              </fn>
              <check card="1" diag="8|0||certainty">
               <cvUntyped to="xs:integer">
                <data>
                 <slash simple="1">
                  <subscript>
                   <slash simple="1">
                    <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                     <dot flags="a"/>
                    </treat>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                   </slash>
                   <int val="2"/>
                  </subscript>
                  <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
                 </slash>
                </data>
               </cvUntyped>
              </check>
              <true/>
              <int val="3"/>
             </choose>
            </withParam>
           </callT>
          </choose>
          <choose line="1091">
           <fn name="contains">
            <cvUntyped to="xs:string">
             <data>
              <slash simple="1">
               <first>
                <slash simple="1">
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                  <dot flags="a"/>
                 </treat>
                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                </slash>
               </first>
               <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
              </slash>
             </data>
            </cvUntyped>
            <str val="."/>
           </fn>
           <att line="1095" name="transform" flags="l">
            <convert from="xs:untypedAtomic" to="xs:string">
             <cast as="xs:untypedAtomic" emptiable="0">
              <fn name="concat">
               <str val="translate("/>
               <arith op="+" calc="a+a">
                <cvUntyped to="xs:double">
                 <arith op="*" calc="a*a">
                  <cvUntyped to="xs:double">
                   <arith op="div" calc="a/a">
                    <cvUntyped to="xs:double">
                     <atomSing card="?" diag="1|0||div">
                      <varRef name="positions_SQ" slot="12"/>
                     </atomSing>
                    </cvUntyped>
                    <int val="2"/>
                   </arith>
                  </cvUntyped>
                  <int val="6"/>
                 </arith>
                </cvUntyped>
                <cvUntyped to="xs:double">
                 <arith op="*" calc="a*a">
                  <int val="6"/>
                  <cvUntyped to="xs:double">
                   <arith op="div" calc="a/a">
                    <cvUntyped to="xs:double">
                     <atomSing card="?" diag="1|0||div">
                      <varRef name="previousPositions_SQ" slot="13"/>
                     </atomSing>
                    </cvUntyped>
                    <int val="2"/>
                   </arith>
                  </cvUntyped>
                 </arith>
                </cvUntyped>
               </arith>
               <str val=","/>
               <str val="0)"/>
              </fn>
             </cast>
            </convert>
           </att>
          </choose>
          <elem line="1102" name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
           <choose>
            <or op="or">
             <gc op="!=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
              <data>
               <slash>
                <slash simple="1">
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                  <dot flags="a"/>
                 </treat>
                 <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                </slash>
                <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
               </slash>
              </data>
              <int val="1"/>
             </gc>
             <fn name="not">
              <gcEE op="=" card="N:1" comp="CCC">
               <data>
                <slash>
                 <slash simple="1">
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                   <dot flags="a"/>
                  </treat>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                 </slash>
                 <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                </slash>
               </data>
               <str val="yes"/>
              </gcEE>
             </fn>
            </or>
            <sequence line="1105">
             <choose>
              <gcEE op="=" card="N:1" comp="CCC">
               <data>
                <slash>
                 <slash simple="1">
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                   <dot flags="a"/>
                  </treat>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                 </slash>
                 <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
                </slash>
               </data>
               <str val="2 | 3"/>
              </gcEE>
              <callT line="1106" name="certainty" bSlot="2">
               <withParam name="certainty" flags="c" as="attribute(Q{}certainty)*">
                <check line="1108" card="1" diag="8|0||certainty">
                 <cvUntyped to="xs:integer">
                  <data>
                   <slash>
                    <slash simple="1">
                     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                      <dot flags="a"/>
                     </treat>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}single)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='single';"/>
                    </slash>
                    <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
                   </slash>
                  </data>
                 </cvUntyped>
                </check>
               </withParam>
              </callT>
              <gc line="1111" op="!=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
               <data>
                <slash>
                 <slash simple="1">
                  <first>
                   <slash simple="1">
                    <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                     <dot flags="a"/>
                    </treat>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                   </slash>
                  </first>
                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}conjoin)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='conjoin';"/>
                 </slash>
                 <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
                </slash>
               </data>
               <int val="1"/>
              </gc>
              <callT line="1112" name="certainty" bSlot="3">
               <withParam name="certainty" flags="c" as="attribute(Q{}certainty)*">
                <check line="1114" card="1" diag="8|0||certainty">
                 <cvUntyped to="xs:integer">
                  <data>
                   <slash>
                    <slash simple="1">
                     <first>
                      <slash simple="1">
                       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                        <dot flags="a"/>
                       </treat>
                       <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                      </slash>
                     </first>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}conjoin)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='conjoin';"/>
                    </slash>
                    <axis name="attribute" nodeTest="attribute(Q{}certainty)" jsTest="return item.name=='certainty'"/>
                   </slash>
                  </data>
                 </cvUntyped>
                </check>
               </withParam>
              </callT>
             </choose>
             <elem line="1120" name="desc" nsuri="http://www.w3.org/2000/svg" flags="dl">
              <sequence>
               <valueOf flags="l">
                <str val="Folio #"/>
               </valueOf>
               <valueOf flags="l">
                <convert from="xs:untypedAtomic" to="xs:string">
                 <data>
                  <slash simple="1">
                   <first>
                    <slash simple="1">
                     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                      <dot flags="a"/>
                     </treat>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                    </slash>
                   </first>
                   <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                  </slash>
                 </data>
                </convert>
               </valueOf>
               <valueOf flags="l">
                <str val=": arc"/>
               </valueOf>
              </sequence>
             </elem>
             <let line="1123" var="arcPath_SQ" as="document-node()" slot="19" eval="7">
              <doc line="1128" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
               <elem name="path" nsuri="http://www.w3.org/2000/svg" flags="dl">
                <att name="d" flags="l">
                 <fn name="string-join">
                  <convert from="xs:untypedAtomic" to="xs:string">
                   <data>
                    <mergeAdj>
                     <sequence>
                      <valueOf flags="S">
                       <str val="M"/>
                      </valueOf>
                      <valueOf>
                       <convert from="xs:numeric" to="xs:string">
                        <arith op="+" calc="a+a">
                         <cvUntyped to="xs:double">
                          <atomSing card="?" diag="1|0||+">
                           <varRef name="Cx_SQ" slot="2"/>
                          </atomSing>
                         </cvUntyped>
                         <arith op="-" calc="i-i">
                          <arith op="*" calc="i*i">
                           <int val="6"/>
                           <varRef name="countRegularBifolia" slot="4"/>
                          </arith>
                          <int val="2"/>
                         </arith>
                        </arith>
                       </convert>
                      </valueOf>
                      <valueOf flags="S">
                       <str val=","/>
                      </valueOf>
                      <valueOf line="1130">
                       <convert from="xs:numeric" to="xs:string">
                        <arith op="+" calc="a+a">
                         <cvUntyped to="xs:double">
                          <atomSing card="?" diag="1|0||+">
                           <varRef name="Cy_SQ" slot="3"/>
                          </atomSing>
                         </cvUntyped>
                         <cvUntyped to="xs:double">
                          <data>
                           <varRef name="parametricY" slot="17"/>
                          </data>
                         </cvUntyped>
                        </arith>
                       </convert>
                      </valueOf>
                      <valueOf>
                       <str val=" Q"/>
                      </valueOf>
                      <valueOf line="1133">
                       <convert from="xs:numeric" to="xs:string">
                        <arith op="-" calc="a-a">
                         <cvUntyped to="xs:double">
                          <arith op="-" calc="a-a">
                           <cvUntyped to="xs:double">
                            <arith op="+" calc="a+a">
                             <cvUntyped to="xs:double">
                              <atomSing card="?" diag="1|0||+">
                               <varRef name="Cx_SQ" slot="2"/>
                              </atomSing>
                             </cvUntyped>
                             <arith op="*" calc="i*i">
                              <int val="6"/>
                              <varRef name="countRegularBifolia" slot="4"/>
                             </arith>
                            </arith>
                           </cvUntyped>
                           <int val="2"/>
                          </arith>
                         </cvUntyped>
                         <arith op="+" calc="i+i">
                          <int val="5"/>
                          <arith op="*" calc="i*i">
                           <varRef name="followingRegularComponents_SQ" slot="9"/>
                           <int val="6"/>
                          </arith>
                         </arith>
                        </arith>
                       </convert>
                      </valueOf>
                      <valueOf flags="S">
                       <str val=","/>
                      </valueOf>
                      <valueOf line="1135">
                       <convert from="xs:numeric" to="xs:string">
                        <arith op="+" calc="a+a">
                         <cvUntyped to="xs:double">
                          <atomSing card="?" diag="1|0||+">
                           <varRef name="Cy_SQ" slot="3"/>
                          </atomSing>
                         </cvUntyped>
                         <cvUntyped to="xs:double">
                          <data>
                           <varRef name="parametricY" slot="17"/>
                          </data>
                         </cvUntyped>
                        </arith>
                       </convert>
                      </valueOf>
                      <valueOf>
                       <str val=" "/>
                      </valueOf>
                      <valueOf line="1138">
                       <convert from="xs:numeric" to="xs:string">
                        <arith op="-" calc="a-a">
                         <cvUntyped to="xs:double">
                          <arith op="-" calc="a-a">
                           <cvUntyped to="xs:double">
                            <arith op="+" calc="a+a">
                             <cvUntyped to="xs:double">
                              <atomSing card="?" diag="1|0||+">
                               <varRef name="Cx_SQ" slot="2"/>
                              </atomSing>
                             </cvUntyped>
                             <arith op="*" calc="i*i">
                              <int val="6"/>
                              <varRef name="countRegularBifolia" slot="4"/>
                             </arith>
                            </arith>
                           </cvUntyped>
                           <int val="2"/>
                          </arith>
                         </cvUntyped>
                         <arith op="+" calc="i+i">
                          <int val="5"/>
                          <arith op="*" calc="i*i">
                           <varRef name="followingRegularComponents_SQ" slot="9"/>
                           <int val="6"/>
                          </arith>
                         </arith>
                        </arith>
                       </convert>
                      </valueOf>
                      <valueOf flags="S">
                       <str val=","/>
                      </valueOf>
                      <valueOf line="1140">
                       <convert from="xs:numeric" to="xs:string">
                        <arith op="+" calc="a+a">
                         <cvUntyped to="xs:double">
                          <arith op="+" calc="a+a">
                           <cvUntyped to="xs:double">
                            <atomSing card="?" diag="1|0||+">
                             <varRef name="Cy_SQ" slot="3"/>
                            </atomSing>
                           </cvUntyped>
                           <cvUntyped to="xs:double">
                            <data>
                             <varRef name="parametricY" slot="17"/>
                            </data>
                           </cvUntyped>
                          </arith>
                         </cvUntyped>
                         <cvUntyped to="xs:double">
                          <cast line="1048" as="xs:untypedAtomic" emptiable="0">
                           <choose>
                            <vc op="eq" onEmpty="0" comp="CAVC">
                             <cast as="xs:integer" emptiable="1">
                              <atomSing card="?" diag="2|0||cast as">
                               <varRef name="left1_Right2_SQ" slot="10"/>
                              </atomSing>
                             </cast>
                             <int val="1"/>
                            </vc>
                            <cast line="1049" as="xs:untypedAtomic" emptiable="0">
                             <fn name="string">
                              <convert from="xs:numeric" to="xs:string">
                               <varRef name="absoluteY_SQ" slot="16"/>
                              </convert>
                             </fn>
                            </cast>
                            <true/>
                            <cast line="1052" as="xs:untypedAtomic" emptiable="0">
                             <fn name="string">
                              <convert from="xs:numeric" to="xs:string">
                               <minus>
                                <varRef name="absoluteY_SQ" slot="16"/>
                               </minus>
                              </convert>
                             </fn>
                            </cast>
                           </choose>
                          </cast>
                         </cvUntyped>
                        </arith>
                       </convert>
                      </valueOf>
                     </sequence>
                    </mergeAdj>
                   </data>
                  </convert>
                  <str val=""/>
                 </fn>
                </att>
               </elem>
              </doc>
              <sequence line="1146">
               <elem name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
                <sequence>
                 <callT name="CSSclass" bSlot="4">
                  <withParam name="folioMode" flags="c" as="attribute(Q{}val)*">
                   <slash line="1147">
                    <slash simple="1">
                     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                      <dot flags="a"/>
                     </treat>
                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}mode)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='mode';"/>
                    </slash>
                    <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                   </slash>
                  </withParam>
                 </callT>
                 <copyOf line="1149" flags="vsc">
                  <varRef name="arcPath_SQ" slot="19"/>
                 </copyOf>
                </sequence>
               </elem>
               <choose line="1152">
                <gcEE op="=" card="N:1" comp="CCC">
                 <data>
                  <slash>
                   <slash simple="1">
                    <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                     <dot flags="a"/>
                    </treat>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}mode)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='mode';"/>
                   </slash>
                   <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                  </slash>
                 </data>
                 <str val="added"/>
                </gcEE>
                <elem line="1154" name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
                 <sequence>
                  <callT name="CSSclass" bSlot="5">
                   <withParam name="folioMode" flags="c" as="xs:string">
                    <str val="added2"/>
                   </withParam>
                  </callT>
                  <copyOf line="1157" flags="vsc">
                   <varRef name="arcPath_SQ" slot="19"/>
                  </copyOf>
                 </sequence>
                </elem>
               </choose>
              </sequence>
             </let>
            </sequence>
           </choose>
          </elem>
          <elem line="1166" name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
           <let var="leafPosition" as="xs:untypedAtomic" slot="20" eval="7">
            <cast line="1167" as="xs:untypedAtomic" emptiable="0">
             <fn name="string">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <slash simple="1">
                 <slash>
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                   <dot flags="a"/>
                  </treat>
                  <first>
                   <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                  </first>
                 </slash>
                 <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                </slash>
               </data>
              </convert>
             </fn>
            </cast>
            <let line="1169" var="precPos" as="xs:untypedAtomic" slot="21" eval="7">
             <cast line="1170" as="xs:untypedAtomic" emptiable="0">
              <fn name="string">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <slash simple="1">
                  <slash>
                   <first>
                    <slash simple="1">
                     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|11|XPTY0020|">
                      <dot flags="a"/>
                     </treat>
                     <axis name="preceding-sibling" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                    </slash>
                   </first>
                   <first>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                   </first>
                  </slash>
                  <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                 </slash>
                </data>
               </convert>
              </fn>
             </cast>
             <sequence line="1173">
              <choose>
               <vc op="eq" onEmpty="0" comp="CCC">
                <varRef name="precPos" slot="21"/>
                <varRef name="leafPosition" slot="20"/>
               </vc>
               <att line="1177" name="transform" flags="l">
                <str val="translate(18.5,0)"/>
               </att>
              </choose>
              <choose line="1183">
               <vc op="eq" onEmpty="0" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                <data>
                 <slash simple="1">
                  <first>
                   <slash simple="1">
                    <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                     <dot flags="a"/>
                    </treat>
                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                   </slash>
                  </first>
                  <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                 </slash>
                </data>
                <atomSing card="?" diag="1|1||eq">
                 <varRef name="subquireN" slot="1"/>
                </atomSing>
               </vc>
               <sequence line="1187">
                <elem name="desc" nsuri="http://www.w3.org/2000/svg" flags="dl">
                 <sequence>
                  <valueOf flags="l">
                   <str val="Folio #"/>
                  </valueOf>
                  <valueOf flags="l">
                   <convert from="xs:untypedAtomic" to="xs:string">
                    <data>
                     <slash simple="1">
                      <first>
                       <slash simple="1">
                        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                         <dot flags="a"/>
                        </treat>
                        <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                       </slash>
                      </first>
                      <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                     </slash>
                    </data>
                   </convert>
                  </valueOf>
                  <valueOf flags="l">
                   <str val=": line"/>
                  </valueOf>
                 </sequence>
                </elem>
                <let line="1190" var="lineLength" as="document-node()" slot="22" eval="7">
                 <doc line="1192" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
                  <choose>
                   <vc op="eq" onEmpty="0" comp="CCC">
                    <varRef name="precPos" slot="21"/>
                    <varRef name="leafPosition" slot="20"/>
                   </vc>
                   <valueOf line="1195" flags="l">
                    <convert from="xs:double" to="xs:string">
                     <arith op="-" calc="d-d">
                      <cvUntyped to="xs:double">
                       <varRef name="parametricLeafLength" slot="18"/>
                      </cvUntyped>
                      <dec val="18.5"/>
                     </arith>
                    </convert>
                   </valueOf>
                   <true/>
                   <valueOf line="1198" flags="l">
                    <convert from="xs:untypedAtomic" to="xs:string">
                     <varRef name="parametricLeafLength" slot="18"/>
                    </convert>
                   </valueOf>
                  </choose>
                 </doc>
                 <let line="1202" var="linePath_SQ" as="document-node()" slot="23" eval="7">
                  <doc line="1207" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" validation="preserve">
                   <elem name="path" nsuri="http://www.w3.org/2000/svg" flags="dl">
                    <att name="d" flags="l">
                     <fn name="string-join">
                      <convert from="xs:untypedAtomic" to="xs:string">
                       <data>
                        <mergeAdj>
                         <sequence>
                          <valueOf flags="S">
                           <str val="M"/>
                          </valueOf>
                          <valueOf>
                           <convert from="xs:numeric" to="xs:string">
                            <arith op="+" calc="a+a">
                             <cvUntyped to="xs:double">
                              <arith op="+" calc="a+a">
                               <cvUntyped to="xs:double">
                                <atomSing card="?" diag="1|0||+">
                                 <varRef name="Cx_SQ" slot="2"/>
                                </atomSing>
                               </cvUntyped>
                               <arith op="-" calc="i-i">
                                <arith op="*" calc="i*i">
                                 <int val="6"/>
                                 <varRef name="countRegularBifolia" slot="4"/>
                                </arith>
                                <int val="2"/>
                               </arith>
                              </arith>
                             </cvUntyped>
                             <cvUntyped to="xs:double">
                              <data>
                               <varRef name="lineLength" slot="22"/>
                              </data>
                             </cvUntyped>
                            </arith>
                           </convert>
                          </valueOf>
                          <valueOf flags="S">
                           <str val=","/>
                          </valueOf>
                          <valueOf line="1209">
                           <convert from="xs:numeric" to="xs:string">
                            <arith op="+" calc="a+a">
                             <cvUntyped to="xs:double">
                              <atomSing card="?" diag="1|0||+">
                               <varRef name="Cy_SQ" slot="3"/>
                              </atomSing>
                             </cvUntyped>
                             <cvUntyped to="xs:double">
                              <data>
                               <varRef name="parametricY" slot="17"/>
                              </data>
                             </cvUntyped>
                            </arith>
                           </convert>
                          </valueOf>
                          <valueOf>
                           <str val=" L"/>
                          </valueOf>
                          <valueOf line="1212">
                           <convert from="xs:numeric" to="xs:string">
                            <arith op="+" calc="a+a">
                             <cvUntyped to="xs:double">
                              <atomSing card="?" diag="1|0||+">
                               <varRef name="Cx_SQ" slot="2"/>
                              </atomSing>
                             </cvUntyped>
                             <arith op="-" calc="i-i">
                              <arith op="*" calc="i*i">
                               <int val="6"/>
                               <varRef name="countRegularBifolia" slot="4"/>
                              </arith>
                              <int val="2"/>
                             </arith>
                            </arith>
                           </convert>
                          </valueOf>
                          <valueOf flags="S">
                           <str val=","/>
                          </valueOf>
                          <valueOf line="1214">
                           <convert from="xs:numeric" to="xs:string">
                            <arith op="+" calc="a+a">
                             <cvUntyped to="xs:double">
                              <atomSing card="?" diag="1|0||+">
                               <varRef name="Cy_SQ" slot="3"/>
                              </atomSing>
                             </cvUntyped>
                             <cvUntyped to="xs:double">
                              <data>
                               <varRef name="parametricY" slot="17"/>
                              </data>
                             </cvUntyped>
                            </arith>
                           </convert>
                          </valueOf>
                         </sequence>
                        </mergeAdj>
                       </data>
                      </convert>
                      <str val=""/>
                     </fn>
                    </att>
                   </elem>
                  </doc>
                  <sequence line="1220">
                   <elem name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
                    <sequence>
                     <callT name="CSSclass" bSlot="6">
                      <withParam name="folioMode" flags="c" as="attribute(Q{}val)*">
                       <slash line="1221">
                        <slash simple="1">
                         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                          <dot flags="a"/>
                         </treat>
                         <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}mode)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='mode';"/>
                        </slash>
                        <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                       </slash>
                      </withParam>
                     </callT>
                     <copyOf line="1223" flags="vsc">
                      <varRef name="linePath_SQ" slot="23"/>
                     </copyOf>
                    </sequence>
                   </elem>
                   <choose line="1226">
                    <gcEE op="=" card="N:1" comp="CCC">
                     <data>
                      <slash>
                       <slash simple="1">
                        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                         <dot flags="a"/>
                        </treat>
                        <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}mode)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='mode';"/>
                       </slash>
                       <axis name="attribute" nodeTest="attribute(Q{}val)" jsTest="return item.name=='val'"/>
                      </slash>
                     </data>
                     <str val="added"/>
                    </gcEE>
                    <elem line="1228" name="g" nsuri="http://www.w3.org/2000/svg" flags="dl">
                     <sequence>
                      <callT name="CSSclass" bSlot="7">
                       <withParam name="folioMode" flags="c" as="xs:string">
                        <str val="added2"/>
                       </withParam>
                      </callT>
                      <copyOf line="1231" flags="vsc">
                       <varRef name="linePath_SQ" slot="23"/>
                      </copyOf>
                     </sequence>
                    </elem>
                   </choose>
                   <choose line="1237">
                    <fn name="exists">
                     <slash simple="1">
                      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                       <dot flags="a"/>
                      </treat>
                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}attachment-method)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='attachment-method';"/>
                     </slash>
                    </fn>
                    <forEach line="1238">
                     <slash simple="1">
                      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                       <dot flags="a"/>
                      </treat>
                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}attachment-method)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='attachment-method';"/>
                     </slash>
                     <choose line="1241">
                      <fn name="exists">
                       <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name=='target'"/>
                      </fn>
                      <let line="1246" var="ownQuireN" as="xs:untypedAtomic" slot="24" eval="7">
                       <cast line="1253" as="xs:untypedAtomic" emptiable="0">
                        <fn name="string-join">
                         <convert from="xs:anyAtomicType" to="xs:string">
                          <choose>
                           <fn name="contains">
                            <check card="?" diag="0|0||contains">
                             <cvUntyped to="xs:string">
                              <data>
                               <slash>
                                <slash>
                                 <axis name="parent" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                 <first>
                                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                 </first>
                                </slash>
                                <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                               </slash>
                              </data>
                             </cvUntyped>
                            </check>
                            <str val="."/>
                           </fn>
                           <fn name="substring-before">
                            <check card="?" diag="0|0||substring-before">
                             <cvUntyped to="xs:string">
                              <data>
                               <slash>
                                <slash>
                                 <axis name="parent" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                 <first>
                                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                 </first>
                                </slash>
                                <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                               </slash>
                              </data>
                             </cvUntyped>
                            </check>
                            <str val="."/>
                           </fn>
                           <true/>
                           <data>
                            <slash>
                             <slash>
                              <axis name="parent" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                              <first>
                               <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                              </first>
                             </slash>
                             <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                            </slash>
                           </data>
                          </choose>
                         </convert>
                         <str val=" "/>
                        </fn>
                       </cast>
                       <let line="1255" var="attachmentTargetID" as="xs:untypedAtomic" slot="25" eval="7">
                        <cast line="1257" as="xs:untypedAtomic" emptiable="0">
                         <fn name="substring-after">
                          <cvUntyped to="xs:string">
                           <data>
                            <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name=='target'"/>
                           </data>
                          </cvUntyped>
                          <str val="#"/>
                         </fn>
                        </cast>
                        <let line="1264" var="attachmentTargetQuire" as="xs:untypedAtomic" slot="26" eval="7">
                         <cast line="1271" as="xs:untypedAtomic" emptiable="0">
                          <fn name="string-join">
                           <convert from="xs:anyAtomicType" to="xs:string">
                            <choose>
                             <fn name="contains">
                              <check card="?" diag="0|0||contains">
                               <cvUntyped to="xs:string">
                                <data>
                                 <slash>
                                  <docOrder intra="0">
                                   <slash>
                                    <docOrder intra="0">
                                     <filter flags="b">
                                      <slash>
                                       <conditionalSort>
                                        <fn name="exists">
                                         <tail start="2">
                                          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                           <varRef name="manuscript" slot="0"/>
                                          </treat>
                                         </tail>
                                        </fn>
                                        <docOrder intra="0">
                                         <slash>
                                          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                           <varRef name="manuscript" slot="0"/>
                                          </treat>
                                          <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
                                         </slash>
                                        </docOrder>
                                       </conditionalSort>
                                       <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                      </slash>
                                      <gc op="=" card="1:1" comp="CCC">
                                       <data>
                                        <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
                                       </data>
                                       <varRef name="attachmentTargetID" slot="25"/>
                                      </gc>
                                     </filter>
                                    </docOrder>
                                    <first>
                                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                    </first>
                                   </slash>
                                  </docOrder>
                                  <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                                 </slash>
                                </data>
                               </cvUntyped>
                              </check>
                              <str val="."/>
                             </fn>
                             <fn name="substring-before">
                              <check card="?" diag="0|0||substring-before">
                               <cvUntyped to="xs:string">
                                <data>
                                 <slash>
                                  <docOrder intra="0">
                                   <slash>
                                    <docOrder intra="0">
                                     <filter flags="b">
                                      <slash>
                                       <conditionalSort>
                                        <fn name="exists">
                                         <tail start="2">
                                          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                           <varRef name="manuscript" slot="0"/>
                                          </treat>
                                         </tail>
                                        </fn>
                                        <docOrder intra="0">
                                         <slash>
                                          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                           <varRef name="manuscript" slot="0"/>
                                          </treat>
                                          <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
                                         </slash>
                                        </docOrder>
                                       </conditionalSort>
                                       <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                      </slash>
                                      <gc op="=" card="1:1" comp="CCC">
                                       <data>
                                        <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
                                       </data>
                                       <varRef name="attachmentTargetID" slot="25"/>
                                      </gc>
                                     </filter>
                                    </docOrder>
                                    <first>
                                     <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                    </first>
                                   </slash>
                                  </docOrder>
                                  <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                                 </slash>
                                </data>
                               </cvUntyped>
                              </check>
                              <str val="."/>
                             </fn>
                             <true/>
                             <data>
                              <slash>
                               <docOrder intra="0">
                                <slash>
                                 <docOrder intra="0">
                                  <filter flags="b">
                                   <slash>
                                    <conditionalSort>
                                     <fn name="exists">
                                      <tail start="2">
                                       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                        <varRef name="manuscript" slot="0"/>
                                       </treat>
                                      </tail>
                                     </fn>
                                     <docOrder intra="0">
                                      <slash>
                                       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                        <varRef name="manuscript" slot="0"/>
                                       </treat>
                                       <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
                                      </slash>
                                     </docOrder>
                                    </conditionalSort>
                                    <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                   </slash>
                                   <gc op="=" card="1:1" comp="CCC">
                                    <data>
                                     <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
                                    </data>
                                    <varRef name="attachmentTargetID" slot="25"/>
                                   </gc>
                                  </filter>
                                 </docOrder>
                                 <first>
                                  <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                 </first>
                                </slash>
                               </docOrder>
                               <axis name="attribute" nodeTest="attribute(Q{}n)" jsTest="return item.name=='n'"/>
                              </slash>
                             </data>
                            </choose>
                           </convert>
                           <str val=" "/>
                          </fn>
                         </cast>
                         <let line="1273" var="attachmentDeviation" as="document-node()" slot="27" eval="7">
                          <doc line="1274" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
                           <let var="attachmentDeviationValue" as="xs:untypedAtomic" slot="28" eval="8">
                            <convert line="1277" from="xs:double" to="xs:untypedAtomic">
                             <arith op="-" calc="d-d">
                              <cvUntyped to="xs:double">
                               <cast line="1244" as="xs:untypedAtomic" emptiable="0">
                                <fn name="string-join">
                                 <convert from="xs:untypedAtomic" to="xs:string">
                                  <data>
                                   <slash>
                                    <slash>
                                     <axis name="parent" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                     <first>
                                      <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                     </first>
                                    </slash>
                                    <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                                   </slash>
                                  </data>
                                 </convert>
                                 <str val=" "/>
                                </fn>
                               </cast>
                              </cvUntyped>
                              <cvUntyped to="xs:double">
                               <cast line="1262" as="xs:untypedAtomic" emptiable="0">
                                <fn name="string-join">
                                 <convert from="xs:untypedAtomic" to="xs:string">
                                  <data>
                                   <slash>
                                    <docOrder intra="0">
                                     <slash>
                                      <docOrder intra="0">
                                       <filter flags="b">
                                        <slash>
                                         <conditionalSort>
                                          <fn name="exists">
                                           <tail start="2">
                                            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                             <varRef name="manuscript" slot="0"/>
                                            </treat>
                                           </tail>
                                          </fn>
                                          <docOrder intra="0">
                                           <slash>
                                            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                                             <varRef name="manuscript" slot="0"/>
                                            </treat>
                                            <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}manuscript)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='manuscript';"/>
                                           </slash>
                                          </docOrder>
                                         </conditionalSort>
                                         <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}leaf)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='leaf';"/>
                                        </slash>
                                        <gc op="=" card="1:1" comp="CCC">
                                         <data>
                                          <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
                                         </data>
                                         <varRef name="attachmentTargetID" slot="25"/>
                                        </gc>
                                       </filter>
                                      </docOrder>
                                      <first>
                                       <axis name="child" nodeTest="element(Q{http://schoenberginstitute.org/schema/collation}q)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schoenberginstitute.org/schema/collation'&amp;&amp;q.local=='q';"/>
                                      </first>
                                     </slash>
                                    </docOrder>
                                    <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name=='position'"/>
                                   </slash>
                                  </data>
                                 </convert>
                                 <str val=" "/>
                                </fn>
                               </cast>
                              </cvUntyped>
                             </arith>
                            </convert>
                            <choose line="1281">
                             <vc op="eq" onEmpty="0" comp="CCC">
                              <cast as="xs:string" emptiable="0">
                               <varRef name="ownQuireN" slot="24"/>
                              </cast>
                              <cast as="xs:string" emptiable="0">
                               <varRef name="attachmentTargetQuire" slot="26"/>
                              </cast>
                             </vc>
                             <valueOf line="1282" flags="l">
                              <convert from="xs:untypedAtomic" to="xs:string">
                               <varRef name="attachmentDeviationValue" slot="28"/>
                              </convert>
                             </valueOf>
                             <vc line="1285" op="ne" onEmpty="0" comp="CCC">
                              <cast as="xs:string" emptiable="0">
                               <varRef name="ownQuireN" slot="24"/>
                              </cast>
                              <cast as="xs:string" emptiable="0">
                               <varRef name="attachmentTargetQuire" slot="26"/>
                              </cast>
                             </vc>
                             <valueOf line="1287" flags="l">
                              <convert from="xs:double" to="xs:string">
                               <minus>
                                <cvUntyped to="xs:double">
                                 <varRef name="attachmentDeviationValue" slot="28"/>
                                </cvUntyped>
                               </minus>
                              </convert>
                             </valueOf>
                            </choose>
                           </let>
                          </doc>
                          <callT line="1291" name="attachment-method" bSlot="8">
                           <withParam name="Cx_A" flags="c" as="item()*">
                            <varRef line="1292" name="Cx_SQ" slot="2"/>
                           </withParam>
                           <withParam name="Cy_A" flags="c" as="xs:numeric?">
                            <arith line="1298" op="-" calc="a-a">
                             <cvUntyped to="xs:double">
                              <arith op="+" calc="a+a">
                               <cvUntyped to="xs:double">
                                <atomSing card="?" diag="1|0||+">
                                 <varRef name="Cy_SQ" slot="3"/>
                                </atomSing>
                               </cvUntyped>
                               <cvUntyped to="xs:double">
                                <data>
                                 <varRef name="parametricY" slot="17"/>
                                </data>
                               </cvUntyped>
                              </arith>
                             </cvUntyped>
                             <choose>
                              <compareToInt op="gt" val="0">
                               <cast as="xs:integer" emptiable="0">
                                <data>
                                 <varRef name="attachmentDeviation" slot="27"/>
                                </data>
                               </cast>
                              </compareToInt>
                              <int val="6"/>
                              <true/>
                              <int val="0"/>
                             </choose>
                            </arith>
                           </withParam>
                           <withParam name="countRegularBifolia" flags="c" as="xs:integer">
                            <varRef line="1300" name="countRegularBifolia" slot="4"/>
                           </withParam>
                           <withParam name="countRegularBifolia2" flags="c" as="item()*">
                            <varRef line="1302" name="countRegularBifolia2" slot="5"/>
                           </withParam>
                           <withParam name="lineLength" flags="c" as="document-node()">
                            <varRef line="1304" name="lineLength" slot="22"/>
                           </withParam>
                           <withParam name="parametricY" flags="c" as="document-node()">
                            <varRef line="1306" name="parametricY" slot="17"/>
                           </withParam>
                           <withParam name="attachmentDeviation" flags="c" as="document-node()">
                            <varRef line="1308" name="attachmentDeviation" slot="27"/>
                           </withParam>
                          </callT>
                         </let>
                        </let>
                       </let>
                      </let>
                      <true/>
                      <callT line="1313" name="attachment-method" bSlot="9">
                       <withParam name="Cx_A" flags="c" as="item()*">
                        <varRef line="1314" name="Cx_SQ" slot="2"/>
                       </withParam>
                       <withParam name="Cy_A" flags="c" as="document-node()">
                        <doc line="1326" base="file:/C:/Users/Utente/evt-viewer/app/data/visColl/collationXML_to_SVG_mod2.xsl" flags="t" validation="preserve">
                         <choose>
                          <or op="or">
                           <vc op="eq" onEmpty="0" comp="CAVC">
                            <cast as="xs:integer" emptiable="0">
                             <varRef name="leafPosition" slot="20"/>
                            </cast>
                            <cast as="xs:integer" emptiable="1">
                             <atomSing card="?" diag="2|0||cast as">
                              <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                             </atomSing>
                            </cast>
                           </vc>
                           <vc op="eq" onEmpty="0" comp="CAVC">
                            <cast as="xs:integer" emptiable="0">
                             <varRef name="leafPosition" slot="20"/>
                            </cast>
                            <arith op="+" calc="i+i">
                             <cast as="xs:integer" emptiable="1">
                              <atomSing card="?" diag="2|0||cast as">
                               <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                              </atomSing>
                             </cast>
                             <int val="1"/>
                            </arith>
                           </vc>
                          </or>
                          <valueOf line="1333" flags="l">
                           <convert from="xs:numeric" to="xs:string">
                            <arith op="+" calc="a+a">
                             <cvUntyped to="xs:double">
                              <arith op="+" calc="a+a">
                               <cvUntyped to="xs:double">
                                <arith op="+" calc="a+a">
                                 <cvUntyped to="xs:double">
                                  <atomSing card="?" diag="1|0||+">
                                   <varRef name="Cy_SQ" slot="3"/>
                                  </atomSing>
                                 </cvUntyped>
                                 <cvUntyped to="xs:double">
                                  <data>
                                   <varRef name="parametricY" slot="17"/>
                                  </data>
                                 </cvUntyped>
                                </arith>
                               </cvUntyped>
                               <arith op="*" calc="i*i">
                                <choose>
                                 <vc op="eq" onEmpty="0" comp="CAVC">
                                  <cast as="xs:integer" emptiable="1">
                                   <atomSing card="?" diag="2|0||cast as">
                                    <varRef name="left1_Right2_SQ" slot="10"/>
                                   </atomSing>
                                  </cast>
                                  <int val="1"/>
                                 </vc>
                                 <int val="1"/>
                                 <true/>
                                 <int val="-1"/>
                                </choose>
                                <int val="3"/>
                               </arith>
                              </arith>
                             </cvUntyped>
                             <cvUntyped to="xs:double">
                              <arith op="*" calc="a*a">
                               <int val="6"/>
                               <cvUntyped to="xs:double">
                                <atomSing card="?" diag="1|1||*">
                                 <varRef name="followingComponents_SQ" slot="8"/>
                                </atomSing>
                               </cvUntyped>
                              </arith>
                             </cvUntyped>
                            </arith>
                           </convert>
                          </valueOf>
                          <vc line="1336" op="lt" onEmpty="0" comp="CAVC">
                           <cast as="xs:integer" emptiable="0">
                            <varRef name="leafPosition" slot="20"/>
                           </cast>
                           <cast as="xs:integer" emptiable="1">
                            <atomSing card="?" diag="2|0||cast as">
                             <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                            </atomSing>
                           </cast>
                          </vc>
                          <valueOf line="1343" flags="l">
                           <convert from="xs:numeric" to="xs:string">
                            <arith op="+" calc="a+a">
                             <cvUntyped to="xs:double">
                              <arith op="+" calc="a+a">
                               <cvUntyped to="xs:double">
                                <atomSing card="?" diag="1|0||+">
                                 <varRef name="Cy_SQ" slot="3"/>
                                </atomSing>
                               </cvUntyped>
                               <cvUntyped to="xs:double">
                                <data>
                                 <varRef name="parametricY" slot="17"/>
                                </data>
                               </cvUntyped>
                              </arith>
                             </cvUntyped>
                             <arith op="+" calc="i+i">
                              <arith op="*" calc="i*i">
                               <choose>
                                <vc op="eq" onEmpty="0" comp="CAVC">
                                 <cast as="xs:integer" emptiable="1">
                                  <atomSing card="?" diag="2|0||cast as">
                                   <varRef name="left1_Right2" slot="11"/>
                                  </atomSing>
                                 </cast>
                                 <int val="1"/>
                                </vc>
                                <int val="1"/>
                                <true/>
                                <int val="-1"/>
                               </choose>
                               <int val="3"/>
                              </arith>
                              <int val="6"/>
                             </arith>
                            </arith>
                           </convert>
                          </valueOf>
                          <vc line="1346" op="gt" onEmpty="0" comp="CAVC">
                           <cast as="xs:integer" emptiable="0">
                            <varRef name="leafPosition" slot="20"/>
                           </cast>
                           <arith op="+" calc="i+i">
                            <cast as="xs:integer" emptiable="1">
                             <atomSing card="?" diag="2|0||cast as">
                              <varRef name="centralLeftLeafPos_SQ" slot="14"/>
                             </atomSing>
                            </cast>
                            <int val="1"/>
                           </arith>
                          </vc>
                          <valueOf line="1353" flags="l">
                           <convert from="xs:numeric" to="xs:string">
                            <arith op="+" calc="a+a">
                             <cvUntyped to="xs:double">
                              <arith op="-" calc="a-a">
                               <cvUntyped to="xs:double">
                                <arith op="+" calc="a+a">
                                 <cvUntyped to="xs:double">
                                  <arith op="+" calc="a+a">
                                   <cvUntyped to="xs:double">
                                    <atomSing card="?" diag="1|0||+">
                                     <varRef name="Cy_SQ" slot="3"/>
                                    </atomSing>
                                   </cvUntyped>
                                   <cvUntyped to="xs:double">
                                    <data>
                                     <varRef name="parametricY" slot="17"/>
                                    </data>
                                   </cvUntyped>
                                  </arith>
                                 </cvUntyped>
                                 <arith op="*" calc="i*i">
                                  <choose>
                                   <vc op="eq" onEmpty="0" comp="CAVC">
                                    <cast as="xs:integer" emptiable="1">
                                     <atomSing card="?" diag="2|0||cast as">
                                      <varRef name="left1_Right2_SQ" slot="10"/>
                                     </atomSing>
                                    </cast>
                                    <int val="1"/>
                                   </vc>
                                   <int val="1"/>
                                   <true/>
                                   <int val="-1"/>
                                  </choose>
                                  <int val="6"/>
                                 </arith>
                                </arith>
                               </cvUntyped>
                               <int val="3"/>
                              </arith>
                             </cvUntyped>
                             <cvUntyped to="xs:double">
                              <arith op="*" calc="a*a">
                               <int val="6"/>
                               <cvUntyped to="xs:double">
                                <atomSing card="?" diag="1|1||*">
                                 <varRef name="followingComponents_SQ" slot="8"/>
                                </atomSing>
                               </cvUntyped>
                              </arith>
                             </cvUntyped>
                            </arith>
                           </convert>
                          </valueOf>
                         </choose>
                        </doc>
                       </withParam>
                       <withParam name="countRegularBifolia" flags="c" as="xs:integer">
                        <varRef line="1358" name="countRegularBifolia" slot="4"/>
                       </withParam>
                       <withParam name="countRegularBifolia2" flags="c" as="item()*">
                        <varRef line="1360" name="countRegularBifolia2" slot="5"/>
                       </withParam>
                       <withParam name="lineLength" flags="c" as="document-node()">
                        <varRef line="1362" name="lineLength" slot="22"/>
                       </withParam>
                       <withParam name="parametricY" flags="c" as="document-node()">
                        <varRef line="1364" name="parametricY" slot="17"/>
                       </withParam>
                       <withParam name="positions_SQ" flags="c" as="item()*">
                        <varRef line="1366" name="positions_SQ" slot="12"/>
                       </withParam>
                      </callT>
                     </choose>
                    </forEach>
                   </choose>
                  </sequence>
                 </let>
                </let>
               </sequence>
              </choose>
             </sequence>
            </let>
           </let>
          </elem>
         </sequence>
        </elem>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <overridden/>
 <output>
  <property name="indent" value="yes"/>
  <property name="standalone" value="no"/>
  <property name="doctype-system" value="http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"/>
  <property name="encoding" value="utf-8"/>
  <property name="doctype-public" value="-//W3C//DTD SVG 1.1//EN"/>
  <property name="include-content-type" value="no"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="20"/>
  <property name="method" value="xml"/>
 </output>
 <decimalFormat decimal-separator="46" grouping-separator="44" digit="35" minus-sign="45" percent="37" per-mille="8240" zero-digit="48" exponent-separator="101" pattern-separator="59" infinity="Infinity" NaN="NaN"/>
</package>
<?Σ f53847c4?>
